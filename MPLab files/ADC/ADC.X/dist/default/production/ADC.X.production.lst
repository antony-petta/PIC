

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Sep 21 08:52:54 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32   000000                     
    33                           ; Generated 17/10/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4580 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     _RCREG	set	4014
    68   000000                     _TXREG	set	4013
    69   000000                     _SPBRG	set	4015
    70   000000                     _RCIF	set	31989
    71   000000                     _TXIF	set	31988
    72   000000                     _GO	set	32273
    73   000000                     _TRISA	set	3986
    74   000000                     _TRISB	set	3987
    75   000000                     _TRISC	set	3988
    76   000000                     _RCSTA	set	4011
    77   000000                     _TXSTA	set	4012
    78   000000                     _TRISD	set	3989
    79   000000                     _ADIF	set	31990
    80   000000                     _ADCON2	set	4032
    81   000000                     _ADCON1	set	4033
    82   000000                     _ADRES	set	4035
    83   000000                     _ADCON0	set	4034
    84                           
    85                           	psect	smallconst
    86   000600                     __psmallconst:
    87                           	callstack 0
    88   000600  00                 	db	0
    89   000601                     STR_1:
    90   000601  74                 	db	116	;'t'
    91   000602  65                 	db	101	;'e'
    92   000603  6D                 	db	109	;'m'
    93   000604  70                 	db	112	;'p'
    94   000605  20                 	db	32
    95   000606  76                 	db	118	;'v'
    96   000607  61                 	db	97	;'a'
    97   000608  6C                 	db	108	;'l'
    98   000609  75                 	db	117	;'u'
    99   00060A  65                 	db	101	;'e'
   100   00060B  20                 	db	32
   101   00060C  69                 	db	105	;'i'
   102   00060D  73                 	db	115	;'s'
   103   00060E  20                 	db	32
   104   00060F  25                 	db	37
   105   000610  34                 	db	52	;'4'
   106   000611  64                 	db	100	;'d'
   107   000612  20                 	db	32
   108   000613  0D                 	db	13
   109   000614  0A                 	db	10
   110   000615  00                 	db	0
   111   000616  00                 	db	0	; dummy byte at the end
   112   000000                     
   113                           ; #config settings
   114                           
   115                           	psect	cinit
   116   001536                     __pcinit:
   117                           	callstack 0
   118   001536                     start_initialization:
   119                           	callstack 0
   120   001536                     __initialization:
   121                           	callstack 0
   122                           
   123                           ; Clear objects allocated to BANK0 (36 bytes)
   124   001536  EE00  F060         	lfsr	0,__pbssBANK0
   125   00153A  0E24               	movlw	36
   126   00153C                     clear_0:
   127   00153C  6AEE               	clrf	postinc0,c
   128   00153E  06E8               	decf	wreg,f,c
   129   001540  E1FD               	bnz	clear_0
   130                           
   131                           ; Clear objects allocated to COMRAM (1 bytes)
   132   001542  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   133   001544                     end_of_initialization:
   134                           	callstack 0
   135   001544                     __end_of__initialization:
   136                           	callstack 0
   137   001544  0E00               	movlw	low (__Lsmallconst shr (0+16))
   138   001546  6EF8               	movwf	tblptru,c
   139   001548  0E06               	movlw	high __Lsmallconst
   140   00154A  6EF7               	movwf	tblptrh,c
   141   00154C  0100               	movlb	0
   142   00154E  EF9B  F006         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssCOMRAM
   145   00005E                     __pbssCOMRAM:
   146                           	callstack 0
   147   00005E                     _flags:
   148                           	callstack 0
   149   00005E                     	ds	1
   150                           
   151                           	psect	bssBANK0
   152   000060                     __pbssBANK0:
   153                           	callstack 0
   154   000060                     _width:
   155                           	callstack 0
   156   000060                     	ds	2
   157   000062                     _prec:
   158                           	callstack 0
   159   000062                     	ds	2
   160   000064                     _dbuf:
   161                           	callstack 0
   162   000064                     	ds	32
   163                           
   164                           	psect	cstackCOMRAM
   165   000001                     __pcstackCOMRAM:
   166                           	callstack 0
   167   000001                     ?_strlen:
   168                           	callstack 0
   169   000001                     ?___wmul:
   170                           	callstack 0
   171   000001                     ?___awdiv:
   172                           	callstack 0
   173   000001                     ?___awmod:
   174                           	callstack 0
   175   000001                     ?___xxtofl:
   176                           	callstack 0
   177   000001                     trx@b:
   178                           	callstack 0
   179   000001                     strlen@s:
   180                           	callstack 0
   181   000001                     ___wmul@multiplier:
   182                           	callstack 0
   183   000001                     ___awdiv@dividend:
   184                           	callstack 0
   185   000001                     ___awmod@dividend:
   186                           	callstack 0
   187   000001                     fputc@c:
   188                           	callstack 0
   189   000001                     delay@time:
   190                           	callstack 0
   191   000001                     ___xxtofl@val:
   192                           	callstack 0
   193                           
   194                           ; 4 bytes @ 0x0
   195   000001                     	ds	2
   196   000003                     fputc@fp:
   197                           	callstack 0
   198   000003                     strlen@a:
   199                           	callstack 0
   200   000003                     ___wmul@multiplicand:
   201                           	callstack 0
   202   000003                     ___awdiv@divisor:
   203                           	callstack 0
   204   000003                     ___awmod@divisor:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x2
   208   000003                     	ds	1
   209   000004                     ??_fputc:
   210                           
   211                           ; 1 bytes @ 0x3
   212   000004                     	ds	1
   213   000005                     ??_delay:
   214   000005                     ??___xxtofl:
   215   000005                     ___awdiv@counter:
   216                           	callstack 0
   217   000005                     ___awmod@counter:
   218                           	callstack 0
   219   000005                     ___wmul@product:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x4
   223   000005                     	ds	1
   224   000006                     ___awdiv@sign:
   225                           	callstack 0
   226   000006                     ___awmod@sign:
   227                           	callstack 0
   228   000006                     delay@i:
   229                           	callstack 0
   230                           
   231                           ; 4 bytes @ 0x5
   232   000006                     	ds	1
   233   000007                     ?_abs:
   234                           	callstack 0
   235   000007                     ?_read_prec_or_width:
   236                           	callstack 0
   237   000007                     read_prec_or_width@fmt:
   238                           	callstack 0
   239   000007                     ___awdiv@quotient:
   240                           	callstack 0
   241   000007                     abs@a:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x6
   245   000007                     	ds	1
   246   000008                     read_prec_or_width@ap:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x7
   250   000008                     	ds	1
   251   000009                     ??_abs:
   252   000009                     ___xxtofl@sign:
   253                           	callstack 0
   254   000009                     read_prec_or_width@c:
   255                           	callstack 0
   256   000009                     fputs@s:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x8
   260   000009                     	ds	1
   261   00000A                     ___xxtofl@exp:
   262                           	callstack 0
   263   00000A                     fputs@fp:
   264                           	callstack 0
   265   00000A                     read_prec_or_width@n:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x9
   269   00000A                     	ds	1
   270   00000B                     fputs@c:
   271                           	callstack 0
   272   00000B                     ___xxtofl@arg:
   273                           	callstack 0
   274                           
   275                           ; 4 bytes @ 0xA
   276   00000B                     	ds	1
   277   00000C                     fputs@i:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0xB
   281   00000C                     	ds	2
   282   00000E                     pad@fp:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0xD
   286   00000E                     	ds	1
   287   00000F                     ?___flmul:
   288                           	callstack 0
   289   00000F                     pad@buf:
   290                           	callstack 0
   291   00000F                     ___flmul@b:
   292                           	callstack 0
   293                           
   294                           ; 4 bytes @ 0xE
   295   00000F                     	ds	1
   296   000010                     pad@p:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0xF
   300   000010                     	ds	2
   301   000012                     ??_pad:
   302                           
   303                           ; 1 bytes @ 0x11
   304   000012                     	ds	1
   305   000013                     pad@i:
   306                           	callstack 0
   307   000013                     ___flmul@a:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x12
   311   000013                     	ds	2
   312   000015                     dtoa@fp:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x14
   316   000015                     	ds	1
   317   000016                     dtoa@d:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x15
   321   000016                     	ds	1
   322   000017                     ??___flmul:
   323                           
   324                           ; 1 bytes @ 0x16
   325   000017                     	ds	1
   326   000018                     _dtoa$595:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x17
   330   000018                     	ds	2
   331   00001A                     dtoa@w:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x19
   335   00001A                     	ds	1
   336   00001B                     ___flmul@sign:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x1A
   340   00001B                     	ds	1
   341   00001C                     dtoa@p:
   342                           	callstack 0
   343   00001C                     ___flmul@grs:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x1B
   347   00001C                     	ds	1
   348   00001D                     dtoa@s:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x1C
   352   00001D                     	ds	1
   353   00001E                     dtoa@i:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x1D
   357   00001E                     	ds	2
   358   000020                     ___flmul@aexp:
   359                           	callstack 0
   360   000020                     vfpfcnvrt@fp:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x1F
   364   000020                     	ds	1
   365   000021                     ___flmul@bexp:
   366                           	callstack 0
   367   000021                     vfpfcnvrt@fmt:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x20
   371   000021                     	ds	1
   372   000022                     vfpfcnvrt@ap:
   373                           	callstack 0
   374   000022                     ___flmul@prod:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x21
   378   000022                     	ds	1
   379   000023                     vfpfcnvrt@convarg:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x22
   383   000023                     	ds	3
   384   000026                     ___flmul@temp:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x25
   388   000026                     	ds	1
   389   000027                     vfpfcnvrt@cp:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x26
   393   000027                     	ds	1
   394   000028                     ?_vfprintf:
   395                           	callstack 0
   396   000028                     ?___fltol:
   397                           	callstack 0
   398   000028                     vfprintf@fp:
   399                           	callstack 0
   400   000028                     ___fltol@f1:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x27
   404   000028                     	ds	1
   405   000029                     vfprintf@fmt:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x28
   409   000029                     	ds	1
   410   00002A                     vfprintf@ap:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x29
   414   00002A                     	ds	1
   415   00002B                     vfprintf@cfmt:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x2A
   419   00002B                     	ds	1
   420   00002C                     ??___fltol:
   421   00002C                     ?_sprintf:
   422                           	callstack 0
   423   00002C                     sprintf@s:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x2B
   427   00002C                     	ds	1
   428   00002D                     sprintf@fmt:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x2C
   432   00002D                     	ds	3
   433   000030                     ___fltol@sign1:
   434                           	callstack 0
   435   000030                     sprintf@ap:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x2F
   439   000030                     	ds	1
   440   000031                     ___fltol@exp1:
   441                           	callstack 0
   442   000031                     sprintf@f:
   443                           	callstack 0
   444                           
   445                           ; 12 bytes @ 0x30
   446   000031                     	ds	12
   447   00003D                     main@cnv:
   448                           	callstack 0
   449                           
   450                           ; 25 bytes @ 0x3C
   451   00003D                     	ds	25
   452   000056                     main@adc:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x55
   456   000056                     	ds	2
   457   000058                     main@temp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x57
   461   000058                     	ds	2
   462   00005A                     main@i:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x59
   466   00005A                     	ds	2
   467   00005C                     main@a:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x5B
   471   00005C                     	ds	2
   472                           
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 14 in file "lm35.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  i               2   89[COMRAM] int 
   483 ;;  cnv            25   60[COMRAM] unsigned char [25]
   484 ;;  a               2   91[COMRAM] int 
   485 ;;  temp            2   87[COMRAM] int 
   486 ;;  adc             2   85[COMRAM] int 
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   496 ;;      Params:         0       0       0       0       0       0       0
   497 ;;      Locals:        33       0       0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0       0       0
   499 ;;      Totals:        33       0       0       0       0       0       0
   500 ;;Total ram usage:       33 bytes
   501 ;; Hardware stack levels required when called: 8
   502 ;; This function calls:
   503 ;;		___flmul
   504 ;;		___fltol
   505 ;;		___xxtofl
   506 ;;		_delay
   507 ;;		_sprintf
   508 ;;		_strlen
   509 ;;		_trx
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text0
   516   000D36                     __ptext0:
   517                           	callstack 0
   518   000D36                     _main:
   519                           	callstack 23
   520   000D36                     
   521                           ;lm35.c: 15:     TRISC=0X80;
   522   000D36  0E80               	movlw	128
   523   000D38  6E94               	movwf	148,c	;volatile
   524                           
   525                           ;lm35.c: 16:     TRISD=0X00;
   526   000D3A  0E00               	movlw	0
   527   000D3C  6E95               	movwf	149,c	;volatile
   528                           
   529                           ;lm35.c: 17:     TXSTA=0X24;
   530   000D3E  0E24               	movlw	36
   531   000D40  6EAC               	movwf	172,c	;volatile
   532                           
   533                           ;lm35.c: 18:     RCSTA=0X90;
   534   000D42  0E90               	movlw	144
   535   000D44  6EAB               	movwf	171,c	;volatile
   536                           
   537                           ;lm35.c: 19:     SPBRG=129;
   538   000D46  0E81               	movlw	129
   539   000D48  6EAF               	movwf	175,c	;volatile
   540                           
   541                           ;lm35.c: 20:     TRISB=0XF0;
   542   000D4A  0EF0               	movlw	240
   543   000D4C  6E93               	movwf	147,c	;volatile
   544   000D4E                     
   545                           ;lm35.c: 21:     TRISA=0xff;
   546   000D4E  6892               	setf	146,c	;volatile
   547                           
   548                           ;lm35.c: 23:     ADCON1=0X00;
   549   000D50  0E00               	movlw	0
   550   000D52  6EC1               	movwf	193,c	;volatile
   551                           
   552                           ;lm35.c: 25:     ADCON2=0x86;
   553   000D54  0E86               	movlw	134
   554   000D56  6EC0               	movwf	192,c	;volatile
   555   000D58                     l47:
   556                           
   557                           ;lm35.c: 28:        int adc,temp;;lm35.c: 29:        char cnv[25];;lm35.c: 30:        AD
      +                          CON0=0x01;
   558   000D58  0E01               	movlw	1
   559   000D5A  6EC2               	movwf	194,c	;volatile
   560   000D5C                     
   561                           ;lm35.c: 31:        delay(500);
   562   000D5C  0EF4               	movlw	244
   563   000D5E  6E01               	movwf	delay@time^0,c
   564   000D60  0E01               	movlw	1
   565   000D62  6E02               	movwf	(delay@time+1)^0,c
   566   000D64  0E00               	movlw	0
   567   000D66  6E03               	movwf	(delay@time+2)^0,c
   568   000D68  0E00               	movlw	0
   569   000D6A  6E04               	movwf	(delay@time+3)^0,c
   570   000D6C  ECDE  F009         	call	_delay	;wreg free
   571   000D70                     
   572                           ;lm35.c: 32:        GO=1;
   573   000D70  82C2               	bsf	4034,1,c	;volatile
   574   000D72                     l48:
   575   000D72  AC9E               	btfss	3998,6,c	;volatile
   576   000D74  EFBE  F006         	goto	u1561
   577   000D78  EFC0  F006         	goto	u1560
   578   000D7C                     u1561:
   579   000D7C  EFB9  F006         	goto	l48
   580   000D80                     u1560:
   581   000D80                     
   582                           ;lm35.c: 34:        ADIF=0;
   583   000D80  9C9E               	bcf	3998,6,c	;volatile
   584                           
   585                           ;lm35.c: 35:        adc=ADRES;
   586   000D82  CFC3 F056          	movff	4035,main@adc	;volatile
   587   000D86  CFC4 F057          	movff	4036,main@adc+1	;volatile
   588   000D8A                     
   589                           ;lm35.c: 36:        int a = 0 + ((float)(150ul - 0) / (308ul - 0)) * (adc-0);
   590   000D8A  0EC4               	movlw	196
   591   000D8C  6E13               	movwf	___flmul@a^0,c
   592   000D8E  0E59               	movlw	89
   593   000D90  6E14               	movwf	(___flmul@a+1)^0,c
   594   000D92  0EF9               	movlw	249
   595   000D94  6E15               	movwf	(___flmul@a+2)^0,c
   596   000D96  0E3E               	movlw	62
   597   000D98  6E16               	movwf	(___flmul@a+3)^0,c
   598   000D9A  C056  F001         	movff	main@adc,___xxtofl@val
   599   000D9E  C057  F002         	movff	main@adc+1,___xxtofl@val+1
   600   000DA2  0E00               	movlw	0
   601   000DA4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   602   000DA6  0EFF               	movlw	-1
   603   000DA8  6E03               	movwf	(___xxtofl@val+2)^0,c
   604   000DAA  6E04               	movwf	(___xxtofl@val+3)^0,c
   605   000DAC  0E01               	movlw	1
   606   000DAE  EC21  F005         	call	___xxtofl
   607   000DB2  C001  F00F         	movff	?___xxtofl,___flmul@b
   608   000DB6  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   609   000DBA  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   610   000DBE  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   611   000DC2  EC0C  F003         	call	___flmul	;wreg free
   612   000DC6  C00F  F028         	movff	?___flmul,___fltol@f1
   613   000DCA  C010  F029         	movff	?___flmul+1,___fltol@f1+1
   614   000DCE  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
   615   000DD2  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
   616   000DD6  EC37  F007         	call	___fltol	;wreg free
   617   000DDA  C028  F05C         	movff	?___fltol,main@a
   618   000DDE  C029  F05D         	movff	?___fltol+1,main@a+1
   619   000DE2                     
   620                           ;lm35.c: 37:         if(a!=temp){
   621   000DE2  5058               	movf	main@temp^0,w,c
   622   000DE4  185C               	xorwf	main@a^0,w,c
   623   000DE6  E109               	bnz	u1570
   624   000DE8  5059               	movf	(main@temp+1)^0,w,c
   625   000DEA  185D               	xorwf	(main@a+1)^0,w,c
   626   000DEC  B4D8               	btfsc	status,2,c
   627   000DEE  EFFB  F006         	goto	u1571
   628   000DF2  EFFD  F006         	goto	u1570
   629   000DF6                     u1571:
   630   000DF6  EFAC  F006         	goto	l47
   631   000DFA                     u1570:
   632   000DFA                     
   633                           ;lm35.c: 38:        sprintf(cnv,"temp value is %4d \r\n",a);
   634   000DFA  0E3D               	movlw	low main@cnv
   635   000DFC  6E2C               	movwf	sprintf@s^0,c
   636   000DFE  0E01               	movlw	low STR_1
   637   000E00  6E2D               	movwf	sprintf@fmt^0,c
   638   000E02  C05C  F02E         	movff	main@a,?_sprintf+2
   639   000E06  C05D  F02F         	movff	main@a+1,?_sprintf+3
   640   000E0A  EC3D  F00A         	call	_sprintf	;wreg free
   641   000E0E                     
   642                           ;lm35.c: 40:        for(int i=0;i<=strlen(cnv);i++){
   643   000E0E  0E00               	movlw	0
   644   000E10  6E5B               	movwf	(main@i+1)^0,c
   645   000E12  0E00               	movlw	0
   646   000E14  6E5A               	movwf	main@i^0,c
   647   000E16  EF16  F007         	goto	l1875
   648   000E1A                     l1871:
   649                           
   650                           ;lm35.c: 41:            trx(cnv[i]);
   651   000E1A  505A               	movf	main@i^0,w,c
   652   000E1C  0F3D               	addlw	low main@cnv
   653   000E1E  6ED9               	movwf	fsr2l,c
   654   000E20  6ADA               	clrf	fsr2h,c
   655   000E22  50DF               	movf	indf2,w,c
   656   000E24  ECA9  F00A         	call	_trx
   657   000E28                     
   658                           ;lm35.c: 42:        }
   659   000E28  4A5A               	infsnz	main@i^0,f,c
   660   000E2A  2A5B               	incf	(main@i+1)^0,f,c
   661   000E2C                     l1875:
   662   000E2C  0E3D               	movlw	low main@cnv
   663   000E2E  6E01               	movwf	strlen@s^0,c
   664   000E30  EC71  F00A         	call	_strlen	;wreg free
   665   000E34  505A               	movf	main@i^0,w,c
   666   000E36  5C01               	subwf	?_strlen^0,w,c
   667   000E38  505B               	movf	(main@i+1)^0,w,c
   668   000E3A  5802               	subwfb	(?_strlen+1)^0,w,c
   669   000E3C  B0D8               	btfsc	status,0,c
   670   000E3E  EF23  F007         	goto	u1581
   671   000E42  EF25  F007         	goto	u1580
   672   000E46                     u1581:
   673   000E46  EF0D  F007         	goto	l1871
   674   000E4A                     u1580:
   675   000E4A                     
   676                           ;lm35.c: 43:        delay(1000);
   677   000E4A  0EE8               	movlw	232
   678   000E4C  6E01               	movwf	delay@time^0,c
   679   000E4E  0E03               	movlw	3
   680   000E50  6E02               	movwf	(delay@time+1)^0,c
   681   000E52  0E00               	movlw	0
   682   000E54  6E03               	movwf	(delay@time+2)^0,c
   683   000E56  0E00               	movlw	0
   684   000E58  6E04               	movwf	(delay@time+3)^0,c
   685   000E5A  ECDE  F009         	call	_delay	;wreg free
   686   000E5E                     
   687                           ;lm35.c: 44:        temp=a;
   688   000E5E  C05C  F058         	movff	main@a,main@temp
   689   000E62  C05D  F059         	movff	main@a+1,main@temp+1
   690   000E66  EFAC  F006         	goto	l47
   691   000E6A  EF00  F000         	goto	start
   692   000E6E                     __end_of_main:
   693                           	callstack 0
   694                           
   695 ;; *************** function _trx *****************
   696 ;; Defined at:
   697 ;;		line 56 in file "lm35.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  b               1    wreg     unsigned char 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  b               1    0[COMRAM] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   711 ;;      Params:         0       0       0       0       0       0       0
   712 ;;      Locals:         1       0       0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0
   714 ;;      Totals:         1       0       0       0       0       0       0
   715 ;;Total ram usage:        1 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text1
   725   001552                     __ptext1:
   726                           	callstack 0
   727   001552                     _trx:
   728                           	callstack 30
   729                           
   730                           ;incstack = 0
   731                           ;trx@b stored from wreg
   732   001552  6E01               	movwf	trx@b^0,c
   733   001554                     l66:
   734   001554  A89E               	btfss	3998,4,c	;volatile
   735   001556  EFAF  F00A         	goto	u391
   736   00155A  EFB1  F00A         	goto	u390
   737   00155E                     u391:
   738   00155E  EFAA  F00A         	goto	l66
   739   001562                     u390:
   740   001562                     
   741                           ;lm35.c: 60:     TXIF=0;
   742   001562  989E               	bcf	3998,4,c	;volatile
   743   001564                     
   744                           ;lm35.c: 61:     TXREG=b;
   745   001564  C001  FFAD         	movff	trx@b,4013	;volatile
   746   001568  0012               	return		;funcret
   747   00156A                     __end_of_trx:
   748                           	callstack 0
   749                           
   750 ;; *************** function _strlen *****************
   751 ;; Defined at:
   752 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strlen.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  s               1    0[COMRAM] PTR const unsigned char 
   755 ;;		 -> main@cnv(25), 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  a               1    2[COMRAM] PTR const unsigned char 
   758 ;;		 -> main@cnv(25), 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  2    0[COMRAM] unsigned int 
   761 ;; Registers used:
   762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   768 ;;      Params:         2       0       0       0       0       0       0
   769 ;;      Locals:         1       0       0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0       0       0
   771 ;;      Totals:         3       0       0       0       0       0       0
   772 ;;Total ram usage:        3 bytes
   773 ;; Hardware stack levels used: 1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text2
   782   0014E2                     __ptext2:
   783                           	callstack 0
   784   0014E2                     _strlen:
   785                           	callstack 30
   786   0014E2  C001  F003         	movff	strlen@s,strlen@a
   787   0014E6  EF76  F00A         	goto	l1629
   788   0014EA                     l1627:
   789   0014EA  2A01               	incf	strlen@s^0,f,c
   790   0014EC                     l1629:
   791   0014EC  5001               	movf	strlen@s^0,w,c
   792   0014EE  6ED9               	movwf	fsr2l,c
   793   0014F0  6ADA               	clrf	fsr2h,c
   794   0014F2  50DF               	movf	indf2,w,c
   795   0014F4  A4D8               	btfss	status,2,c
   796   0014F6  EF7F  F00A         	goto	u1191
   797   0014FA  EF81  F00A         	goto	u1190
   798   0014FE                     u1191:
   799   0014FE  EF75  F00A         	goto	l1627
   800   001502                     u1190:
   801   001502  5003               	movf	strlen@a^0,w,c
   802   001504  5C01               	subwf	strlen@s^0,w,c
   803   001506  6E01               	movwf	?_strlen^0,c
   804   001508  6A02               	clrf	(?_strlen+1)^0,c
   805   00150A  BE01               	btfsc	?_strlen^0,7,c
   806   00150C  0602               	decf	(?_strlen+1)^0,f,c
   807   00150E  0012               	return		;funcret
   808   001510                     __end_of_strlen:
   809                           	callstack 0
   810                           
   811 ;; *************** function _sprintf *****************
   812 ;; Defined at:
   813 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  s               1   43[COMRAM] PTR unsigned char 
   816 ;;		 -> main@cnv(25), 
   817 ;;  fmt             1   44[COMRAM] PTR const unsigned char 
   818 ;;		 -> STR_1(21), 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  f              12   48[COMRAM] struct _IO_FILE
   821 ;;  ret             2    0        int 
   822 ;;  ap              1   47[COMRAM] PTR void [1]
   823 ;;		 -> ?_sprintf(2), 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  2   43[COMRAM] int 
   826 ;; Registers used:
   827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   833 ;;      Params:         4       0       0       0       0       0       0
   834 ;;      Locals:        13       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0
   836 ;;      Totals:        17       0       0       0       0       0       0
   837 ;;Total ram usage:       17 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 7
   840 ;; This function calls:
   841 ;;		_vfprintf
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text3
   848   00147A                     __ptext3:
   849                           	callstack 0
   850   00147A                     _sprintf:
   851                           	callstack 23
   852   00147A  0E2E               	movlw	low (?_sprintf+2)
   853   00147C  6E30               	movwf	sprintf@ap^0,c
   854   00147E  C02C  F031         	movff	sprintf@s,sprintf@f
   855   001482  0E00               	movlw	0
   856   001484  6E35               	movwf	(sprintf@f+4)^0,c
   857   001486  0E00               	movlw	0
   858   001488  6E34               	movwf	(sprintf@f+3)^0,c
   859   00148A  0E00               	movlw	0
   860   00148C  6E3C               	movwf	(sprintf@f+11)^0,c
   861   00148E  0E00               	movlw	0
   862   001490  6E3B               	movwf	(sprintf@f+10)^0,c
   863   001492  0E31               	movlw	low sprintf@f
   864   001494  6E28               	movwf	vfprintf@fp^0,c
   865   001496  C02D  F029         	movff	sprintf@fmt,vfprintf@fmt
   866   00149A  0E30               	movlw	low sprintf@ap
   867   00149C  6E2A               	movwf	vfprintf@ap^0,c
   868   00149E  EC20  F00A         	call	_vfprintf	;wreg free
   869   0014A2  502C               	movf	sprintf@s^0,w,c
   870   0014A4  2434               	addwf	(sprintf@f+3)^0,w,c
   871   0014A6  6ED9               	movwf	fsr2l,c
   872   0014A8  6ADA               	clrf	fsr2h,c
   873   0014AA  6ADF               	clrf	indf2,c
   874   0014AC  0012               	return		;funcret
   875   0014AE                     __end_of_sprintf:
   876                           	callstack 0
   877                           
   878 ;; *************** function _vfprintf *****************
   879 ;; Defined at:
   880 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  fp              1   39[COMRAM] PTR struct _IO_FILE
   883 ;;		 -> sprintf@f(12), 
   884 ;;  fmt             1   40[COMRAM] PTR const unsigned char 
   885 ;;		 -> STR_1(21), 
   886 ;;  ap              1   41[COMRAM] PTR PTR void 
   887 ;;		 -> sprintf@ap(1), 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  cfmt            1   42[COMRAM] PTR unsigned char 
   890 ;;		 -> STR_1(21), 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  2   39[COMRAM] int 
   893 ;; Registers used:
   894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   900 ;;      Params:         3       0       0       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0
   903 ;;      Totals:         4       0       0       0       0       0       0
   904 ;;Total ram usage:        4 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 6
   907 ;; This function calls:
   908 ;;		_vfpfcnvrt
   909 ;; This function is called by:
   910 ;;		_sprintf
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text4
   915   001440                     __ptext4:
   916                           	callstack 0
   917   001440                     _vfprintf:
   918                           	callstack 23
   919   001440                     
   920                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   921   001440  C029  F02B         	movff	vfprintf@fmt,vfprintf@cfmt
   922                           
   923                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   924   001444  EF2C  F00A         	goto	l1603
   925   001448                     l1601:
   926                           
   927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   928   001448  C028  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
   929   00144C  0E2B               	movlw	low vfprintf@cfmt
   930   00144E  6E21               	movwf	vfpfcnvrt@fmt^0,c
   931   001450  C02A  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
   932   001454  ECBA  F007         	call	_vfpfcnvrt	;wreg free
   933   001458                     l1603:
   934                           
   935                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   936   001458  C02B  FFF6         	movff	vfprintf@cfmt,tblptrl
   937   00145C                     	if	0	;There is only one active tblptr byte
   938   00145C                     	endif
   939   00145C                     	if	0	;tblptru may be non-zero
   940   00145C                     	endif
   941   00145C                     	if	0	;tblptru may be non-zero
   942   00145C                     	endif
   943   00145C  0008               	tblrd		*
   944   00145E  50F5               	movf	tablat,w,c
   945   001460  0900               	iorlw	0
   946   001462  A4D8               	btfss	status,2,c
   947   001464  EF36  F00A         	goto	u1171
   948   001468  EF38  F00A         	goto	u1170
   949   00146C                     u1171:
   950   00146C  EF24  F00A         	goto	l1601
   951   001470                     u1170:
   952   001470                     
   953                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   954   001470  0E00               	movlw	0
   955   001472  6E29               	movwf	(?_vfprintf+1)^0,c
   956   001474  0E00               	movlw	0
   957   001476  6E28               	movwf	?_vfprintf^0,c
   958   001478  0012               	return		;funcret
   959   00147A                     __end_of_vfprintf:
   960                           	callstack 0
   961                           
   962 ;; *************** function _vfpfcnvrt *****************
   963 ;; Defined at:
   964 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
   967 ;;		 -> sprintf@f(12), 
   968 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
   969 ;;		 -> vfprintf@cfmt(1), 
   970 ;;  ap              1   33[COMRAM] PTR PTR void 
   971 ;;		 -> sprintf@ap(1), 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  convarg         4   34[COMRAM] struct .
   974 ;;  cp              1   38[COMRAM] PTR unsigned char 
   975 ;;		 -> STR_1(21), 
   976 ;;  done            1    0        _Bool 
   977 ;;  c               1    0        unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   987 ;;      Params:         3       0       0       0       0       0       0
   988 ;;      Locals:         5       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0
   990 ;;      Totals:         8       0       0       0       0       0       0
   991 ;;Total ram usage:        8 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 5
   994 ;; This function calls:
   995 ;;		_dtoa
   996 ;;		_fputc
   997 ;;		_read_prec_or_width
   998 ;; This function is called by:
   999 ;;		_vfprintf
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text5
  1004   000F74                     __ptext5:
  1005                           	callstack 0
  1006   000F74                     _vfpfcnvrt:
  1007                           	callstack 23
  1008   000F74                     
  1009                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1010   000F74  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1011   000F76  6ED9               	movwf	fsr2l,c
  1012   000F78  6ADA               	clrf	fsr2h,c
  1013   000F7A  CFDF FFF6          	movff	indf2,tblptrl
  1014   000F7E                     	if	0	;There is only one active tblptr byte
  1015   000F7E                     	endif
  1016   000F7E                     	if	0	;tblptru may be non-zero
  1017   000F7E                     	endif
  1018   000F7E                     	if	0	;tblptru may be non-zero
  1019   000F7E                     	endif
  1020   000F7E  0008               	tblrd		*
  1021   000F80  50F5               	movf	tablat,w,c
  1022   000F82  0A25               	xorlw	37
  1023   000F84  A4D8               	btfss	status,2,c
  1024   000F86  EFC7  F007         	goto	u1131
  1025   000F8A  EFC9  F007         	goto	u1130
  1026   000F8E                     u1131:
  1027   000F8E  EF2B  F008         	goto	l1593
  1028   000F92                     u1130:
  1029   000F92                     
  1030                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1031   000F92  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1032   000F94  6ED9               	movwf	fsr2l,c
  1033   000F96  6ADA               	clrf	fsr2h,c
  1034   000F98  2ADF               	incf	indf2,f,c
  1035   000F9A                     
  1036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1037   000F9A  0E00               	movlw	0
  1038   000F9C  0100               	movlb	0	; () banked
  1039   000F9E  6F61               	movwf	(_width+1)& (0+255),b
  1040   000FA0  0E00               	movlw	0
  1041   000FA2  6F60               	movwf	_width& (0+255),b
  1042   000FA4  C060  F05E         	movff	_width,_flags
  1043   000FA8                     
  1044                           ; BSR set to: 0
  1045                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1046   000FA8  6962               	setf	_prec& (0+255),b
  1047   000FAA  6963               	setf	(_prec+1)& (0+255),b
  1048   000FAC                     
  1049                           ; BSR set to: 0
  1050                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1051   000FAC  C021  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1052   000FB0  C022  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1053   000FB4  EC4A  F009         	call	_read_prec_or_width	;wreg free
  1054   000FB8  C007  F060         	movff	?_read_prec_or_width,_width
  1055   000FBC  C008  F061         	movff	?_read_prec_or_width+1,_width+1
  1056   000FC0                     
  1057                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1058   000FC0  0100               	movlb	0	; () banked
  1059   000FC2  BF61               	btfsc	(_width+1)& (0+255),7,b
  1060   000FC4  EFE8  F007         	goto	u1140
  1061   000FC8  EFE6  F007         	goto	u1141
  1062   000FCC                     u1141:
  1063   000FCC  EFED  F007         	goto	l1575
  1064   000FD0                     u1140:
  1065   000FD0                     
  1066                           ; BSR set to: 0
  1067                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1068   000FD0  805E               	bsf	_flags^0,0,c
  1069                           
  1070                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1071   000FD2  6D60               	negf	_width& (0+255),b
  1072   000FD4  1F61               	comf	(_width+1)& (0+255),f,b
  1073   000FD6  B0D8               	btfsc	status,0,c
  1074   000FD8  2B61               	incf	(_width+1)& (0+255),f,b
  1075   000FDA                     l1575:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1079   000FDA  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1080   000FDC  6ED9               	movwf	fsr2l,c
  1081   000FDE  6ADA               	clrf	fsr2h,c
  1082   000FE0  50DF               	movf	indf2,w,c
  1083   000FE2  6E27               	movwf	vfpfcnvrt@cp^0,c
  1084   000FE4                     
  1085                           ; BSR set to: 0
  1086                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1087   000FE4  C027  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1088   000FE8                     	if	0	;There is only one active tblptr byte
  1089   000FE8                     	endif
  1090   000FE8                     	if	0	;tblptru may be non-zero
  1091   000FE8                     	endif
  1092   000FE8                     	if	0	;tblptru may be non-zero
  1093   000FE8                     	endif
  1094   000FE8  0008               	tblrd		*
  1095   000FEA  50F5               	movf	tablat,w,c
  1096   000FEC  0A64               	xorlw	100
  1097   000FEE  B4D8               	btfsc	status,2,c
  1098   000FF0  EFFC  F007         	goto	u1151
  1099   000FF4  EFFE  F007         	goto	u1150
  1100   000FF8                     u1151:
  1101   000FF8  EF0A  F008         	goto	l1581
  1102   000FFC                     u1150:
  1103   000FFC                     
  1104                           ; BSR set to: 0
  1105   000FFC  C027  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1106   001000                     	if	0	;There is only one active tblptr byte
  1107   001000                     	endif
  1108   001000                     	if	0	;tblptru may be non-zero
  1109   001000                     	endif
  1110   001000                     	if	0	;tblptru may be non-zero
  1111   001000                     	endif
  1112   001000  0008               	tblrd		*
  1113   001002  50F5               	movf	tablat,w,c
  1114   001004  0A69               	xorlw	105
  1115   001006  A4D8               	btfss	status,2,c
  1116   001008  EF08  F008         	goto	u1161
  1117   00100C  EF0A  F008         	goto	u1160
  1118   001010                     u1161:
  1119   001010  EF25  F008         	goto	l1589
  1120   001014                     u1160:
  1121   001014                     l1581:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1125   001014  5022               	movf	vfpfcnvrt@ap^0,w,c
  1126   001016  6ED9               	movwf	fsr2l,c
  1127   001018  6ADA               	clrf	fsr2h,c
  1128   00101A  0E02               	movlw	2
  1129   00101C  26DF               	addwf	indf2,f,c
  1130   00101E  5CDF               	subwf	indf2,w,c
  1131   001020  6ED9               	movwf	fsr2l,c
  1132   001022  6ADA               	clrf	fsr2h,c
  1133   001024  CFDE F023          	movff	postinc2,vfpfcnvrt@convarg
  1134   001028  CFDE F024          	movff	postinc2,vfpfcnvrt@convarg+1
  1135   00102C                     
  1136                           ; BSR set to: 0
  1137                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1138   00102C  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1139   00102E  6ED9               	movwf	fsr2l,c
  1140   001030  6ADA               	clrf	fsr2h,c
  1141   001032  2827               	incf	vfpfcnvrt@cp^0,w,c
  1142   001034  6EDF               	movwf	indf2,c
  1143   001036                     
  1144                           ; BSR set to: 0
  1145                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1146   001036  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  1147   00103A  C023  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  1148   00103E  C024  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1149   001042  ECFB  F005         	call	_dtoa	;wreg free
  1150   001046  EF3A  F008         	goto	l811
  1151   00104A                     l1589:
  1152                           
  1153                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1154   00104A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1155   00104C  6ED9               	movwf	fsr2l,c
  1156   00104E  6ADA               	clrf	fsr2h,c
  1157   001050  2ADF               	incf	indf2,f,c
  1158   001052  EF3A  F008         	goto	l811
  1159   001056                     l1593:
  1160                           
  1161                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1162   001056  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1163   001058  6ED9               	movwf	fsr2l,c
  1164   00105A  6ADA               	clrf	fsr2h,c
  1165   00105C  CFDF FFF6          	movff	indf2,tblptrl
  1166   001060                     	if	0	;There is only one active tblptr byte
  1167   001060                     	endif
  1168   001060                     	if	0	;tblptru may be non-zero
  1169   001060                     	endif
  1170   001060                     	if	0	;tblptru may be non-zero
  1171   001060                     	endif
  1172   001060  0008               	tblrd		*
  1173   001062  50F5               	movf	tablat,w,c
  1174   001064  6E01               	movwf	fputc@c^0,c
  1175   001066  6A02               	clrf	(fputc@c+1)^0,c
  1176   001068  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1177   00106C  ECF5  F008         	call	_fputc	;wreg free
  1178   001070  EF25  F008         	goto	l1589
  1179   001074                     l811:
  1180   001074  0012               	return		;funcret
  1181   001076                     __end_of_vfpfcnvrt:
  1182                           	callstack 0
  1183                           
  1184 ;; *************** function _read_prec_or_width *****************
  1185 ;; Defined at:
  1186 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  1189 ;;		 -> vfprintf@cfmt(1), 
  1190 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  1191 ;;		 -> sprintf@ap(1), 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  c               1    8[COMRAM] unsigned char 
  1194 ;;  n               2    9[COMRAM] int 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  2    6[COMRAM] int 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1204 ;;      Params:         2       0       0       0       0       0       0
  1205 ;;      Locals:         3       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0
  1207 ;;      Totals:         5       0       0       0       0       0       0
  1208 ;;Total ram usage:        5 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 1
  1211 ;; This function calls:
  1212 ;;		___wmul
  1213 ;; This function is called by:
  1214 ;;		_vfpfcnvrt
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text6
  1219   001294                     __ptext6:
  1220                           	callstack 0
  1221   001294                     _read_prec_or_width:
  1222                           	callstack 26
  1223   001294                     
  1224                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1225   001294  0E00               	movlw	0
  1226   001296  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1227   001298  0E00               	movlw	0
  1228   00129A  6E0A               	movwf	read_prec_or_width@n^0,c
  1229   00129C                     
  1230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1231   00129C  5007               	movf	read_prec_or_width@fmt^0,w,c
  1232   00129E  6ED9               	movwf	fsr2l,c
  1233   0012A0  6ADA               	clrf	fsr2h,c
  1234   0012A2  CFDF FFF6          	movff	indf2,tblptrl
  1235   0012A6                     	if	0	;There is only one active tblptr byte
  1236   0012A6                     	endif
  1237   0012A6                     	if	0	;tblptru may be non-zero
  1238   0012A6                     	endif
  1239   0012A6                     	if	0	;tblptru may be non-zero
  1240   0012A6                     	endif
  1241   0012A6  0008               	tblrd		*
  1242   0012A8  50F5               	movf	tablat,w,c
  1243   0012AA  0A2A               	xorlw	42
  1244   0012AC  A4D8               	btfss	status,2,c
  1245   0012AE  EF5B  F009         	goto	u1111
  1246   0012B2  EF5D  F009         	goto	u1110
  1247   0012B6                     u1111:
  1248   0012B6  EF83  F009         	goto	l1559
  1249   0012BA                     u1110:
  1250   0012BA                     
  1251                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1252   0012BA  5007               	movf	read_prec_or_width@fmt^0,w,c
  1253   0012BC  6ED9               	movwf	fsr2l,c
  1254   0012BE  6ADA               	clrf	fsr2h,c
  1255   0012C0  2ADF               	incf	indf2,f,c
  1256   0012C2                     
  1257                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1258   0012C2  5008               	movf	read_prec_or_width@ap^0,w,c
  1259   0012C4  6ED9               	movwf	fsr2l,c
  1260   0012C6  6ADA               	clrf	fsr2h,c
  1261   0012C8  0E02               	movlw	2
  1262   0012CA  26DF               	addwf	indf2,f,c
  1263   0012CC  5CDF               	subwf	indf2,w,c
  1264   0012CE  6ED9               	movwf	fsr2l,c
  1265   0012D0  6ADA               	clrf	fsr2h,c
  1266   0012D2  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  1267   0012D6  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  1268                           
  1269                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1270   0012DA  EF94  F009         	goto	l799
  1271   0012DE                     l1555:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1274   0012DE  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1275   0012E2  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1276   0012E6  0E00               	movlw	0
  1277   0012E8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1278   0012EA  0E0A               	movlw	10
  1279   0012EC  6E03               	movwf	___wmul@multiplicand^0,c
  1280   0012EE  EC88  F00A         	call	___wmul	;wreg free
  1281   0012F2  5009               	movf	read_prec_or_width@c^0,w,c
  1282   0012F4  2401               	addwf	?___wmul^0,w,c
  1283   0012F6  6E0A               	movwf	read_prec_or_width@n^0,c
  1284   0012F8  0E00               	movlw	0
  1285   0012FA  2002               	addwfc	(?___wmul+1)^0,w,c
  1286   0012FC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1287   0012FE                     
  1288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1289   0012FE  5007               	movf	read_prec_or_width@fmt^0,w,c
  1290   001300  6ED9               	movwf	fsr2l,c
  1291   001302  6ADA               	clrf	fsr2h,c
  1292   001304  2ADF               	incf	indf2,f,c
  1293   001306                     l1559:
  1294                           
  1295                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1296   001306  5007               	movf	read_prec_or_width@fmt^0,w,c
  1297   001308  6ED9               	movwf	fsr2l,c
  1298   00130A  6ADA               	clrf	fsr2h,c
  1299   00130C  CFDF FFF6          	movff	indf2,tblptrl
  1300   001310                     	if	0	;There is only one active tblptr byte
  1301   001310                     	endif
  1302   001310                     	if	0	;tblptru may be non-zero
  1303   001310                     	endif
  1304   001310                     	if	0	;tblptru may be non-zero
  1305   001310                     	endif
  1306   001310  0008               	tblrd		*
  1307   001312  50F5               	movf	tablat,w,c
  1308   001314  0FD0               	addlw	208
  1309   001316  6E09               	movwf	read_prec_or_width@c^0,c
  1310   001318  0E09               	movlw	9
  1311   00131A  6409               	cpfsgt	read_prec_or_width@c^0,c
  1312   00131C  EF92  F009         	goto	u1121
  1313   001320  EF94  F009         	goto	u1120
  1314   001324                     u1121:
  1315   001324  EF6F  F009         	goto	l1555
  1316   001328                     u1120:
  1317   001328                     l799:
  1318                           
  1319                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1320   001328  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1321   00132C  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1322   001330  0012               	return		;funcret
  1323   001332                     __end_of_read_prec_or_width:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function ___wmul *****************
  1327 ;; Defined at:
  1328 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  multiplier      2    0[COMRAM] unsigned int 
  1331 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  product         2    4[COMRAM] unsigned int 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  2    0[COMRAM] unsigned int 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0, prodl, prodh
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1343 ;;      Params:         4       0       0       0       0       0       0
  1344 ;;      Locals:         2       0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0
  1346 ;;      Totals:         6       0       0       0       0       0       0
  1347 ;;Total ram usage:        6 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_read_prec_or_width
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text7
  1357   001510                     __ptext7:
  1358                           	callstack 0
  1359   001510                     ___wmul:
  1360                           	callstack 26
  1361   001510  5001               	movf	___wmul@multiplier^0,w,c
  1362   001512  0203               	mulwf	___wmul@multiplicand^0,c
  1363   001514  CFF3 F005          	movff	prodl,___wmul@product
  1364   001518  CFF4 F006          	movff	prodh,___wmul@product+1
  1365   00151C  5001               	movf	___wmul@multiplier^0,w,c
  1366   00151E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1367   001520  50F3               	movf	243,w,c
  1368   001522  2606               	addwf	(___wmul@product+1)^0,f,c
  1369   001524  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1370   001526  0203               	mulwf	___wmul@multiplicand^0,c
  1371   001528  50F3               	movf	243,w,c
  1372   00152A  2606               	addwf	(___wmul@product+1)^0,f,c
  1373   00152C  C005  F001         	movff	___wmul@product,?___wmul
  1374   001530  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1375   001534  0012               	return		;funcret
  1376   001536                     __end_of___wmul:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function _dtoa *****************
  1380 ;; Defined at:
  1381 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  1384 ;;		 -> sprintf@f(12), 
  1385 ;;  d               2   21[COMRAM] int 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  i               2   29[COMRAM] int 
  1388 ;;  w               2   25[COMRAM] int 
  1389 ;;  s               1   28[COMRAM] unsigned char 
  1390 ;;  p               1   27[COMRAM] _Bool 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1400 ;;      Params:         3       0       0       0       0       0       0
  1401 ;;      Locals:         8       0       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0
  1403 ;;      Totals:        11       0       0       0       0       0       0
  1404 ;;Total ram usage:       11 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 4
  1407 ;; This function calls:
  1408 ;;		___awdiv
  1409 ;;		___awmod
  1410 ;;		_abs
  1411 ;;		_pad
  1412 ;; This function is called by:
  1413 ;;		_vfpfcnvrt
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text8
  1418   000BF6                     __ptext8:
  1419                           	callstack 0
  1420   000BF6                     _dtoa:
  1421                           	callstack 23
  1422   000BF6                     
  1423                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1424   000BF6  0E01               	movlw	1
  1425   000BF8  6E1C               	movwf	dtoa@p^0,c
  1426   000BFA                     
  1427                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1428   000BFA  BE17               	btfsc	(dtoa@d+1)^0,7,c
  1429   000BFC  EF02  F006         	goto	u1031
  1430   000C00  EF05  F006         	goto	u1030
  1431   000C04                     u1031:
  1432   000C04  0E01               	movlw	1
  1433   000C06  EF06  F006         	goto	u1040
  1434   000C0A                     u1030:
  1435   000C0A  0E00               	movlw	0
  1436   000C0C                     u1040:
  1437   000C0C  6E1D               	movwf	dtoa@s^0,c
  1438   000C0E                     
  1439                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1440   000C0E  C060  F01A         	movff	_width,dtoa@w
  1441   000C12  C061  F01B         	movff	_width+1,dtoa@w+1
  1442   000C16                     
  1443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  1444   000C16  501D               	movf	dtoa@s^0,w,c
  1445   000C18  B4D8               	btfsc	status,2,c
  1446   000C1A  EF11  F006         	goto	u1051
  1447   000C1E  EF13  F006         	goto	u1050
  1448   000C22                     u1051:
  1449   000C22  EF2A  F006         	goto	l784
  1450   000C26                     u1050:
  1451   000C26                     
  1452                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  1453   000C26  061A               	decf	dtoa@w^0,f,c
  1454   000C28  A0D8               	btfss	status,0,c
  1455   000C2A  061B               	decf	(dtoa@w+1)^0,f,c
  1456   000C2C                     
  1457                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1458   000C2C  501D               	movf	dtoa@s^0,w,c
  1459   000C2E  A4D8               	btfss	status,2,c
  1460   000C30  EF1C  F006         	goto	u1061
  1461   000C34  EF1E  F006         	goto	u1060
  1462   000C38                     u1061:
  1463   000C38  EF24  F006         	goto	l1515
  1464   000C3C                     u1060:
  1465   000C3C  0E00               	movlw	0
  1466   000C3E  6E19               	movwf	(_dtoa$595+1)^0,c
  1467   000C40  0E2B               	movlw	43
  1468   000C42  6E18               	movwf	_dtoa$595^0,c
  1469   000C44  EF28  F006         	goto	l1517
  1470   000C48                     l1515:
  1471   000C48  0E00               	movlw	0
  1472   000C4A  6E19               	movwf	(_dtoa$595+1)^0,c
  1473   000C4C  0E2D               	movlw	45
  1474   000C4E  6E18               	movwf	_dtoa$595^0,c
  1475   000C50                     l1517:
  1476   000C50  C018  F01D         	movff	_dtoa$595,dtoa@s
  1477   000C54                     l784:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1480   000C54  0E00               	movlw	0
  1481   000C56  6E1F               	movwf	(dtoa@i+1)^0,c
  1482   000C58  0E1F               	movlw	31
  1483   000C5A  6E1E               	movwf	dtoa@i^0,c
  1484   000C5C                     
  1485                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1486   000C5C  0E00               	movlw	0
  1487   000C5E  0100               	movlb	0	; () banked
  1488   000C60  6F83               	movwf	(_dbuf+31)& (0+255),b
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1491   000C62  EF60  F006         	goto	l1531
  1492   000C66                     l1521:
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  1495   000C66  061E               	decf	dtoa@i^0,f,c
  1496   000C68  A0D8               	btfss	status,0,c
  1497   000C6A  061F               	decf	(dtoa@i+1)^0,f,c
  1498   000C6C                     
  1499                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1500   000C6C  501E               	movf	dtoa@i^0,w,c
  1501   000C6E  0F64               	addlw	low _dbuf
  1502   000C70  6ED9               	movwf	fsr2l,c
  1503   000C72  6ADA               	clrf	fsr2h,c
  1504   000C74  C016  F001         	movff	dtoa@d,___awmod@dividend
  1505   000C78  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  1506   000C7C  0E00               	movlw	0
  1507   000C7E  6E04               	movwf	(___awmod@divisor+1)^0,c
  1508   000C80  0E0A               	movlw	10
  1509   000C82  6E03               	movwf	___awmod@divisor^0,c
  1510   000C84  EC9D  F008         	call	___awmod	;wreg free
  1511   000C88  C001  F007         	movff	?___awmod,abs@a
  1512   000C8C  C002  F008         	movff	?___awmod+1,abs@a+1
  1513   000C90  EC57  F00A         	call	_abs	;wreg free
  1514   000C94  5007               	movf	?_abs^0,w,c
  1515   000C96  0F30               	addlw	48
  1516   000C98  6EDF               	movwf	indf2,c
  1517   000C9A                     
  1518                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1519   000C9A  0E00               	movlw	0
  1520   000C9C  6E1C               	movwf	dtoa@p^0,c
  1521   000C9E                     
  1522                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  1523   000C9E  061A               	decf	dtoa@w^0,f,c
  1524   000CA0  A0D8               	btfss	status,0,c
  1525   000CA2  061B               	decf	(dtoa@w+1)^0,f,c
  1526   000CA4                     
  1527                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1528   000CA4  C016  F001         	movff	dtoa@d,___awdiv@dividend
  1529   000CA8  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  1530   000CAC  0E00               	movlw	0
  1531   000CAE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1532   000CB0  0E0A               	movlw	10
  1533   000CB2  6E03               	movwf	___awdiv@divisor^0,c
  1534   000CB4  EC3B  F008         	call	___awdiv	;wreg free
  1535   000CB8  C001  F016         	movff	?___awdiv,dtoa@d
  1536   000CBC  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  1537   000CC0                     l1531:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1540   000CC0  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  1541   000CC2  EF6B  F006         	goto	u1071
  1542   000CC6  501F               	movf	(dtoa@i+1)^0,w,c
  1543   000CC8  E108               	bnz	u1070
  1544   000CCA  041E               	decf	dtoa@i^0,w,c
  1545   000CCC  A0D8               	btfss	status,0,c
  1546   000CCE  EF6B  F006         	goto	u1071
  1547   000CD2  EF6D  F006         	goto	u1070
  1548   000CD6                     u1071:
  1549   000CD6  EF7E  F006         	goto	l1537
  1550   000CDA                     u1070:
  1551   000CDA  5016               	movf	dtoa@d^0,w,c
  1552   000CDC  1017               	iorwf	(dtoa@d+1)^0,w,c
  1553   000CDE  A4D8               	btfss	status,2,c
  1554   000CE0  EF74  F006         	goto	u1081
  1555   000CE4  EF76  F006         	goto	u1080
  1556   000CE8                     u1081:
  1557   000CE8  EF33  F006         	goto	l1521
  1558   000CEC                     u1080:
  1559   000CEC  501C               	movf	dtoa@p^0,w,c
  1560   000CEE  A4D8               	btfss	status,2,c
  1561   000CF0  EF7C  F006         	goto	u1091
  1562   000CF4  EF7E  F006         	goto	u1090
  1563   000CF8                     u1091:
  1564   000CF8  EF33  F006         	goto	l1521
  1565   000CFC                     u1090:
  1566   000CFC                     l1537:
  1567                           
  1568                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  1569   000CFC  501D               	movf	dtoa@s^0,w,c
  1570   000CFE  B4D8               	btfsc	status,2,c
  1571   000D00  EF84  F006         	goto	u1101
  1572   000D04  EF86  F006         	goto	u1100
  1573   000D08                     u1101:
  1574   000D08  EF8F  F006         	goto	l1543
  1575   000D0C                     u1100:
  1576   000D0C                     
  1577                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  1578   000D0C  061E               	decf	dtoa@i^0,f,c
  1579   000D0E  A0D8               	btfss	status,0,c
  1580   000D10  061F               	decf	(dtoa@i+1)^0,f,c
  1581   000D12                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  1583   000D12  501E               	movf	dtoa@i^0,w,c
  1584   000D14  0F64               	addlw	low _dbuf
  1585   000D16  6ED9               	movwf	fsr2l,c
  1586   000D18  6ADA               	clrf	fsr2h,c
  1587   000D1A  C01D  FFDF         	movff	dtoa@s,indf2
  1588   000D1E                     l1543:
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1591   000D1E  C015  F00E         	movff	dtoa@fp,pad@fp
  1592   000D22  501E               	movf	dtoa@i^0,w,c
  1593   000D24  0F64               	addlw	low _dbuf
  1594   000D26  6E0F               	movwf	pad@buf^0,c
  1595   000D28  C01A  F010         	movff	dtoa@w,pad@p
  1596   000D2C  C01B  F011         	movff	dtoa@w+1,pad@p+1
  1597   000D30  EC99  F009         	call	_pad	;wreg free
  1598   000D34  0012               	return		;funcret
  1599   000D36                     __end_of_dtoa:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _pad *****************
  1603 ;; Defined at:
  1604 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  1607 ;;		 -> sprintf@f(12), 
  1608 ;;  buf             1   14[COMRAM] PTR unsigned char 
  1609 ;;		 -> dbuf(32), 
  1610 ;;  p               2   15[COMRAM] int 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  i               2   18[COMRAM] int 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         4       0       0       0       0       0       0
  1623 ;;      Locals:         2       0       0       0       0       0       0
  1624 ;;      Temps:          1       0       0       0       0       0       0
  1625 ;;      Totals:         7       0       0       0       0       0       0
  1626 ;;Total ram usage:        7 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 3
  1629 ;; This function calls:
  1630 ;;		_fputc
  1631 ;;		_fputs
  1632 ;; This function is called by:
  1633 ;;		_dtoa
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text9
  1638   001332                     __ptext9:
  1639                           	callstack 0
  1640   001332                     _pad:
  1641                           	callstack 23
  1642   001332                     
  1643                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1644   001332  A05E               	btfss	_flags^0,0,c
  1645   001334  EF9E  F009         	goto	u981
  1646   001338  EFA0  F009         	goto	u980
  1647   00133C                     u981:
  1648   00133C  EFA6  F009         	goto	l1485
  1649   001340                     u980:
  1650   001340                     
  1651                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1652   001340  C00F  F009         	movff	pad@buf,fputs@s
  1653   001344  C00E  F00A         	movff	pad@fp,fputs@fp
  1654   001348  EC02  F00A         	call	_fputs	;wreg free
  1655   00134C                     l1485:
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1658   00134C  BE11               	btfsc	(pad@p+1)^0,7,c
  1659   00134E  EFAD  F009         	goto	u990
  1660   001352  EFAB  F009         	goto	u991
  1661   001356                     u991:
  1662   001356  EFB1  F009         	goto	l776
  1663   00135A                     u990:
  1664   00135A                     
  1665                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1666   00135A  0E00               	movlw	0
  1667   00135C  6E11               	movwf	(pad@p+1)^0,c
  1668   00135E  0E00               	movlw	0
  1669   001360  6E10               	movwf	pad@p^0,c
  1670   001362                     l776:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1673   001362  0E00               	movlw	0
  1674   001364  6E14               	movwf	(pad@i+1)^0,c
  1675   001366  0E00               	movlw	0
  1676   001368  6E13               	movwf	pad@i^0,c
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1679   00136A  EFC1  F009         	goto	l1493
  1680   00136E                     l1489:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1683   00136E  0E00               	movlw	0
  1684   001370  6E02               	movwf	(fputc@c+1)^0,c
  1685   001372  0E20               	movlw	32
  1686   001374  6E01               	movwf	fputc@c^0,c
  1687   001376  C00E  F003         	movff	pad@fp,fputc@fp
  1688   00137A  ECF5  F008         	call	_fputc	;wreg free
  1689   00137E                     
  1690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1691   00137E  4A13               	infsnz	pad@i^0,f,c
  1692   001380  2A14               	incf	(pad@i+1)^0,f,c
  1693   001382                     l1493:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1696   001382  5010               	movf	pad@p^0,w,c
  1697   001384  5C13               	subwf	pad@i^0,w,c
  1698   001386  5014               	movf	(pad@i+1)^0,w,c
  1699   001388  0A80               	xorlw	128
  1700   00138A  6E12               	movwf	??_pad^0,c
  1701   00138C  5011               	movf	(pad@p+1)^0,w,c
  1702   00138E  0A80               	xorlw	128
  1703   001390  5812               	subwfb	??_pad^0,w,c
  1704   001392  A0D8               	btfss	status,0,c
  1705   001394  EFCE  F009         	goto	u1001
  1706   001398  EFD0  F009         	goto	u1000
  1707   00139C                     u1001:
  1708   00139C  EFB7  F009         	goto	l1489
  1709   0013A0                     u1000:
  1710   0013A0                     
  1711                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1712   0013A0  B05E               	btfsc	_flags^0,0,c
  1713   0013A2  EFD5  F009         	goto	u1011
  1714   0013A6  EFD7  F009         	goto	u1010
  1715   0013AA                     u1011:
  1716   0013AA  EFDD  F009         	goto	l781
  1717   0013AE                     u1010:
  1718   0013AE                     
  1719                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1720   0013AE  C00F  F009         	movff	pad@buf,fputs@s
  1721   0013B2  C00E  F00A         	movff	pad@fp,fputs@fp
  1722   0013B6  EC02  F00A         	call	_fputs	;wreg free
  1723   0013BA                     l781:
  1724   0013BA  0012               	return		;funcret
  1725   0013BC                     __end_of_pad:
  1726                           	callstack 0
  1727                           
  1728 ;; *************** function _fputs *****************
  1729 ;; Defined at:
  1730 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  s               1    8[COMRAM] PTR const unsigned char 
  1733 ;;		 -> dbuf(32), 
  1734 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  1735 ;;		 -> sprintf@f(12), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  i               2   11[COMRAM] int 
  1738 ;;  c               1   10[COMRAM] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  2    8[COMRAM] int 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1748 ;;      Params:         2       0       0       0       0       0       0
  1749 ;;      Locals:         3       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0
  1751 ;;      Totals:         5       0       0       0       0       0       0
  1752 ;;Total ram usage:        5 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 2
  1755 ;; This function calls:
  1756 ;;		_fputc
  1757 ;; This function is called by:
  1758 ;;		_pad
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text10
  1763   001404                     __ptext10:
  1764                           	callstack 0
  1765   001404                     _fputs:
  1766                           	callstack 23
  1767   001404  0E00               	movlw	0
  1768   001406  6E0D               	movwf	(fputs@i+1)^0,c
  1769   001408  0E00               	movlw	0
  1770   00140A  6E0C               	movwf	fputs@i^0,c
  1771   00140C  EF11  F00A         	goto	l1393
  1772   001410                     l1389:
  1773   001410  C00B  F001         	movff	fputs@c,fputc@c
  1774   001414  6A02               	clrf	(fputc@c+1)^0,c
  1775   001416  C00A  F003         	movff	fputs@fp,fputc@fp
  1776   00141A  ECF5  F008         	call	_fputc	;wreg free
  1777   00141E  4A0C               	infsnz	fputs@i^0,f,c
  1778   001420  2A0D               	incf	(fputs@i+1)^0,f,c
  1779   001422                     l1393:
  1780   001422  5009               	movf	fputs@s^0,w,c
  1781   001424  240C               	addwf	fputs@i^0,w,c
  1782   001426  6ED9               	movwf	fsr2l,c
  1783   001428  6ADA               	clrf	fsr2h,c
  1784   00142A  50DF               	movf	indf2,w,c
  1785   00142C  6E0B               	movwf	fputs@c^0,c
  1786   00142E  500B               	movf	fputs@c^0,w,c
  1787   001430  A4D8               	btfss	status,2,c
  1788   001432  EF1D  F00A         	goto	u851
  1789   001436  EF1F  F00A         	goto	u850
  1790   00143A                     u851:
  1791   00143A  EF08  F00A         	goto	l1389
  1792   00143E                     u850:
  1793   00143E  0012               	return		;funcret
  1794   001440                     __end_of_fputs:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _fputc *****************
  1798 ;; Defined at:
  1799 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  c               2    0[COMRAM] int 
  1802 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1803 ;;		 -> sprintf@f(12), 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2    0[COMRAM] int 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         3       0       0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0
  1817 ;;      Temps:          5       0       0       0       0       0       0
  1818 ;;      Totals:         8       0       0       0       0       0       0
  1819 ;;Total ram usage:        8 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 1
  1822 ;; This function calls:
  1823 ;;		_putch
  1824 ;; This function is called by:
  1825 ;;		_pad
  1826 ;;		_vfpfcnvrt
  1827 ;;		_fputs
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text11
  1832   0011EA                     __ptext11:
  1833                           	callstack 0
  1834   0011EA                     _fputc:
  1835                           	callstack 26
  1836   0011EA  5003               	movf	fputc@fp^0,w,c
  1837   0011EC  B4D8               	btfsc	status,2,c
  1838   0011EE  EFFB  F008         	goto	u811
  1839   0011F2  EFFD  F008         	goto	u810
  1840   0011F6                     u811:
  1841   0011F6  EF05  F009         	goto	l1377
  1842   0011FA                     u810:
  1843   0011FA  5003               	movf	fputc@fp^0,w,c
  1844   0011FC  A4D8               	btfss	status,2,c
  1845   0011FE  EF03  F009         	goto	u821
  1846   001202  EF05  F009         	goto	u820
  1847   001206                     u821:
  1848   001206  EF0A  F009         	goto	l1379
  1849   00120A                     u820:
  1850   00120A                     l1377:
  1851   00120A  5001               	movf	fputc@c^0,w,c
  1852   00120C  ECB5  F00A         	call	_putch
  1853   001210  EF49  F009         	goto	l836
  1854   001214                     l1379:
  1855   001214  5003               	movf	fputc@fp^0,w,c
  1856   001216  6ED9               	movwf	fsr2l,c
  1857   001218  6ADA               	clrf	fsr2h,c
  1858   00121A  0E0A               	movlw	10
  1859   00121C  26D9               	addwf	fsr2l,f,c
  1860   00121E  50DE               	movf	postinc2,w,c
  1861   001220  10DE               	iorwf	postinc2,w,c
  1862   001222  B4D8               	btfsc	status,2,c
  1863   001224  EF16  F009         	goto	u831
  1864   001228  EF18  F009         	goto	u830
  1865   00122C                     u831:
  1866   00122C  EF31  F009         	goto	l1383
  1867   001230                     u830:
  1868   001230  5003               	movf	fputc@fp^0,w,c
  1869   001232  6ED9               	movwf	fsr2l,c
  1870   001234  6ADA               	clrf	fsr2h,c
  1871   001236  0E0A               	movlw	10
  1872   001238  26D9               	addwf	fsr2l,f,c
  1873   00123A  5003               	movf	fputc@fp^0,w,c
  1874   00123C  6EE1               	movwf	fsr1l,c
  1875   00123E  6AE2               	clrf	fsr1h,c
  1876   001240  0E03               	movlw	3
  1877   001242  26E1               	addwf	fsr1l,f,c
  1878   001244  50DE               	movf	postinc2,w,c
  1879   001246  5CE6               	subwf	postinc1,w,c
  1880   001248  50E6               	movf	postinc1,w,c
  1881   00124A  0A80               	xorlw	128
  1882   00124C  6E08               	movwf	(??_fputc+4)^0,c
  1883   00124E  50DE               	movf	postinc2,w,c
  1884   001250  0A80               	xorlw	128
  1885   001252  5808               	subwfb	(??_fputc+4)^0,w,c
  1886   001254  B0D8               	btfsc	status,0,c
  1887   001256  EF2F  F009         	goto	u841
  1888   00125A  EF31  F009         	goto	u840
  1889   00125E                     u841:
  1890   00125E  EF49  F009         	goto	l836
  1891   001262                     u840:
  1892   001262                     l1383:
  1893   001262  5003               	movf	fputc@fp^0,w,c
  1894   001264  6ED9               	movwf	fsr2l,c
  1895   001266  6ADA               	clrf	fsr2h,c
  1896   001268  0E03               	movlw	3
  1897   00126A  26D9               	addwf	fsr2l,f,c
  1898   00126C  50DF               	movf	indf2,w,c
  1899   00126E  6E04               	movwf	??_fputc^0,c
  1900   001270  5003               	movf	fputc@fp^0,w,c
  1901   001272  6ED9               	movwf	fsr2l,c
  1902   001274  6ADA               	clrf	fsr2h,c
  1903   001276  50DF               	movf	indf2,w,c
  1904   001278  2404               	addwf	??_fputc^0,w,c
  1905   00127A  6ED9               	movwf	fsr2l,c
  1906   00127C  6ADA               	clrf	fsr2h,c
  1907   00127E  C001  FFDF         	movff	fputc@c,indf2
  1908   001282  5003               	movf	fputc@fp^0,w,c
  1909   001284  6ED9               	movwf	fsr2l,c
  1910   001286  6ADA               	clrf	fsr2h,c
  1911   001288  0E03               	movlw	3
  1912   00128A  26D9               	addwf	fsr2l,f,c
  1913   00128C  2ADE               	incf	postinc2,f,c
  1914   00128E  0E00               	movlw	0
  1915   001290  22DD               	addwfc	postdec2,f,c
  1916   001292                     l836:
  1917   001292  0012               	return		;funcret
  1918   001294                     __end_of_fputc:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _putch *****************
  1922 ;; Defined at:
  1923 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  c               1    wreg     unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  c               1    0[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1937 ;;      Params:         0       0       0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_fputc
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text12
  1951   00156A                     __ptext12:
  1952                           	callstack 0
  1953   00156A                     _putch:
  1954                           	callstack 26
  1955   00156A  0012               	return		;funcret
  1956   00156C                     __end_of_putch:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _abs *****************
  1960 ;; Defined at:
  1961 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  a               2    6[COMRAM] int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  2    6[COMRAM] int 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1975 ;;      Params:         2       0       0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0
  1977 ;;      Temps:          2       0       0       0       0       0       0
  1978 ;;      Totals:         4       0       0       0       0       0       0
  1979 ;;Total ram usage:        4 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_dtoa
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text13
  1989   0014AE                     __ptext13:
  1990                           	callstack 0
  1991   0014AE                     _abs:
  1992                           	callstack 26
  1993   0014AE  BE08               	btfsc	(abs@a+1)^0,7,c
  1994   0014B0  EF5C  F00A         	goto	u1021
  1995   0014B4  EF5E  F00A         	goto	u1020
  1996   0014B8                     u1021:
  1997   0014B8  EF64  F00A         	goto	l821
  1998   0014BC                     u1020:
  1999   0014BC  C007  F007         	movff	abs@a,?_abs
  2000   0014C0  C008  F008         	movff	abs@a+1,?_abs+1
  2001   0014C4  EF70  F00A         	goto	l824
  2002   0014C8                     l821:
  2003   0014C8  C007  F009         	movff	abs@a,??_abs
  2004   0014CC  C008  F00A         	movff	abs@a+1,??_abs+1
  2005   0014D0  1E09               	comf	??_abs^0,f,c
  2006   0014D2  1E0A               	comf	(??_abs+1)^0,f,c
  2007   0014D4  4A09               	infsnz	??_abs^0,f,c
  2008   0014D6  2A0A               	incf	(??_abs+1)^0,f,c
  2009   0014D8  C009  F007         	movff	??_abs,?_abs
  2010   0014DC  C00A  F008         	movff	??_abs+1,?_abs+1
  2011   0014E0                     l824:
  2012   0014E0  0012               	return		;funcret
  2013   0014E2                     __end_of_abs:
  2014                           	callstack 0
  2015                           
  2016 ;; *************** function ___awmod *****************
  2017 ;; Defined at:
  2018 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  dividend        2    0[COMRAM] int 
  2021 ;;  divisor         2    2[COMRAM] int 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  sign            1    5[COMRAM] unsigned char 
  2024 ;;  counter         1    4[COMRAM] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  2    0[COMRAM] int 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2034 ;;      Params:         4       0       0       0       0       0       0
  2035 ;;      Locals:         2       0       0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0
  2037 ;;      Totals:         6       0       0       0       0       0       0
  2038 ;;Total ram usage:        6 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_dtoa
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text14
  2048   00113A                     __ptext14:
  2049                           	callstack 0
  2050   00113A                     ___awmod:
  2051                           	callstack 26
  2052   00113A  0E00               	movlw	0
  2053   00113C  6E06               	movwf	___awmod@sign^0,c
  2054   00113E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2055   001140  EFA6  F008         	goto	u920
  2056   001144  EFA4  F008         	goto	u921
  2057   001148                     u921:
  2058   001148  EFAC  F008         	goto	l1453
  2059   00114C                     u920:
  2060   00114C  6C01               	negf	___awmod@dividend^0,c
  2061   00114E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2062   001150  B0D8               	btfsc	status,0,c
  2063   001152  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2064   001154  0E01               	movlw	1
  2065   001156  6E06               	movwf	___awmod@sign^0,c
  2066   001158                     l1453:
  2067   001158  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2068   00115A  EFB3  F008         	goto	u930
  2069   00115E  EFB1  F008         	goto	u931
  2070   001162                     u931:
  2071   001162  EFB7  F008         	goto	l1457
  2072   001166                     u930:
  2073   001166  6C03               	negf	___awmod@divisor^0,c
  2074   001168  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2075   00116A  B0D8               	btfsc	status,0,c
  2076   00116C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2077   00116E                     l1457:
  2078   00116E  5003               	movf	___awmod@divisor^0,w,c
  2079   001170  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2080   001172  B4D8               	btfsc	status,2,c
  2081   001174  EFBE  F008         	goto	u941
  2082   001178  EFC0  F008         	goto	u940
  2083   00117C                     u941:
  2084   00117C  EFE4  F008         	goto	l1473
  2085   001180                     u940:
  2086   001180  0E01               	movlw	1
  2087   001182  6E05               	movwf	___awmod@counter^0,c
  2088   001184  EFC8  F008         	goto	l1463
  2089   001188                     l1461:
  2090   001188  90D8               	bcf	status,0,c
  2091   00118A  3603               	rlcf	___awmod@divisor^0,f,c
  2092   00118C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2093   00118E  2A05               	incf	___awmod@counter^0,f,c
  2094   001190                     l1463:
  2095   001190  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2096   001192  EFCD  F008         	goto	u951
  2097   001196  EFCF  F008         	goto	u950
  2098   00119A                     u951:
  2099   00119A  EFC4  F008         	goto	l1461
  2100   00119E                     u950:
  2101   00119E                     l1465:
  2102   00119E  5003               	movf	___awmod@divisor^0,w,c
  2103   0011A0  5C01               	subwf	___awmod@dividend^0,w,c
  2104   0011A2  5004               	movf	(___awmod@divisor+1)^0,w,c
  2105   0011A4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2106   0011A6  A0D8               	btfss	status,0,c
  2107   0011A8  EFD8  F008         	goto	u961
  2108   0011AC  EFDA  F008         	goto	u960
  2109   0011B0                     u961:
  2110   0011B0  EFDE  F008         	goto	l1469
  2111   0011B4                     u960:
  2112   0011B4  5003               	movf	___awmod@divisor^0,w,c
  2113   0011B6  5E01               	subwf	___awmod@dividend^0,f,c
  2114   0011B8  5004               	movf	(___awmod@divisor+1)^0,w,c
  2115   0011BA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2116   0011BC                     l1469:
  2117   0011BC  90D8               	bcf	status,0,c
  2118   0011BE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2119   0011C0  3203               	rrcf	___awmod@divisor^0,f,c
  2120   0011C2  2E05               	decfsz	___awmod@counter^0,f,c
  2121   0011C4  EFCF  F008         	goto	l1465
  2122   0011C8                     l1473:
  2123   0011C8  5006               	movf	___awmod@sign^0,w,c
  2124   0011CA  B4D8               	btfsc	status,2,c
  2125   0011CC  EFEA  F008         	goto	u971
  2126   0011D0  EFEC  F008         	goto	u970
  2127   0011D4                     u971:
  2128   0011D4  EFF0  F008         	goto	l1477
  2129   0011D8                     u970:
  2130   0011D8  6C01               	negf	___awmod@dividend^0,c
  2131   0011DA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2132   0011DC  B0D8               	btfsc	status,0,c
  2133   0011DE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2134   0011E0                     l1477:
  2135   0011E0  C001  F001         	movff	___awmod@dividend,?___awmod
  2136   0011E4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2137   0011E8  0012               	return		;funcret
  2138   0011EA                     __end_of___awmod:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function ___awdiv *****************
  2142 ;; Defined at:
  2143 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  dividend        2    0[COMRAM] int 
  2146 ;;  divisor         2    2[COMRAM] int 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  quotient        2    6[COMRAM] int 
  2149 ;;  sign            1    5[COMRAM] unsigned char 
  2150 ;;  counter         1    4[COMRAM] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2    0[COMRAM] int 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2160 ;;      Params:         4       0       0       0       0       0       0
  2161 ;;      Locals:         4       0       0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0
  2163 ;;      Totals:         8       0       0       0       0       0       0
  2164 ;;Total ram usage:        8 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_dtoa
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text15
  2174   001076                     __ptext15:
  2175                           	callstack 0
  2176   001076                     ___awdiv:
  2177                           	callstack 26
  2178   001076  0E00               	movlw	0
  2179   001078  6E06               	movwf	___awdiv@sign^0,c
  2180   00107A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2181   00107C  EF44  F008         	goto	u860
  2182   001080  EF42  F008         	goto	u861
  2183   001084                     u861:
  2184   001084  EF4A  F008         	goto	l1409
  2185   001088                     u860:
  2186   001088  6C03               	negf	___awdiv@divisor^0,c
  2187   00108A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2188   00108C  B0D8               	btfsc	status,0,c
  2189   00108E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2190   001090  0E01               	movlw	1
  2191   001092  6E06               	movwf	___awdiv@sign^0,c
  2192   001094                     l1409:
  2193   001094  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2194   001096  EF51  F008         	goto	u870
  2195   00109A  EF4F  F008         	goto	u871
  2196   00109E                     u871:
  2197   00109E  EF57  F008         	goto	l1415
  2198   0010A2                     u870:
  2199   0010A2  6C01               	negf	___awdiv@dividend^0,c
  2200   0010A4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2201   0010A6  B0D8               	btfsc	status,0,c
  2202   0010A8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2203   0010AA  0E01               	movlw	1
  2204   0010AC  1A06               	xorwf	___awdiv@sign^0,f,c
  2205   0010AE                     l1415:
  2206   0010AE  0E00               	movlw	0
  2207   0010B0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2208   0010B2  0E00               	movlw	0
  2209   0010B4  6E07               	movwf	___awdiv@quotient^0,c
  2210   0010B6  5003               	movf	___awdiv@divisor^0,w,c
  2211   0010B8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2212   0010BA  B4D8               	btfsc	status,2,c
  2213   0010BC  EF62  F008         	goto	u881
  2214   0010C0  EF64  F008         	goto	u880
  2215   0010C4                     u881:
  2216   0010C4  EF8C  F008         	goto	l1437
  2217   0010C8                     u880:
  2218   0010C8  0E01               	movlw	1
  2219   0010CA  6E05               	movwf	___awdiv@counter^0,c
  2220   0010CC  EF6C  F008         	goto	l1423
  2221   0010D0                     l1421:
  2222   0010D0  90D8               	bcf	status,0,c
  2223   0010D2  3603               	rlcf	___awdiv@divisor^0,f,c
  2224   0010D4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2225   0010D6  2A05               	incf	___awdiv@counter^0,f,c
  2226   0010D8                     l1423:
  2227   0010D8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2228   0010DA  EF71  F008         	goto	u891
  2229   0010DE  EF73  F008         	goto	u890
  2230   0010E2                     u891:
  2231   0010E2  EF68  F008         	goto	l1421
  2232   0010E6                     u890:
  2233   0010E6                     l1425:
  2234   0010E6  90D8               	bcf	status,0,c
  2235   0010E8  3607               	rlcf	___awdiv@quotient^0,f,c
  2236   0010EA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2237   0010EC  5003               	movf	___awdiv@divisor^0,w,c
  2238   0010EE  5C01               	subwf	___awdiv@dividend^0,w,c
  2239   0010F0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2240   0010F2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2241   0010F4  A0D8               	btfss	status,0,c
  2242   0010F6  EF7F  F008         	goto	u901
  2243   0010FA  EF81  F008         	goto	u900
  2244   0010FE                     u901:
  2245   0010FE  EF86  F008         	goto	l1433
  2246   001102                     u900:
  2247   001102  5003               	movf	___awdiv@divisor^0,w,c
  2248   001104  5E01               	subwf	___awdiv@dividend^0,f,c
  2249   001106  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2250   001108  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2251   00110A  8007               	bsf	___awdiv@quotient^0,0,c
  2252   00110C                     l1433:
  2253   00110C  90D8               	bcf	status,0,c
  2254   00110E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2255   001110  3203               	rrcf	___awdiv@divisor^0,f,c
  2256   001112  2E05               	decfsz	___awdiv@counter^0,f,c
  2257   001114  EF73  F008         	goto	l1425
  2258   001118                     l1437:
  2259   001118  5006               	movf	___awdiv@sign^0,w,c
  2260   00111A  B4D8               	btfsc	status,2,c
  2261   00111C  EF92  F008         	goto	u911
  2262   001120  EF94  F008         	goto	u910
  2263   001124                     u911:
  2264   001124  EF98  F008         	goto	l1441
  2265   001128                     u910:
  2266   001128  6C07               	negf	___awdiv@quotient^0,c
  2267   00112A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2268   00112C  B0D8               	btfsc	status,0,c
  2269   00112E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2270   001130                     l1441:
  2271   001130  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2272   001134  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2273   001138  0012               	return		;funcret
  2274   00113A                     __end_of___awdiv:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _delay *****************
  2278 ;; Defined at:
  2279 ;;		line 52 in file "lm35.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  time            4    0[COMRAM] long 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  i               4    5[COMRAM] long 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2293 ;;      Params:         4       0       0       0       0       0       0
  2294 ;;      Locals:         4       0       0       0       0       0       0
  2295 ;;      Temps:          1       0       0       0       0       0       0
  2296 ;;      Totals:         9       0       0       0       0       0       0
  2297 ;;Total ram usage:        9 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text16
  2307   0013BC                     __ptext16:
  2308                           	callstack 0
  2309   0013BC                     _delay:
  2310                           	callstack 30
  2311   0013BC                     
  2312                           ;lm35.c: 53:     for(long int i=0;i<time;i++);
  2313   0013BC  0E00               	movlw	0
  2314   0013BE  6E06               	movwf	delay@i^0,c
  2315   0013C0  0E00               	movlw	0
  2316   0013C2  6E07               	movwf	(delay@i+1)^0,c
  2317   0013C4  0E00               	movlw	0
  2318   0013C6  6E08               	movwf	(delay@i+2)^0,c
  2319   0013C8  0E00               	movlw	0
  2320   0013CA  6E09               	movwf	(delay@i+3)^0,c
  2321   0013CC  EFEE  F009         	goto	l60
  2322   0013D0                     l1611:
  2323   0013D0  0E01               	movlw	1
  2324   0013D2  2606               	addwf	delay@i^0,f,c
  2325   0013D4  0E00               	movlw	0
  2326   0013D6  2207               	addwfc	(delay@i+1)^0,f,c
  2327   0013D8  2208               	addwfc	(delay@i+2)^0,f,c
  2328   0013DA  2209               	addwfc	(delay@i+3)^0,f,c
  2329   0013DC                     l60:
  2330   0013DC  5001               	movf	delay@time^0,w,c
  2331   0013DE  5C06               	subwf	delay@i^0,w,c
  2332   0013E0  5002               	movf	(delay@time+1)^0,w,c
  2333   0013E2  5807               	subwfb	(delay@i+1)^0,w,c
  2334   0013E4  5003               	movf	(delay@time+2)^0,w,c
  2335   0013E6  5808               	subwfb	(delay@i+2)^0,w,c
  2336   0013E8  5009               	movf	(delay@i+3)^0,w,c
  2337   0013EA  0A80               	xorlw	128
  2338   0013EC  6E05               	movwf	??_delay^0,c
  2339   0013EE  5004               	movf	(delay@time+3)^0,w,c
  2340   0013F0  0A80               	xorlw	128
  2341   0013F2  5805               	subwfb	??_delay^0,w,c
  2342   0013F4  A0D8               	btfss	status,0,c
  2343   0013F6  EFFF  F009         	goto	u1181
  2344   0013FA  EF01  F00A         	goto	u1180
  2345   0013FE                     u1181:
  2346   0013FE  EFE8  F009         	goto	l1611
  2347   001402                     u1180:
  2348   001402  0012               	return		;funcret
  2349   001404                     __end_of_delay:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function ___xxtofl *****************
  2353 ;; Defined at:
  2354 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  sign            1    wreg     unsigned char 
  2357 ;;  val             4    0[COMRAM] long 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  sign            1    8[COMRAM] unsigned char 
  2360 ;;  arg             4   10[COMRAM] unsigned long 
  2361 ;;  exp             1    9[COMRAM] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  4    0[COMRAM] unsigned char 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2371 ;;      Params:         4       0       0       0       0       0       0
  2372 ;;      Locals:         6       0       0       0       0       0       0
  2373 ;;      Temps:          4       0       0       0       0       0       0
  2374 ;;      Totals:        14       0       0       0       0       0       0
  2375 ;;Total ram usage:       14 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text17
  2385   000A42                     __ptext17:
  2386                           	callstack 0
  2387   000A42                     ___xxtofl:
  2388                           	callstack 30
  2389                           
  2390                           ;incstack = 0
  2391                           ;___xxtofl@sign stored from wreg
  2392   000A42  6E09               	movwf	___xxtofl@sign^0,c
  2393   000A44  5009               	movf	___xxtofl@sign^0,w,c
  2394   000A46  B4D8               	btfsc	status,2,c
  2395   000A48  EF28  F005         	goto	u1461
  2396   000A4C  EF2A  F005         	goto	u1460
  2397   000A50                     u1461:
  2398   000A50  EF4C  F005         	goto	l733
  2399   000A54                     u1460:
  2400   000A54  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2401   000A56  EF31  F005         	goto	u1470
  2402   000A5A  EF2F  F005         	goto	u1471
  2403   000A5E                     u1471:
  2404   000A5E  EF4C  F005         	goto	l733
  2405   000A62                     u1470:
  2406   000A62  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2407   000A66  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2408   000A6A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2409   000A6E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2410   000A72  1E05               	comf	??___xxtofl^0,f,c
  2411   000A74  1E06               	comf	(??___xxtofl+1)^0,f,c
  2412   000A76  1E07               	comf	(??___xxtofl+2)^0,f,c
  2413   000A78  1E08               	comf	(??___xxtofl+3)^0,f,c
  2414   000A7A  2A05               	incf	??___xxtofl^0,f,c
  2415   000A7C  0E00               	movlw	0
  2416   000A7E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2417   000A80  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2418   000A82  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2419   000A84  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2420   000A88  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2421   000A8C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2422   000A90  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2423   000A94  EF54  F005         	goto	l1815
  2424   000A98                     l733:
  2425   000A98  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2426   000A9C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2427   000AA0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2428   000AA4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2429   000AA8                     l1815:
  2430   000AA8  5001               	movf	___xxtofl@val^0,w,c
  2431   000AAA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2432   000AAC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2433   000AAE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2434   000AB0  A4D8               	btfss	status,2,c
  2435   000AB2  EF5D  F005         	goto	u1481
  2436   000AB6  EF5F  F005         	goto	u1480
  2437   000ABA                     u1481:
  2438   000ABA  EF69  F005         	goto	l1821
  2439   000ABE                     u1480:
  2440   000ABE  0E00               	movlw	0
  2441   000AC0  6E01               	movwf	?___xxtofl^0,c
  2442   000AC2  0E00               	movlw	0
  2443   000AC4  6E02               	movwf	(?___xxtofl+1)^0,c
  2444   000AC6  0E00               	movlw	0
  2445   000AC8  6E03               	movwf	(?___xxtofl+2)^0,c
  2446   000ACA  0E00               	movlw	0
  2447   000ACC  6E04               	movwf	(?___xxtofl+3)^0,c
  2448   000ACE  EFFA  F005         	goto	l736
  2449   000AD2                     l1821:
  2450   000AD2  0E96               	movlw	150
  2451   000AD4  6E0A               	movwf	___xxtofl@exp^0,c
  2452   000AD6  EF73  F005         	goto	l1825
  2453   000ADA                     l1823:
  2454   000ADA  2A0A               	incf	___xxtofl@exp^0,f,c
  2455   000ADC  90D8               	bcf	status,0,c
  2456   000ADE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2457   000AE0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2458   000AE2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2459   000AE4  320B               	rrcf	___xxtofl@arg^0,f,c
  2460   000AE6                     l1825:
  2461   000AE6  0E00               	movlw	0
  2462   000AE8  140B               	andwf	___xxtofl@arg^0,w,c
  2463   000AEA  6E05               	movwf	??___xxtofl^0,c
  2464   000AEC  0E00               	movlw	0
  2465   000AEE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2466   000AF0  6E06               	movwf	(??___xxtofl+1)^0,c
  2467   000AF2  0E00               	movlw	0
  2468   000AF4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2469   000AF6  6E07               	movwf	(??___xxtofl+2)^0,c
  2470   000AF8  0EFE               	movlw	254
  2471   000AFA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2472   000AFC  6E08               	movwf	(??___xxtofl+3)^0,c
  2473   000AFE  5005               	movf	??___xxtofl^0,w,c
  2474   000B00  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2475   000B02  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2476   000B04  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2477   000B06  A4D8               	btfss	status,2,c
  2478   000B08  EF88  F005         	goto	u1491
  2479   000B0C  EF8A  F005         	goto	u1490
  2480   000B10                     u1491:
  2481   000B10  EF6D  F005         	goto	l1823
  2482   000B14                     u1490:
  2483   000B14  EF98  F005         	goto	l740
  2484   000B18                     l1827:
  2485   000B18  2A0A               	incf	___xxtofl@exp^0,f,c
  2486   000B1A  0E01               	movlw	1
  2487   000B1C  260B               	addwf	___xxtofl@arg^0,f,c
  2488   000B1E  0E00               	movlw	0
  2489   000B20  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2490   000B22  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2491   000B24  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2492   000B26  90D8               	bcf	status,0,c
  2493   000B28  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2494   000B2A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2495   000B2C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2496   000B2E  320B               	rrcf	___xxtofl@arg^0,f,c
  2497   000B30                     l740:
  2498   000B30  0E00               	movlw	0
  2499   000B32  140B               	andwf	___xxtofl@arg^0,w,c
  2500   000B34  6E05               	movwf	??___xxtofl^0,c
  2501   000B36  0E00               	movlw	0
  2502   000B38  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2503   000B3A  6E06               	movwf	(??___xxtofl+1)^0,c
  2504   000B3C  0E00               	movlw	0
  2505   000B3E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2506   000B40  6E07               	movwf	(??___xxtofl+2)^0,c
  2507   000B42  0EFF               	movlw	255
  2508   000B44  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2509   000B46  6E08               	movwf	(??___xxtofl+3)^0,c
  2510   000B48  5005               	movf	??___xxtofl^0,w,c
  2511   000B4A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2512   000B4C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2513   000B4E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2514   000B50  A4D8               	btfss	status,2,c
  2515   000B52  EFAD  F005         	goto	u1501
  2516   000B56  EFAF  F005         	goto	u1500
  2517   000B5A                     u1501:
  2518   000B5A  EF8C  F005         	goto	l1827
  2519   000B5E                     u1500:
  2520   000B5E  EFB7  F005         	goto	l1835
  2521   000B62                     l1833:
  2522   000B62  060A               	decf	___xxtofl@exp^0,f,c
  2523   000B64  90D8               	bcf	status,0,c
  2524   000B66  360B               	rlcf	___xxtofl@arg^0,f,c
  2525   000B68  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2526   000B6A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2527   000B6C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2528   000B6E                     l1835:
  2529   000B6E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2530   000B70  EFBC  F005         	goto	u1511
  2531   000B74  EFBE  F005         	goto	u1510
  2532   000B78                     u1511:
  2533   000B78  EFC6  F005         	goto	l747
  2534   000B7C                     u1510:
  2535   000B7C  0E02               	movlw	2
  2536   000B7E  600A               	cpfslt	___xxtofl@exp^0,c
  2537   000B80  EFC4  F005         	goto	u1521
  2538   000B84  EFC6  F005         	goto	u1520
  2539   000B88                     u1521:
  2540   000B88  EFB1  F005         	goto	l1833
  2541   000B8C                     u1520:
  2542   000B8C                     l747:
  2543   000B8C  B00A               	btfsc	___xxtofl@exp^0,0,c
  2544   000B8E  EFCB  F005         	goto	u1531
  2545   000B92  EFCD  F005         	goto	u1530
  2546   000B96                     u1531:
  2547   000B96  EFCE  F005         	goto	l1841
  2548   000B9A                     u1530:
  2549   000B9A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2550   000B9C                     l1841:
  2551   000B9C  90D8               	bcf	status,0,c
  2552   000B9E  320A               	rrcf	___xxtofl@exp^0,f,c
  2553   000BA0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2554   000BA4  6A06               	clrf	(??___xxtofl+1)^0,c
  2555   000BA6  6A07               	clrf	(??___xxtofl+2)^0,c
  2556   000BA8  6A08               	clrf	(??___xxtofl+3)^0,c
  2557   000BAA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2558   000BAE  6A07               	clrf	(??___xxtofl+2)^0,c
  2559   000BB0  6A06               	clrf	(??___xxtofl+1)^0,c
  2560   000BB2  6A05               	clrf	??___xxtofl^0,c
  2561   000BB4  5005               	movf	??___xxtofl^0,w,c
  2562   000BB6  120B               	iorwf	___xxtofl@arg^0,f,c
  2563   000BB8  5006               	movf	(??___xxtofl+1)^0,w,c
  2564   000BBA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2565   000BBC  5007               	movf	(??___xxtofl+2)^0,w,c
  2566   000BBE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2567   000BC0  5008               	movf	(??___xxtofl+3)^0,w,c
  2568   000BC2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2569   000BC4  5009               	movf	___xxtofl@sign^0,w,c
  2570   000BC6  B4D8               	btfsc	status,2,c
  2571   000BC8  EFE8  F005         	goto	u1541
  2572   000BCC  EFEA  F005         	goto	u1540
  2573   000BD0                     u1541:
  2574   000BD0  EFF2  F005         	goto	l1851
  2575   000BD4                     u1540:
  2576   000BD4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2577   000BD6  EFF1  F005         	goto	u1550
  2578   000BDA  EFEF  F005         	goto	u1551
  2579   000BDE                     u1551:
  2580   000BDE  EFF2  F005         	goto	l1851
  2581   000BE2                     u1550:
  2582   000BE2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2583   000BE4                     l1851:
  2584   000BE4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2585   000BE8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2586   000BEC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2587   000BF0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2588   000BF4                     l736:
  2589   000BF4  0012               	return		;funcret
  2590   000BF6                     __end_of___xxtofl:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function ___fltol *****************
  2594 ;; Defined at:
  2595 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  f1              4   39[COMRAM] unsigned char 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  exp1            1   48[COMRAM] unsigned char 
  2600 ;;  sign1           1   47[COMRAM] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  4   39[COMRAM] long 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2610 ;;      Params:         4       0       0       0       0       0       0
  2611 ;;      Locals:         2       0       0       0       0       0       0
  2612 ;;      Temps:          4       0       0       0       0       0       0
  2613 ;;      Totals:        10       0       0       0       0       0       0
  2614 ;;Total ram usage:       10 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text18
  2624   000E6E                     __ptext18:
  2625                           	callstack 0
  2626   000E6E                     ___fltol:
  2627                           	callstack 30
  2628   000E6E  342A               	rlcf	(___fltol@f1+2)^0,w,c
  2629   000E70  342B               	rlcf	(___fltol@f1+3)^0,w,c
  2630   000E72  6E31               	movwf	___fltol@exp1^0,c
  2631   000E74  5031               	movf	___fltol@exp1^0,w,c
  2632   000E76  A4D8               	btfss	status,2,c
  2633   000E78  EF40  F007         	goto	u1391
  2634   000E7C  EF42  F007         	goto	u1390
  2635   000E80                     u1391:
  2636   000E80  EF4C  F007         	goto	l1771
  2637   000E84                     u1390:
  2638   000E84                     l1767:
  2639   000E84  0E00               	movlw	0
  2640   000E86  6E28               	movwf	?___fltol^0,c
  2641   000E88  0E00               	movlw	0
  2642   000E8A  6E29               	movwf	(?___fltol+1)^0,c
  2643   000E8C  0E00               	movlw	0
  2644   000E8E  6E2A               	movwf	(?___fltol+2)^0,c
  2645   000E90  0E00               	movlw	0
  2646   000E92  6E2B               	movwf	(?___fltol+3)^0,c
  2647   000E94  EFB9  F007         	goto	l375
  2648   000E98                     l1771:
  2649   000E98  C028  F02C         	movff	___fltol@f1,??___fltol
  2650   000E9C  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  2651   000EA0  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  2652   000EA4  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  2653   000EA8  0E20               	movlw	32
  2654   000EAA  EF5C  F007         	goto	u1400
  2655   000EAE                     u1405:
  2656   000EAE  90D8               	bcf	status,0,c
  2657   000EB0  322F               	rrcf	(??___fltol+3)^0,f,c
  2658   000EB2  322E               	rrcf	(??___fltol+2)^0,f,c
  2659   000EB4  322D               	rrcf	(??___fltol+1)^0,f,c
  2660   000EB6  322C               	rrcf	??___fltol^0,f,c
  2661   000EB8                     u1400:
  2662   000EB8  2EE8               	decfsz	wreg,f,c
  2663   000EBA  EF57  F007         	goto	u1405
  2664   000EBE  502C               	movf	??___fltol^0,w,c
  2665   000EC0  6E30               	movwf	___fltol@sign1^0,c
  2666   000EC2  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  2667   000EC4  0EFF               	movlw	255
  2668   000EC6  1628               	andwf	___fltol@f1^0,f,c
  2669   000EC8  0EFF               	movlw	255
  2670   000ECA  1629               	andwf	(___fltol@f1+1)^0,f,c
  2671   000ECC  0EFF               	movlw	255
  2672   000ECE  162A               	andwf	(___fltol@f1+2)^0,f,c
  2673   000ED0  0E00               	movlw	0
  2674   000ED2  162B               	andwf	(___fltol@f1+3)^0,f,c
  2675   000ED4  0E96               	movlw	150
  2676   000ED6  5E31               	subwf	___fltol@exp1^0,f,c
  2677   000ED8  BE31               	btfsc	___fltol@exp1^0,7,c
  2678   000EDA  EF73  F007         	goto	u1410
  2679   000EDE  EF71  F007         	goto	u1411
  2680   000EE2                     u1411:
  2681   000EE2  EF89  F007         	goto	l1791
  2682   000EE6                     u1410:
  2683   000EE6  5031               	movf	___fltol@exp1^0,w,c
  2684   000EE8  0A80               	xorlw	128
  2685   000EEA  0F97               	addlw	151
  2686   000EEC  B0D8               	btfsc	status,0,c
  2687   000EEE  EF7B  F007         	goto	u1421
  2688   000EF2  EF7D  F007         	goto	u1420
  2689   000EF6                     u1421:
  2690   000EF6  EF7F  F007         	goto	l1787
  2691   000EFA                     u1420:
  2692   000EFA  EF42  F007         	goto	l1767
  2693   000EFE                     l1787:
  2694   000EFE  90D8               	bcf	status,0,c
  2695   000F00  322B               	rrcf	(___fltol@f1+3)^0,f,c
  2696   000F02  322A               	rrcf	(___fltol@f1+2)^0,f,c
  2697   000F04  3229               	rrcf	(___fltol@f1+1)^0,f,c
  2698   000F06  3228               	rrcf	___fltol@f1^0,f,c
  2699   000F08  3E31               	incfsz	___fltol@exp1^0,f,c
  2700   000F0A  EF7F  F007         	goto	l1787
  2701   000F0E  EFA1  F007         	goto	l1801
  2702   000F12                     l1791:
  2703   000F12  0E1F               	movlw	31
  2704   000F14  6431               	cpfsgt	___fltol@exp1^0,c
  2705   000F16  EF8F  F007         	goto	u1431
  2706   000F1A  EF91  F007         	goto	u1430
  2707   000F1E                     u1431:
  2708   000F1E  EF99  F007         	goto	l1799
  2709   000F22                     u1430:
  2710   000F22  EF42  F007         	goto	l1767
  2711   000F26                     l1797:
  2712   000F26  90D8               	bcf	status,0,c
  2713   000F28  3628               	rlcf	___fltol@f1^0,f,c
  2714   000F2A  3629               	rlcf	(___fltol@f1+1)^0,f,c
  2715   000F2C  362A               	rlcf	(___fltol@f1+2)^0,f,c
  2716   000F2E  362B               	rlcf	(___fltol@f1+3)^0,f,c
  2717   000F30  0631               	decf	___fltol@exp1^0,f,c
  2718   000F32                     l1799:
  2719   000F32  5031               	movf	___fltol@exp1^0,w,c
  2720   000F34  A4D8               	btfss	status,2,c
  2721   000F36  EF9F  F007         	goto	u1441
  2722   000F3A  EFA1  F007         	goto	u1440
  2723   000F3E                     u1441:
  2724   000F3E  EF93  F007         	goto	l1797
  2725   000F42                     u1440:
  2726   000F42                     l1801:
  2727   000F42  5030               	movf	___fltol@sign1^0,w,c
  2728   000F44  B4D8               	btfsc	status,2,c
  2729   000F46  EFA7  F007         	goto	u1451
  2730   000F4A  EFA9  F007         	goto	u1450
  2731   000F4E                     u1451:
  2732   000F4E  EFB1  F007         	goto	l1805
  2733   000F52                     u1450:
  2734   000F52  1E2B               	comf	(___fltol@f1+3)^0,f,c
  2735   000F54  1E2A               	comf	(___fltol@f1+2)^0,f,c
  2736   000F56  1E29               	comf	(___fltol@f1+1)^0,f,c
  2737   000F58  6C28               	negf	___fltol@f1^0,c
  2738   000F5A  0E00               	movlw	0
  2739   000F5C  2229               	addwfc	(___fltol@f1+1)^0,f,c
  2740   000F5E  222A               	addwfc	(___fltol@f1+2)^0,f,c
  2741   000F60  222B               	addwfc	(___fltol@f1+3)^0,f,c
  2742   000F62                     l1805:
  2743   000F62  C028  F028         	movff	___fltol@f1,?___fltol
  2744   000F66  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  2745   000F6A  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  2746   000F6E  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  2747   000F72                     l375:
  2748   000F72  0012               	return		;funcret
  2749   000F74                     __end_of___fltol:
  2750                           	callstack 0
  2751                           
  2752 ;; *************** function ___flmul *****************
  2753 ;; Defined at:
  2754 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  b               4   14[COMRAM] long 
  2757 ;;  a               4   18[COMRAM] long 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  prod            4   33[COMRAM] struct .
  2760 ;;  grs             4   27[COMRAM] unsigned long 
  2761 ;;  temp            2   37[COMRAM] struct .
  2762 ;;  bexp            1   32[COMRAM] unsigned char 
  2763 ;;  aexp            1   31[COMRAM] unsigned char 
  2764 ;;  sign            1   26[COMRAM] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  4   14[COMRAM] unsigned char 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0, prodl, prodh
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2774 ;;      Params:         8       0       0       0       0       0       0
  2775 ;;      Locals:        13       0       0       0       0       0       0
  2776 ;;      Temps:          4       0       0       0       0       0       0
  2777 ;;      Totals:        25       0       0       0       0       0       0
  2778 ;;Total ram usage:       25 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text19
  2788   000618                     __ptext19:
  2789                           	callstack 0
  2790   000618                     ___flmul:
  2791                           	callstack 30
  2792   000618  5012               	movf	(___flmul@b+3)^0,w,c
  2793   00061A  0B80               	andlw	128
  2794   00061C  6E1B               	movwf	___flmul@sign^0,c
  2795   00061E  5012               	movf	(___flmul@b+3)^0,w,c
  2796   000620  2412               	addwf	(___flmul@b+3)^0,w,c
  2797   000622  6E21               	movwf	___flmul@bexp^0,c
  2798   000624  AE11               	btfss	(___flmul@b+2)^0,7,c
  2799   000626  EF17  F003         	goto	u1201
  2800   00062A  EF19  F003         	goto	u1200
  2801   00062E                     u1201:
  2802   00062E  EF1A  F003         	goto	l1641
  2803   000632                     u1200:
  2804   000632  8021               	bsf	___flmul@bexp^0,0,c
  2805   000634                     l1641:
  2806   000634  5021               	movf	___flmul@bexp^0,w,c
  2807   000636  B4D8               	btfsc	status,2,c
  2808   000638  EF20  F003         	goto	u1211
  2809   00063C  EF22  F003         	goto	u1210
  2810   000640                     u1211:
  2811   000640  EF35  F003         	goto	l1649
  2812   000644                     u1210:
  2813   000644  2821               	incf	___flmul@bexp^0,w,c
  2814   000646  A4D8               	btfss	status,2,c
  2815   000648  EF28  F003         	goto	u1221
  2816   00064C  EF2A  F003         	goto	u1220
  2817   000650                     u1221:
  2818   000650  EF32  F003         	goto	l1647
  2819   000654                     u1220:
  2820   000654  0E00               	movlw	0
  2821   000656  6E0F               	movwf	___flmul@b^0,c
  2822   000658  0E00               	movlw	0
  2823   00065A  6E10               	movwf	(___flmul@b+1)^0,c
  2824   00065C  0E00               	movlw	0
  2825   00065E  6E11               	movwf	(___flmul@b+2)^0,c
  2826   000660  0E00               	movlw	0
  2827   000662  6E12               	movwf	(___flmul@b+3)^0,c
  2828   000664                     l1647:
  2829   000664  8E11               	bsf	(___flmul@b+2)^0,7,c
  2830   000666  EF3D  F003         	goto	l1651
  2831   00066A                     l1649:
  2832   00066A  0E00               	movlw	0
  2833   00066C  6E0F               	movwf	___flmul@b^0,c
  2834   00066E  0E00               	movlw	0
  2835   000670  6E10               	movwf	(___flmul@b+1)^0,c
  2836   000672  0E00               	movlw	0
  2837   000674  6E11               	movwf	(___flmul@b+2)^0,c
  2838   000676  0E00               	movlw	0
  2839   000678  6E12               	movwf	(___flmul@b+3)^0,c
  2840   00067A                     l1651:
  2841   00067A  5016               	movf	(___flmul@a+3)^0,w,c
  2842   00067C  0B80               	andlw	128
  2843   00067E  1A1B               	xorwf	___flmul@sign^0,f,c
  2844   000680  5016               	movf	(___flmul@a+3)^0,w,c
  2845   000682  2416               	addwf	(___flmul@a+3)^0,w,c
  2846   000684  6E20               	movwf	___flmul@aexp^0,c
  2847   000686  AE15               	btfss	(___flmul@a+2)^0,7,c
  2848   000688  EF48  F003         	goto	u1231
  2849   00068C  EF4A  F003         	goto	u1230
  2850   000690                     u1231:
  2851   000690  EF4B  F003         	goto	l1659
  2852   000694                     u1230:
  2853   000694  8020               	bsf	___flmul@aexp^0,0,c
  2854   000696                     l1659:
  2855   000696  5020               	movf	___flmul@aexp^0,w,c
  2856   000698  B4D8               	btfsc	status,2,c
  2857   00069A  EF51  F003         	goto	u1241
  2858   00069E  EF53  F003         	goto	u1240
  2859   0006A2                     u1241:
  2860   0006A2  EF66  F003         	goto	l1667
  2861   0006A6                     u1240:
  2862   0006A6  2820               	incf	___flmul@aexp^0,w,c
  2863   0006A8  A4D8               	btfss	status,2,c
  2864   0006AA  EF59  F003         	goto	u1251
  2865   0006AE  EF5B  F003         	goto	u1250
  2866   0006B2                     u1251:
  2867   0006B2  EF63  F003         	goto	l1665
  2868   0006B6                     u1250:
  2869   0006B6  0E00               	movlw	0
  2870   0006B8  6E13               	movwf	___flmul@a^0,c
  2871   0006BA  0E00               	movlw	0
  2872   0006BC  6E14               	movwf	(___flmul@a+1)^0,c
  2873   0006BE  0E00               	movlw	0
  2874   0006C0  6E15               	movwf	(___flmul@a+2)^0,c
  2875   0006C2  0E00               	movlw	0
  2876   0006C4  6E16               	movwf	(___flmul@a+3)^0,c
  2877   0006C6                     l1665:
  2878   0006C6  8E15               	bsf	(___flmul@a+2)^0,7,c
  2879   0006C8  EF6E  F003         	goto	l692
  2880   0006CC                     l1667:
  2881   0006CC  0E00               	movlw	0
  2882   0006CE  6E13               	movwf	___flmul@a^0,c
  2883   0006D0  0E00               	movlw	0
  2884   0006D2  6E14               	movwf	(___flmul@a+1)^0,c
  2885   0006D4  0E00               	movlw	0
  2886   0006D6  6E15               	movwf	(___flmul@a+2)^0,c
  2887   0006D8  0E00               	movlw	0
  2888   0006DA  6E16               	movwf	(___flmul@a+3)^0,c
  2889   0006DC                     l692:
  2890   0006DC  5020               	movf	___flmul@aexp^0,w,c
  2891   0006DE  B4D8               	btfsc	status,2,c
  2892   0006E0  EF74  F003         	goto	u1261
  2893   0006E4  EF76  F003         	goto	u1260
  2894   0006E8                     u1261:
  2895   0006E8  EF7E  F003         	goto	l1671
  2896   0006EC                     u1260:
  2897   0006EC  5021               	movf	___flmul@bexp^0,w,c
  2898   0006EE  A4D8               	btfss	status,2,c
  2899   0006F0  EF7C  F003         	goto	u1271
  2900   0006F4  EF7E  F003         	goto	u1270
  2901   0006F8                     u1271:
  2902   0006F8  EF88  F003         	goto	l1675
  2903   0006FC                     u1270:
  2904   0006FC                     l1671:
  2905   0006FC  0E00               	movlw	0
  2906   0006FE  6E0F               	movwf	?___flmul^0,c
  2907   000700  0E00               	movlw	0
  2908   000702  6E10               	movwf	(?___flmul+1)^0,c
  2909   000704  0E00               	movlw	0
  2910   000706  6E11               	movwf	(?___flmul+2)^0,c
  2911   000708  0E00               	movlw	0
  2912   00070A  6E12               	movwf	(?___flmul+3)^0,c
  2913   00070C  EF20  F005         	goto	l696
  2914   000710                     l1675:
  2915   000710  5015               	movf	(___flmul@a+2)^0,w,c
  2916   000712  020F               	mulwf	___flmul@b^0,c
  2917   000714  CFF3 F026          	movff	prodl,___flmul@temp
  2918   000718  CFF4 F027          	movff	prodh,___flmul@temp+1
  2919   00071C  5026               	movf	___flmul@temp^0,w,c
  2920   00071E  6E1C               	movwf	___flmul@grs^0,c
  2921   000720  6A1D               	clrf	(___flmul@grs+1)^0,c
  2922   000722  6A1E               	clrf	(___flmul@grs+2)^0,c
  2923   000724  6A1F               	clrf	(___flmul@grs+3)^0,c
  2924   000726  5027               	movf	(___flmul@temp+1)^0,w,c
  2925   000728  6E22               	movwf	___flmul@prod^0,c
  2926   00072A  6A23               	clrf	(___flmul@prod+1)^0,c
  2927   00072C  6A24               	clrf	(___flmul@prod+2)^0,c
  2928   00072E  6A25               	clrf	(___flmul@prod+3)^0,c
  2929   000730  5014               	movf	(___flmul@a+1)^0,w,c
  2930   000732  0210               	mulwf	(___flmul@b+1)^0,c
  2931   000734  CFF3 F026          	movff	prodl,___flmul@temp
  2932   000738  CFF4 F027          	movff	prodh,___flmul@temp+1
  2933   00073C  5026               	movf	___flmul@temp^0,w,c
  2934   00073E  261C               	addwf	___flmul@grs^0,f,c
  2935   000740  0E00               	movlw	0
  2936   000742  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2937   000744  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2938   000746  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2939   000748  5027               	movf	(___flmul@temp+1)^0,w,c
  2940   00074A  2622               	addwf	___flmul@prod^0,f,c
  2941   00074C  0E00               	movlw	0
  2942   00074E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2943   000750  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2944   000752  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2945   000754  5013               	movf	___flmul@a^0,w,c
  2946   000756  0211               	mulwf	(___flmul@b+2)^0,c
  2947   000758  CFF3 F026          	movff	prodl,___flmul@temp
  2948   00075C  CFF4 F027          	movff	prodh,___flmul@temp+1
  2949   000760  5026               	movf	___flmul@temp^0,w,c
  2950   000762  261C               	addwf	___flmul@grs^0,f,c
  2951   000764  0E00               	movlw	0
  2952   000766  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2953   000768  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2954   00076A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2955   00076C  5027               	movf	(___flmul@temp+1)^0,w,c
  2956   00076E  2622               	addwf	___flmul@prod^0,f,c
  2957   000770  0E00               	movlw	0
  2958   000772  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2959   000774  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2960   000776  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2961   000778  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2962   00077C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2963   000780  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2964   000784  6A1C               	clrf	___flmul@grs^0,c
  2965   000786  5013               	movf	___flmul@a^0,w,c
  2966   000788  0210               	mulwf	(___flmul@b+1)^0,c
  2967   00078A  CFF3 F026          	movff	prodl,___flmul@temp
  2968   00078E  CFF4 F027          	movff	prodh,___flmul@temp+1
  2969   000792  5026               	movf	___flmul@temp^0,w,c
  2970   000794  261C               	addwf	___flmul@grs^0,f,c
  2971   000796  5027               	movf	(___flmul@temp+1)^0,w,c
  2972   000798  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2973   00079A  0E00               	movlw	0
  2974   00079C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2975   00079E  0E00               	movlw	0
  2976   0007A0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2977   0007A2  5014               	movf	(___flmul@a+1)^0,w,c
  2978   0007A4  020F               	mulwf	___flmul@b^0,c
  2979   0007A6  CFF3 F026          	movff	prodl,___flmul@temp
  2980   0007AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  2981   0007AE  5026               	movf	___flmul@temp^0,w,c
  2982   0007B0  261C               	addwf	___flmul@grs^0,f,c
  2983   0007B2  5027               	movf	(___flmul@temp+1)^0,w,c
  2984   0007B4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  2985   0007B6  0E00               	movlw	0
  2986   0007B8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  2987   0007BA  0E00               	movlw	0
  2988   0007BC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  2989   0007BE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2990   0007C2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2991   0007C6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2992   0007CA  6A1C               	clrf	___flmul@grs^0,c
  2993   0007CC  5013               	movf	___flmul@a^0,w,c
  2994   0007CE  020F               	mulwf	___flmul@b^0,c
  2995   0007D0  CFF3 F026          	movff	prodl,___flmul@temp
  2996   0007D4  CFF4 F027          	movff	prodh,___flmul@temp+1
  2997   0007D8  5026               	movf	___flmul@temp^0,w,c
  2998   0007DA  261C               	addwf	___flmul@grs^0,f,c
  2999   0007DC  5027               	movf	(___flmul@temp+1)^0,w,c
  3000   0007DE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3001   0007E0  0E00               	movlw	0
  3002   0007E2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3003   0007E4  0E00               	movlw	0
  3004   0007E6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3005   0007E8  5015               	movf	(___flmul@a+2)^0,w,c
  3006   0007EA  0210               	mulwf	(___flmul@b+1)^0,c
  3007   0007EC  CFF3 F026          	movff	prodl,___flmul@temp
  3008   0007F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  3009   0007F4  5026               	movf	___flmul@temp^0,w,c
  3010   0007F6  2622               	addwf	___flmul@prod^0,f,c
  3011   0007F8  5027               	movf	(___flmul@temp+1)^0,w,c
  3012   0007FA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3013   0007FC  0E00               	movlw	0
  3014   0007FE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3015   000800  0E00               	movlw	0
  3016   000802  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3017   000804  5014               	movf	(___flmul@a+1)^0,w,c
  3018   000806  0211               	mulwf	(___flmul@b+2)^0,c
  3019   000808  CFF3 F026          	movff	prodl,___flmul@temp
  3020   00080C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3021   000810  5026               	movf	___flmul@temp^0,w,c
  3022   000812  2622               	addwf	___flmul@prod^0,f,c
  3023   000814  5027               	movf	(___flmul@temp+1)^0,w,c
  3024   000816  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3025   000818  0E00               	movlw	0
  3026   00081A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3027   00081C  0E00               	movlw	0
  3028   00081E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3029   000820  5015               	movf	(___flmul@a+2)^0,w,c
  3030   000822  0211               	mulwf	(___flmul@b+2)^0,c
  3031   000824  CFF3 F026          	movff	prodl,___flmul@temp
  3032   000828  CFF4 F027          	movff	prodh,___flmul@temp+1
  3033   00082C  5026               	movf	___flmul@temp^0,w,c
  3034   00082E  6E17               	movwf	??___flmul^0,c
  3035   000830  5027               	movf	(___flmul@temp+1)^0,w,c
  3036   000832  6E18               	movwf	(??___flmul+1)^0,c
  3037   000834  6A19               	clrf	(??___flmul+2)^0,c
  3038   000836  6A1A               	clrf	(??___flmul+3)^0,c
  3039   000838  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3040   00083C  C018  F019         	movff	??___flmul+1,??___flmul+2
  3041   000840  C017  F018         	movff	??___flmul,??___flmul+1
  3042   000844  6A17               	clrf	??___flmul^0,c
  3043   000846  5017               	movf	??___flmul^0,w,c
  3044   000848  2622               	addwf	___flmul@prod^0,f,c
  3045   00084A  5018               	movf	(??___flmul+1)^0,w,c
  3046   00084C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3047   00084E  5019               	movf	(??___flmul+2)^0,w,c
  3048   000850  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3049   000852  501A               	movf	(??___flmul+3)^0,w,c
  3050   000854  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3051   000856  C01C  F017         	movff	___flmul@grs,??___flmul
  3052   00085A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3053   00085E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3054   000862  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3055   000866  0E19               	movlw	25
  3056   000868  EF3B  F004         	goto	u1280
  3057   00086C                     u1285:
  3058   00086C  90D8               	bcf	status,0,c
  3059   00086E  321A               	rrcf	(??___flmul+3)^0,f,c
  3060   000870  3219               	rrcf	(??___flmul+2)^0,f,c
  3061   000872  3218               	rrcf	(??___flmul+1)^0,f,c
  3062   000874  3217               	rrcf	??___flmul^0,f,c
  3063   000876                     u1280:
  3064   000876  2EE8               	decfsz	wreg,f,c
  3065   000878  EF36  F004         	goto	u1285
  3066   00087C  5017               	movf	??___flmul^0,w,c
  3067   00087E  2622               	addwf	___flmul@prod^0,f,c
  3068   000880  5018               	movf	(??___flmul+1)^0,w,c
  3069   000882  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3070   000884  5019               	movf	(??___flmul+2)^0,w,c
  3071   000886  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3072   000888  501A               	movf	(??___flmul+3)^0,w,c
  3073   00088A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3074   00088C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3075   000890  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3076   000894  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3077   000898  6A1C               	clrf	___flmul@grs^0,c
  3078   00089A  5020               	movf	___flmul@aexp^0,w,c
  3079   00089C  C021  F017         	movff	___flmul@bexp,??___flmul
  3080   0008A0  6A18               	clrf	(??___flmul+1)^0,c
  3081   0008A2  2617               	addwf	??___flmul^0,f,c
  3082   0008A4  0E00               	movlw	0
  3083   0008A6  2218               	addwfc	(??___flmul+1)^0,f,c
  3084   0008A8  0E82               	movlw	130
  3085   0008AA  2417               	addwf	??___flmul^0,w,c
  3086   0008AC  6E26               	movwf	___flmul@temp^0,c
  3087   0008AE  0EFF               	movlw	255
  3088   0008B0  2018               	addwfc	(??___flmul+1)^0,w,c
  3089   0008B2  6E27               	movwf	(___flmul@temp+1)^0,c
  3090   0008B4  EF71  F004         	goto	l1723
  3091   0008B8                     l1717:
  3092   0008B8  90D8               	bcf	status,0,c
  3093   0008BA  3622               	rlcf	___flmul@prod^0,f,c
  3094   0008BC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3095   0008BE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3096   0008C0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3097   0008C2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3098   0008C4  EF66  F004         	goto	u1291
  3099   0008C8  EF68  F004         	goto	u1290
  3100   0008CC                     u1291:
  3101   0008CC  EF69  F004         	goto	l699
  3102   0008D0                     u1290:
  3103   0008D0  8022               	bsf	___flmul@prod^0,0,c
  3104   0008D2                     l699:
  3105   0008D2  90D8               	bcf	status,0,c
  3106   0008D4  361C               	rlcf	___flmul@grs^0,f,c
  3107   0008D6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3108   0008D8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3109   0008DA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3110   0008DC  0626               	decf	___flmul@temp^0,f,c
  3111   0008DE  A0D8               	btfss	status,0,c
  3112   0008E0  0627               	decf	(___flmul@temp+1)^0,f,c
  3113   0008E2                     l1723:
  3114   0008E2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  3115   0008E4  EF76  F004         	goto	u1301
  3116   0008E8  EF78  F004         	goto	u1300
  3117   0008EC                     u1301:
  3118   0008EC  EF5C  F004         	goto	l1717
  3119   0008F0                     u1300:
  3120   0008F0  0E00               	movlw	0
  3121   0008F2  6E20               	movwf	___flmul@aexp^0,c
  3122   0008F4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3123   0008F6  EF7F  F004         	goto	u1311
  3124   0008FA  EF81  F004         	goto	u1310
  3125   0008FE                     u1311:
  3126   0008FE  EFA5  F004         	goto	l701
  3127   000902                     u1310:
  3128   000902  0EFF               	movlw	255
  3129   000904  141C               	andwf	___flmul@grs^0,w,c
  3130   000906  6E17               	movwf	??___flmul^0,c
  3131   000908  0EFF               	movlw	255
  3132   00090A  141D               	andwf	(___flmul@grs+1)^0,w,c
  3133   00090C  6E18               	movwf	(??___flmul+1)^0,c
  3134   00090E  0EFF               	movlw	255
  3135   000910  141E               	andwf	(___flmul@grs+2)^0,w,c
  3136   000912  6E19               	movwf	(??___flmul+2)^0,c
  3137   000914  0E7F               	movlw	127
  3138   000916  141F               	andwf	(___flmul@grs+3)^0,w,c
  3139   000918  6E1A               	movwf	(??___flmul+3)^0,c
  3140   00091A  5017               	movf	??___flmul^0,w,c
  3141   00091C  1018               	iorwf	(??___flmul+1)^0,w,c
  3142   00091E  1019               	iorwf	(??___flmul+2)^0,w,c
  3143   000920  101A               	iorwf	(??___flmul+3)^0,w,c
  3144   000922  B4D8               	btfsc	status,2,c
  3145   000924  EF96  F004         	goto	u1321
  3146   000928  EF98  F004         	goto	u1320
  3147   00092C                     u1321:
  3148   00092C  EF9C  F004         	goto	l702
  3149   000930                     u1320:
  3150   000930                     l1731:
  3151   000930  0E01               	movlw	1
  3152   000932  6E20               	movwf	___flmul@aexp^0,c
  3153   000934  EFA5  F004         	goto	l701
  3154   000938                     l702:
  3155   000938  A022               	btfss	___flmul@prod^0,0,c
  3156   00093A  EFA1  F004         	goto	u1331
  3157   00093E  EFA3  F004         	goto	u1330
  3158   000942                     u1331:
  3159   000942  EFA5  F004         	goto	l701
  3160   000946                     u1330:
  3161   000946  EF98  F004         	goto	l1731
  3162   00094A                     l701:
  3163   00094A  5020               	movf	___flmul@aexp^0,w,c
  3164   00094C  B4D8               	btfsc	status,2,c
  3165   00094E  EFAB  F004         	goto	u1341
  3166   000952  EFAD  F004         	goto	u1340
  3167   000956                     u1341:
  3168   000956  EFD1  F004         	goto	l1743
  3169   00095A                     u1340:
  3170   00095A  0E01               	movlw	1
  3171   00095C  2622               	addwf	___flmul@prod^0,f,c
  3172   00095E  0E00               	movlw	0
  3173   000960  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3174   000962  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3175   000964  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3176   000966  A025               	btfss	(___flmul@prod+3)^0,0,c
  3177   000968  EFB8  F004         	goto	u1351
  3178   00096C  EFBA  F004         	goto	u1350
  3179   000970                     u1351:
  3180   000970  EFD1  F004         	goto	l1743
  3181   000974                     u1350:
  3182   000974  C022  F017         	movff	___flmul@prod,??___flmul
  3183   000978  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3184   00097C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3185   000980  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3186   000984  341A               	rlcf	(??___flmul+3)^0,w,c
  3187   000986  321A               	rrcf	(??___flmul+3)^0,f,c
  3188   000988  3219               	rrcf	(??___flmul+2)^0,f,c
  3189   00098A  3218               	rrcf	(??___flmul+1)^0,f,c
  3190   00098C  3217               	rrcf	??___flmul^0,f,c
  3191   00098E  C017  F022         	movff	??___flmul,___flmul@prod
  3192   000992  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3193   000996  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3194   00099A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3195   00099E  4A26               	infsnz	___flmul@temp^0,f,c
  3196   0009A0  2A27               	incf	(___flmul@temp+1)^0,f,c
  3197   0009A2                     l1743:
  3198   0009A2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3199   0009A4  EFDC  F004         	goto	u1361
  3200   0009A8  5027               	movf	(___flmul@temp+1)^0,w,c
  3201   0009AA  E108               	bnz	u1360
  3202   0009AC  2826               	incf	___flmul@temp^0,w,c
  3203   0009AE  A0D8               	btfss	status,0,c
  3204   0009B0  EFDC  F004         	goto	u1361
  3205   0009B4  EFDE  F004         	goto	u1360
  3206   0009B8                     u1361:
  3207   0009B8  EFE8  F004         	goto	l1747
  3208   0009BC                     u1360:
  3209   0009BC  0E00               	movlw	0
  3210   0009BE  6E22               	movwf	___flmul@prod^0,c
  3211   0009C0  0E00               	movlw	0
  3212   0009C2  6E23               	movwf	(___flmul@prod+1)^0,c
  3213   0009C4  0E80               	movlw	128
  3214   0009C6  6E24               	movwf	(___flmul@prod+2)^0,c
  3215   0009C8  0E7F               	movlw	127
  3216   0009CA  6E25               	movwf	(___flmul@prod+3)^0,c
  3217   0009CC  EF16  F005         	goto	l1759
  3218   0009D0                     l1747:
  3219   0009D0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3220   0009D2  EFF5  F004         	goto	u1370
  3221   0009D6  5027               	movf	(___flmul@temp+1)^0,w,c
  3222   0009D8  E106               	bnz	u1371
  3223   0009DA  0426               	decf	___flmul@temp^0,w,c
  3224   0009DC  B0D8               	btfsc	status,0,c
  3225   0009DE  EFF3  F004         	goto	u1371
  3226   0009E2  EFF5  F004         	goto	u1370
  3227   0009E6                     u1371:
  3228   0009E6  EF01  F005         	goto	l709
  3229   0009EA                     u1370:
  3230   0009EA  0E00               	movlw	0
  3231   0009EC  6E22               	movwf	___flmul@prod^0,c
  3232   0009EE  0E00               	movlw	0
  3233   0009F0  6E23               	movwf	(___flmul@prod+1)^0,c
  3234   0009F2  0E00               	movlw	0
  3235   0009F4  6E24               	movwf	(___flmul@prod+2)^0,c
  3236   0009F6  0E00               	movlw	0
  3237   0009F8  6E25               	movwf	(___flmul@prod+3)^0,c
  3238   0009FA  0E00               	movlw	0
  3239   0009FC  6E1B               	movwf	___flmul@sign^0,c
  3240   0009FE  EF16  F005         	goto	l1759
  3241   000A02                     l709:
  3242   000A02  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3243   000A06  0EFF               	movlw	255
  3244   000A08  1622               	andwf	___flmul@prod^0,f,c
  3245   000A0A  0EFF               	movlw	255
  3246   000A0C  1623               	andwf	(___flmul@prod+1)^0,f,c
  3247   000A0E  0E7F               	movlw	127
  3248   000A10  1624               	andwf	(___flmul@prod+2)^0,f,c
  3249   000A12  0E00               	movlw	0
  3250   000A14  1625               	andwf	(___flmul@prod+3)^0,f,c
  3251   000A16  A021               	btfss	___flmul@bexp^0,0,c
  3252   000A18  EF10  F005         	goto	u1381
  3253   000A1C  EF12  F005         	goto	u1380
  3254   000A20                     u1381:
  3255   000A20  EF13  F005         	goto	l1757
  3256   000A24                     u1380:
  3257   000A24  8E24               	bsf	(___flmul@prod+2)^0,7,c
  3258   000A26                     l1757:
  3259   000A26  90D8               	bcf	status,0,c
  3260   000A28  3021               	rrcf	___flmul@bexp^0,w,c
  3261   000A2A  6E25               	movwf	(___flmul@prod+3)^0,c
  3262   000A2C                     l1759:
  3263   000A2C  501B               	movf	___flmul@sign^0,w,c
  3264   000A2E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  3265   000A30  C022  F00F         	movff	___flmul@prod,?___flmul
  3266   000A34  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3267   000A38  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3268   000A3C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3269   000A40                     l696:
  3270   000A40  0012               	return		;funcret
  3271   000A42                     __end_of___flmul:
  3272                           	callstack 0
  3273                           
  3274                           	psect	rparam
  3275   000000                     tosu	equ	0xFFF
  3276                           tosh	equ	0xFFE
  3277                           tosl	equ	0xFFD
  3278                           stkptr	equ	0xFFC
  3279                           pclatu	equ	0xFFB
  3280                           pclath	equ	0xFFA
  3281                           pcl	equ	0xFF9
  3282                           tblptru	equ	0xFF8
  3283                           tblptrh	equ	0xFF7
  3284                           tblptrl	equ	0xFF6
  3285                           tablat	equ	0xFF5
  3286                           prodh	equ	0xFF4
  3287                           prodl	equ	0xFF3
  3288                           indf0	equ	0xFEF
  3289                           postinc0	equ	0xFEE
  3290                           postdec0	equ	0xFED
  3291                           preinc0	equ	0xFEC
  3292                           plusw0	equ	0xFEB
  3293                           fsr0h	equ	0xFEA
  3294                           fsr0l	equ	0xFE9
  3295                           wreg	equ	0xFE8
  3296                           indf1	equ	0xFE7
  3297                           postinc1	equ	0xFE6
  3298                           postdec1	equ	0xFE5
  3299                           preinc1	equ	0xFE4
  3300                           plusw1	equ	0xFE3
  3301                           fsr1h	equ	0xFE2
  3302                           fsr1l	equ	0xFE1
  3303                           bsr	equ	0xFE0
  3304                           indf2	equ	0xFDF
  3305                           postinc2	equ	0xFDE
  3306                           postdec2	equ	0xFDD
  3307                           preinc2	equ	0xFDC
  3308                           plusw2	equ	0xFDB
  3309                           fsr2h	equ	0xFDA
  3310                           fsr2l	equ	0xFD9
  3311                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160      0      36
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S516$buffer	PTR unsigned char  size(2) Largest target is 0

    S516$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 25
		 -> main@cnv(COMRAM[25]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 25
		 -> main@cnv(COMRAM[25]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 25
		 -> main@cnv(COMRAM[25]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0    9426
                                             60 COMRAM    33    33      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _delay
                            _sprintf
                             _strlen
                                _trx
 ---------------------------------------------------------------------------------
 (1) _trx                                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    6369
                                             43 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    6016
                                             39 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           10     7      3    5660
                                             31 COMRAM     8     5      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     643
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    3753
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4    2172
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1083
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _delay                                                9     5      4     198
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _delay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul
   _strlen
   _trx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
BITBIGSFRl         292      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      24       5       22.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITBIGSFRhhhh       3B      0       0      16        0.0%
BITBIGSFRhhhl       10      0       0      17        0.0%
BITBIGSFRhlh         C      0       0      18        0.0%
BITBIGSFRhll         8      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      21        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Sep 21 08:52:54 2024

                        l50 0D80                          l60 13DC                          l63 1402  
                        l47 0D58                          l48 0D72                          l66 1554  
                        l68 1562                          l69 1568                          l78 1534  
                        _GO 7E11                ___awdiv@sign 0006         ___wmul@multiplicand 0003  
                       l322 11E8                         l309 1138                         l701 094A  
                       l702 0938                         l375 0F72                         l803 1330  
                       l811 1074                         l740 0B30                         l709 0A02  
                       l733 0A98                         l821 14C8                         l736 0BF4  
                       l824 14E0                         l817 1478                         l747 0B8C  
                       l692 06DC                         l836 1292                         l844 143E  
                       l756 14AC                         l781 13BA                         l853 150E  
                       l847 156A                         l696 0A40                         l776 1362  
                       l784 0C54                         l699 08D2                         l779 13A0  
                       l795 0D34                         l799 1328                         u390 1562  
                       u391 155E                         u810 11FA                         u811 11F6  
                       u900 1102                         u820 120A                         u901 10FE  
                       u821 1206                         u910 1128                         u830 1230  
                       u911 1124                         u831 122C                         u920 114C  
                       u840 1262                         u921 1148                         u841 125E  
                       u930 1166                         u850 143E                         u931 1162  
                       u851 143A                         u860 1088                         u940 1180  
                       u861 1084                         u941 117C                         u870 10A2  
                       u950 119E                         u871 109E                         u951 119A  
                       u880 10C8                         u960 11B4                         u881 10C4  
                       u961 11B0                         u890 10E6                         u970 11D8  
                       u891 10E2                         u971 11D4                         u980 1340  
                       u981 133C                         u990 135A                         u991 1356  
                       _abs 14AE                         _pad 1332                         _trx 1552  
              ___awmod@sign 0006                         wreg 0FE8                ___flmul@aexp 0020  
              ___flmul@bexp 0021                ___flmul@sign 001B                ___flmul@temp 0026  
              ___flmul@prod 0022                ___fltol@exp1 0031                        l1107 1554  
                      ?_abs 0007                        l1109 1564                        l1401 1076  
                      l1411 10A2                        l1403 107A                        l1421 10D0  
                      l1413 10AA                        l1405 1088                        l1501 0BF6  
                      l1431 110A                        l1423 10D8                        l1415 10AE  
                      l1407 1090                        l1511 0C2C                        l1503 0BFA  
                      l1441 1130                        l1433 110C                        l1425 10E6  
                      l1417 10B6                        l1409 1094                        l1521 0C66  
                      l1513 0C3C                        l1505 0C0E                        l1601 1448  
                      l1611 13D0                        l1435 1112                        l1427 10EC  
                      l1419 10C8                        l1451 1154                        l1523 0C6C  
                      l1531 0CC0                        l1515 0C48                        l1507 0C16  
                      l1603 1458                        l1701 07D8                        l1429 1102  
                      l1437 1118                        l1461 1188                        l1453 1158  
                      l1445 113A                        l1381 1230                        l1373 11EA  
                      l1541 0D12                        l1533 0CDA                        l1525 0C9A  
                      l1517 0C50                        l1509 0C26                        l1605 1470  
                      l1621 14A2                        l1613 147A                        l1711 0856  
                      l1703 07E8                        l1439 1128                        l1471 11C2  
                      l1463 1190                        l1455 1166                        l1447 113E  
                      l1383 1262                        l1375 11FA                        l1391 141E  
                      l1543 0D1E                        l1535 0CEC                        l1527 0C9E  
                      l1519 0C5C                        l1551 12BA                        l1615 1482  
                      l1631 1502                        l1721 08D0                        l1713 088C  
                      l1705 0804                        l1641 0634                        l1801 0F42  
                      l1609 13BC                        l1465 119E                        l1473 11C8  
                      l1457 116E                        l1449 114C                        l1377 120A  
                      l1393 1422                        l1481 1332                        l1537 0CFC  
                      l1529 0CA4                        l1553 12C2                        l1561 0F74  
                      l1617 148A                        l1625 14E2                        l1731 0930  
                      l1723 08E2                        l1715 089A                        l1707 0810  
                      l1651 067A                        l1643 0644                        l1635 0618  
                      l1803 0F52                        l1811 0A54                        l1475 11D8  
                      l1467 11B4                        l1459 1180                        l1379 1214  
                      l1387 1404                        l1491 137E                        l1483 1340  
                      l1539 0D0C                        l1395 1510                        l1555 12DE  
                      l1547 1294                        l1571 0FC0                        l1563 0F92  
                      l1619 1492                        l1627 14EA                        l1741 099E  
                      l1725 08F0                        l1717 08B8                        l1709 082C  
                      l1661 06A6                        l1653 0680                        l1645 0654  
                      l1637 0624                        l1805 0F62                        l1821 0AD2  
                      l1813 0A62                        l1477 11E0                        l1469 11BC  
                      l1389 1410                        l1493 1382                        l1485 134C  
                      l1397 152C                        l1557 12FE                        l1549 129C  
                      l1581 1014                        l1573 0FD0                        l1565 0F9A  
                      l1629 14EC                        l1751 0A06                        l1735 095A  
                      l1743 09A2                        l1727 08F4                        l1719 08C2  
                      l1671 06FC                        l1663 06B6                        l1655 0686  
                      l1647 0664                        l1639 0632                        l1831 0B26  
                      l1823 0ADA                        l1815 0AA8                        l1495 13AE  
                      l1487 135A                        l1559 1306                        l1583 102C  
                      l1575 0FDA                        l1567 0FA8                        l1761 0A30  
                      l1753 0A16                        l1745 09BC                        l1737 0966  
                      l1729 0902                        l1681 073C                        l1665 06C6  
                      l1657 0694                        l1649 066A                        l1841 0B9C  
                      l1833 0B62                        l1825 0AE6                        l1817 0ABE  
                      l1809 0A44                        l1497 14AE                        l1489 136E  
                      l1585 1036                        l1577 0FE4                        l1569 0FAC  
                      l1593 1056                        l1755 0A24                        l1747 09D0  
                      l1739 0974                        l1691 0786                        l1683 0748  
                      l1675 0710                        l1667 06CC                        l1659 0696  
                      l1771 0E98                        l1851 0BE4                        l1843 0BA0  
                      l1835 0B6E                        l1827 0B18                        l1499 14BC  
                      l1579 0FFC                        l1757 0A26                        l1749 09EA  
                      l1693 0792                        l1685 0760                        l1677 071C  
                      l1669 06EC                        l1781 0EE6                        l1773 0EC2  
                      l1765 0E6E                        l1845 0BC4                        l1837 0B7C  
                      l1829 0B1A                        l1589 104A                        l1861 0D70  
                      l1759 0A2C                        l1695 07A2                        l1687 076C  
                      l1679 0726                        l1791 0F12                        l1775 0EC4  
                      l1767 0E84                        l1847 0BD4                        l1839 0B9A  
                      l1599 1440                        l1871 0E1A                        l1863 0D8A  
                      l1855 0D36                        l1697 07AE                        l1689 0778  
                      l1777 0ED4                        l1849 0BE2                        l1873 0E28  
                      l1865 0DE2                        l1857 0D4E                        l1699 07BE  
                      l1787 0EFE                        l1779 0ED8                        l1875 0E2C  
                      l1867 0DFA                        l1859 0D5C                        l1797 0F26  
                      l1789 0F08                        l1877 0E4A                        l1869 0E0E  
                      ?_pad 000E                        l1799 0F32                        l1879 0E5E  
                      _ADIF 7CF6                        STR_1 0601                        ?_trx 0001  
                      u1000 13A0                        u1001 139C                        u1010 13AE  
                      u1011 13AA                        u1020 14BC                        u1100 0D0C  
                      u1021 14B8                        u1101 0D08                        u1030 0C0A  
                      u1110 12BA                        u1031 0C04                        u1111 12B6  
                      u1200 0632                        u1040 0C0C                        u1120 1328  
                      u1201 062E                        u1121 1324                        u1210 0644  
                      u1050 0C26                        u1130 0F92                        u1211 0640  
                      u1051 0C22                        u1131 0F8E                        u1300 08F0  
                      u1220 0654                        u1060 0C3C                        u1140 0FD0  
                      u1301 08EC                        u1221 0650                        u1061 0C38  
                      u1141 0FCC                        u1310 0902                        u1230 0694  
                      u1070 0CDA                        u1150 0FFC                        u1311 08FE  
                      u1231 0690                        u1071 0CD6                        u1151 0FF8  
                      u1320 0930                        u1240 06A6                        u1400 0EB8  
                      u1080 0CEC                        u1160 1014                        u1321 092C  
                      u1241 06A2                        u1081 0CE8                        u1161 1010  
                      u1330 0946                        u1250 06B6                        u1410 0EE6  
                      u1090 0CFC                        u1170 1470                        u1331 0942  
                      u1251 06B2                        u1411 0EE2                        u1091 0CF8  
                      u1171 146C                        u1340 095A                        u1260 06EC  
                      u1420 0EFA                        u1500 0B5E                        u1180 1402  
                      u1341 0956                        u1261 06E8                        u1421 0EF6  
                      u1405 0EAE                        u1501 0B5A                        u1181 13FE  
                      u1350 0974                        u1270 06FC                        u1430 0F22  
                      u1510 0B7C                        u1190 1502                        u1351 0970  
                      u1271 06F8                        u1431 0F1E                        u1511 0B78  
                      u1191 14FE                        u1360 09BC                        u1280 0876  
                      u1440 0F42                        u1520 0B8C                        u1361 09B8  
                      u1441 0F3E                        u1521 0B88                        u1370 09EA  
                      u1290 08D0                        u1450 0F52                        u1530 0B9A  
                      u1371 09E6                        u1291 08CC                        u1451 0F4E  
                      u1531 0B96                        u1380 0A24                        u1540 0BD4  
                      u1460 0A54                        u1381 0A20                        u1285 086C  
                      u1541 0BD0                        u1461 0A50                        u1390 0E84  
                      u1550 0BE2                        u1470 0A62                        u1391 0E80  
                      u1551 0BDE                        u1471 0A5E                        u1480 0ABE  
                      u1560 0D80                        u1481 0ABA                        u1561 0D7C  
                      u1490 0B14                        u1570 0DFA                        u1491 0B10  
                      u1571 0DF6                        u1580 0E4A                        u1581 0E46  
                      _RCIF 7CF5                        _TXIF 7CF4                        abs@a 0007  
                      _dbuf 0064                        _main 0D36                        _dtoa 0BF6  
                      _prec 0062                        pad@i 0013                        pad@p 0010  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        prodh 0FF4  
                      prodl 0FF3                        trx@b 0001                        start 0000  
              ___param_bank 0000                       ??_abs 0009                       ??_pad 0012  
                     ??_trx 0001               ___fltol@sign1 0030                       ?_main 0001  
                     ?_dtoa 0015             __end_of___awdiv 113A                       _ADRES 0FC3  
           __end_of___awmod 11EA             __end_of___flmul 0A42             __end_of___fltol 0F74  
           ___awdiv@divisor 0003             ___awdiv@counter 0005                       _RCREG 0FAE  
                     _RCSTA 0FAB                vfpfcnvrt@fmt 0021                       _SPBRG 0FAF  
                     _TRISA 0F92                       _TRISB 0F93                       _TRISC 0F94  
                     _TRISD 0F95                       _TXREG 0FAD                       _TXSTA 0FAC  
                     _delay 13BC                       _flags 005E         read_prec_or_width@c 0009  
       read_prec_or_width@n 000A                       _fputc 11EA                       _fputs 1404  
                     pad@fp 000E                       _width 0060                       _putch 156A  
                     main@a 005C                       main@i 005A                       dtoa@d 0016  
                     dtoa@i 001E                       dtoa@p 001C                       dtoa@s 001D  
                     dtoa@w 001A                       tablat 0FF5                       status 0FD8  
           __end_of_sprintf 14AE             __initialization 1536                __end_of_main 0E6E  
              __end_of_dtoa 0D36                      ??_main 003D                      ??_dtoa 0018  
             __activetblptr 0001  __end_of_read_prec_or_width 1332                      ?_delay 0001  
                    _ADCON0 0FC2                      _ADCON1 0FC1                      _ADCON2 0FC0  
                    ?_fputc 0001                      ?_fputs 0009            ___awdiv@dividend 0001  
                    ?_putch 0001            __end_of___xxtofl 0BF6                vfprintf@cfmt 002B  
                    ___wmul 1510                   ??___awdiv 0005                   ??___awmod 0005  
                 ??___flmul 0017                   ??___fltol 002C        read_prec_or_width@ap 0008  
                    delay@i 0006                      clear_0 153C            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    pad@buf 000F                      dtoa@fp 0015                      _strlen 14E2  
                    fputc@c 0001                      fputs@c 000B                      fputs@i 000C  
                    fputs@s 0009                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_vfprintf 147A                   ??_sprintf 0030                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  __accesstop 0060  
   __end_of__initialization 1544               ___rparam_used 0001                  ___fltol@f1 0028  
            __pcstackCOMRAM 0001               __end_of_delay 1404               __end_of_fputc 1294  
             __end_of_fputs 1440               __end_of_putch 156C                     ??_delay 0005  
                   ??_fputc 0004                     ??_fputs 000B                     ??_putch 0001  
                __pbssBANK0 0060                     ?___wmul 0001                     ?_strlen 0001  
                 ?___xxtofl 0001                     __Hparam 0000                     __Lparam 0000  
                   ___awdiv 1076                     ___awmod 113A                     ___flmul 0618  
                   ___fltol 0E6E                   ?_vfprintf 0028                __psmallconst 0600  
                   __pcinit 1536                     __ramtop 0600                     __ptext0 0D36  
                   __ptext1 1552                     __ptext2 14E2                     __ptext3 147A  
                   __ptext4 1440                     __ptext5 0F74                     __ptext6 1294  
                   __ptext7 1510                     __ptext8 0BF6                     __ptext9 1332  
     read_prec_or_width@fmt 0007                  ??___xxtofl 0005            ___awmod@dividend 0001  
                   main@adc 0056                     main@cnv 003D                     _sprintf 147A  
      end_of_initialization 1544                     fputc@fp 0003                     fputs@fp 000A  
        _read_prec_or_width 1294           __end_of_vfpfcnvrt 1076                     postdec2 0FDD  
       ?_read_prec_or_width 0007                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 0023                  ??_vfprintf 002B  
                   strlen@a 0003                     strlen@s 0001               ___xxtofl@sign 0009  
      ??_read_prec_or_width 0009                 ___flmul@grs 001C                 vfpfcnvrt@ap 0022  
               vfpfcnvrt@cp 0027                 vfpfcnvrt@fp 0020              __end_of___wmul 1536  
            __end_of_strlen 1510         start_initialization 1536                 __end_of_abs 14E2  
               __end_of_pad 13BC                 __end_of_trx 156A                 vfprintf@fmt 0029  
                  ??___wmul 0005                    ??_strlen 0003                   ___flmul@a 0013  
                 ___flmul@b 000F                 __pbssCOMRAM 005E                    ?___awdiv 0001  
                  ?___awmod 0001                    ?___flmul 000F                    ?___fltol 0028  
               __smallconst 0600                    ?_sprintf 002C                   delay@time 0001  
            ___wmul@product 0005                   _vfpfcnvrt 0F74           ___wmul@multiplier 0001  
                  __Hrparam 0000                  vfprintf@ap 002A                    __Lrparam 0000  
                vfprintf@fp 0028                __Lsmallconst 0600                  ?_vfpfcnvrt 0020  
                sprintf@fmt 002D                    ___xxtofl 0A42                    _dtoa$595 0018  
                  __ptext10 1404                    __ptext11 11EA                    __ptext12 156A  
                  __ptext13 14AE                    __ptext14 113A                    __ptext15 1076  
                  __ptext16 13BC                    __ptext17 0A42                    __ptext18 0E6E  
                  __ptext19 0618                    isa$xinst 0000                    _vfprintf 1440  
                  main@temp 0058                   sprintf@ap 0030                 ??_vfpfcnvrt 0023  
                  sprintf@f 0031                    sprintf@s 002C  
