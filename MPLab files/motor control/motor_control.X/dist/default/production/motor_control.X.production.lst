

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 01 15:57:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11   000000                     
    12                           ; Generated 17/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4580 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46   000000                     _RD3	set	31771
    47   000000                     _RD2	set	31770
    48   000000                     _RC1	set	31761
    49   000000                     _RD1	set	31769
    50   000000                     _TRISC	set	3988
    51   000000                     _TRISD	set	3989
    52   000000                     _RC0	set	31760
    53   000000                     _RD0	set	31768
    54                           
    55                           ; #config settings
    56                           
    57                           	psect	cinit
    58   000726                     __pcinit:
    59                           	callstack 0
    60   000726                     start_initialization:
    61                           	callstack 0
    62   000726                     __initialization:
    63                           	callstack 0
    64   000726                     end_of_initialization:
    65                           	callstack 0
    66   000726                     __end_of__initialization:
    67                           	callstack 0
    68   000726  0100               	movlb	0
    69   000728  EF01  F003         	goto	_main	;jump to C main() function
    70                           
    71                           	psect	cstackCOMRAM
    72   000001                     __pcstackCOMRAM:
    73                           	callstack 0
    74   000001                     main@count0:
    75                           	callstack 0
    76                           
    77                           ; 2 bytes @ 0x0
    78   000001                     	ds	2
    79   000003                     main@count1:
    80                           	callstack 0
    81                           
    82                           ; 2 bytes @ 0x2
    83   000003                     	ds	2
    84                           
    85 ;;
    86 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    87 ;;
    88 ;; *************** function _main *****************
    89 ;; Defined at:
    90 ;;		line 11 in file "motor.c"
    91 ;; Parameters:    Size  Location     Type
    92 ;;		None
    93 ;; Auto vars:     Size  Location     Type
    94 ;;  count1          2    2[COMRAM] int 
    95 ;;  count0          2    0[COMRAM] int 
    96 ;; Return value:  Size  Location     Type
    97 ;;                  1    wreg      void 
    98 ;; Registers used:
    99 ;;		wreg, status,2, status,0
   100 ;; Tracked objects:
   101 ;;		On entry : 0/0
   102 ;;		On exit  : 0/0
   103 ;;		Unchanged: 0/0
   104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   105 ;;      Params:         0       0       0       0       0       0       0
   106 ;;      Locals:         4       0       0       0       0       0       0
   107 ;;      Temps:          0       0       0       0       0       0       0
   108 ;;      Totals:         4       0       0       0       0       0       0
   109 ;;Total ram usage:        4 bytes
   110 ;; This function calls:
   111 ;;		Nothing
   112 ;; This function is called by:
   113 ;;		Startup code after reset
   114 ;; This function uses a non-reentrant model
   115 ;;
   116                           
   117                           	psect	text0
   118   000602                     __ptext0:
   119                           	callstack 0
   120   000602                     _main:
   121                           	callstack 31
   122   000602                     
   123                           ;motor.c: 12:     TRISD=0x00;
   124   000602  0E00               	movlw	0
   125   000604  6E95               	movwf	149,c	;volatile
   126                           
   127                           ;motor.c: 13:     TRISC=0x03;
   128   000606  0E03               	movlw	3
   129   000608  6E94               	movwf	148,c	;volatile
   130   00060A                     
   131                           ;motor.c: 14:     int count0=-1;
   132   00060A  6801               	setf	main@count0^0,c
   133   00060C  6802               	setf	(main@count0+1)^0,c
   134   00060E                     
   135                           ;motor.c: 15:     int count1=-1;
   136   00060E  6803               	setf	main@count1^0,c
   137   000610  6804               	setf	(main@count1+1)^0,c
   138   000612                     l726:
   139                           
   140                           ;motor.c: 17:         if(RC0==1){
   141   000612  A082               	btfss	3970,0,c	;volatile
   142   000614  EF0E  F003         	goto	u11
   143   000618  EF10  F003         	goto	u10
   144   00061C                     u11:
   145   00061C  EF25  F003         	goto	l734
   146   000620                     u10:
   147   000620                     
   148                           ;motor.c: 18:             if(count0==2){
   149   000620  0E02               	movlw	2
   150   000622  1801               	xorwf	main@count0^0,w,c
   151   000624  1002               	iorwf	(main@count0+1)^0,w,c
   152   000626  A4D8               	btfss	status,2,c
   153   000628  EF18  F003         	goto	u21
   154   00062C  EF1A  F003         	goto	u20
   155   000630                     u21:
   156   000630  EF1C  F003         	goto	l732
   157   000634                     u20:
   158   000634                     
   159                           ;motor.c: 19:                 count0=-1;
   160   000634  6801               	setf	main@count0^0,c
   161   000636  6802               	setf	(main@count0+1)^0,c
   162   000638                     l732:
   163                           
   164                           ;motor.c: 21:             count0++;
   165   000638  4A01               	infsnz	main@count0^0,f,c
   166   00063A  2A02               	incf	(main@count0+1)^0,f,c
   167   00063C                     l24:
   168   00063C  B082               	btfsc	3970,0,c	;volatile
   169   00063E  EF23  F003         	goto	u31
   170   000642  EF25  F003         	goto	u30
   171   000646                     u31:
   172   000646  EF1E  F003         	goto	l24
   173   00064A                     u30:
   174   00064A                     l734:
   175                           
   176                           ;motor.c: 24:             if(count0==0){
   177   00064A  5001               	movf	main@count0^0,w,c
   178   00064C  1002               	iorwf	(main@count0+1)^0,w,c
   179   00064E  A4D8               	btfss	status,2,c
   180   000650  EF2C  F003         	goto	u41
   181   000654  EF2E  F003         	goto	u40
   182   000658                     u41:
   183   000658  EF32  F003         	goto	l738
   184   00065C                     u40:
   185   00065C                     
   186                           ;motor.c: 25:                 RD0=0;
   187   00065C  9083               	bcf	3971,0,c	;volatile
   188                           
   189                           ;motor.c: 26:                 RD1=1;
   190   00065E  8283               	bsf	3971,1,c	;volatile
   191                           
   192                           ;motor.c: 27:             }
   193   000660  EF4B  F003         	goto	l28
   194   000664                     l738:
   195   000664  0401               	decf	main@count0^0,w,c
   196   000666  1002               	iorwf	(main@count0+1)^0,w,c
   197   000668  A4D8               	btfss	status,2,c
   198   00066A  EF39  F003         	goto	u51
   199   00066E  EF3B  F003         	goto	u50
   200   000672                     u51:
   201   000672  EF3F  F003         	goto	l742
   202   000676                     u50:
   203   000676                     
   204                           ;motor.c: 29:                 RD0=1;
   205   000676  8083               	bsf	3971,0,c	;volatile
   206                           
   207                           ;motor.c: 30:                 RD1=0;
   208   000678  9283               	bcf	3971,1,c	;volatile
   209                           
   210                           ;motor.c: 31:             }
   211   00067A  EF4B  F003         	goto	l28
   212   00067E                     l742:
   213   00067E  0E02               	movlw	2
   214   000680  1801               	xorwf	main@count0^0,w,c
   215   000682  1002               	iorwf	(main@count0+1)^0,w,c
   216   000684  A4D8               	btfss	status,2,c
   217   000686  EF47  F003         	goto	u61
   218   00068A  EF49  F003         	goto	u60
   219   00068E                     u61:
   220   00068E  EF4B  F003         	goto	l28
   221   000692                     u60:
   222   000692                     
   223                           ;motor.c: 33:                 RD0=0;
   224   000692  9083               	bcf	3971,0,c	;volatile
   225                           
   226                           ;motor.c: 34:                 RD1=0;;
   227   000694  9283               	bcf	3971,1,c	;volatile
   228   000696                     l28:
   229                           
   230                           ;motor.c: 36:         if(RC1==1){
   231   000696  A282               	btfss	3970,1,c	;volatile
   232   000698  EF50  F003         	goto	u71
   233   00069C  EF52  F003         	goto	u70
   234   0006A0                     u71:
   235   0006A0  EF67  F003         	goto	l752
   236   0006A4                     u70:
   237   0006A4                     
   238                           ;motor.c: 37:             if(count1==2){
   239   0006A4  0E02               	movlw	2
   240   0006A6  1803               	xorwf	main@count1^0,w,c
   241   0006A8  1004               	iorwf	(main@count1+1)^0,w,c
   242   0006AA  A4D8               	btfss	status,2,c
   243   0006AC  EF5A  F003         	goto	u81
   244   0006B0  EF5C  F003         	goto	u80
   245   0006B4                     u81:
   246   0006B4  EF5E  F003         	goto	l750
   247   0006B8                     u80:
   248   0006B8                     
   249                           ;motor.c: 38:                 count1=-1;
   250   0006B8  6803               	setf	main@count1^0,c
   251   0006BA  6804               	setf	(main@count1+1)^0,c
   252   0006BC                     l750:
   253                           
   254                           ;motor.c: 40:             count1++;
   255   0006BC  4A03               	infsnz	main@count1^0,f,c
   256   0006BE  2A04               	incf	(main@count1+1)^0,f,c
   257   0006C0                     l34:
   258   0006C0  B282               	btfsc	3970,1,c	;volatile
   259   0006C2  EF65  F003         	goto	u91
   260   0006C6  EF67  F003         	goto	u90
   261   0006CA                     u91:
   262   0006CA  EF60  F003         	goto	l34
   263   0006CE                     u90:
   264   0006CE                     l752:
   265                           
   266                           ;motor.c: 43:             if(count1==0){
   267   0006CE  5003               	movf	main@count1^0,w,c
   268   0006D0  1004               	iorwf	(main@count1+1)^0,w,c
   269   0006D2  A4D8               	btfss	status,2,c
   270   0006D4  EF6E  F003         	goto	u101
   271   0006D8  EF70  F003         	goto	u100
   272   0006DC                     u101:
   273   0006DC  EF74  F003         	goto	l756
   274   0006E0                     u100:
   275   0006E0                     
   276                           ;motor.c: 44:                 RD2=1;
   277   0006E0  8483               	bsf	3971,2,c	;volatile
   278                           
   279                           ;motor.c: 45:                 RD3=0;
   280   0006E2  9683               	bcf	3971,3,c	;volatile
   281                           
   282                           ;motor.c: 46:             }
   283   0006E4  EF09  F003         	goto	l726
   284   0006E8                     l756:
   285   0006E8  0403               	decf	main@count1^0,w,c
   286   0006EA  1004               	iorwf	(main@count1+1)^0,w,c
   287   0006EC  A4D8               	btfss	status,2,c
   288   0006EE  EF7B  F003         	goto	u111
   289   0006F2  EF7D  F003         	goto	u110
   290   0006F6                     u111:
   291   0006F6  EF81  F003         	goto	l760
   292   0006FA                     u110:
   293   0006FA                     
   294                           ;motor.c: 48:                 RD2=0;
   295   0006FA  9483               	bcf	3971,2,c	;volatile
   296                           
   297                           ;motor.c: 49:                 RD3=1;
   298   0006FC  8683               	bsf	3971,3,c	;volatile
   299                           
   300                           ;motor.c: 50:             }
   301   0006FE  EF09  F003         	goto	l726
   302   000702                     l760:
   303   000702  0E02               	movlw	2
   304   000704  1803               	xorwf	main@count1^0,w,c
   305   000706  1004               	iorwf	(main@count1+1)^0,w,c
   306   000708  A4D8               	btfss	status,2,c
   307   00070A  EF89  F003         	goto	u121
   308   00070E  EF8B  F003         	goto	u120
   309   000712                     u121:
   310   000712  EF8F  F003         	goto	l38
   311   000716                     u120:
   312   000716                     
   313                           ;motor.c: 52:                 RD2=0;
   314   000716  9483               	bcf	3971,2,c	;volatile
   315                           
   316                           ;motor.c: 53:                 RD3=0;
   317   000718  9683               	bcf	3971,3,c	;volatile
   318   00071A  EF09  F003         	goto	l726
   319   00071E                     l38:
   320   00071E  EF09  F003         	goto	l726
   321   000722  EF00  F000         	goto	start
   322   000726                     __end_of_main:
   323                           	callstack 0
   324                           
   325                           	psect	smallconst
   326   000600                     __psmallconst:
   327                           	callstack 0
   328   000600  00                 	db	0
   329   000601  00                 	db	0	; dummy byte at the end
   330   000000                     
   331                           	psect	rparam
   332   000000                     tosu	equ	0xFFF
   333                           tosh	equ	0xFFE
   334                           tosl	equ	0xFFD
   335                           stkptr	equ	0xFFC
   336                           pclatu	equ	0xFFB
   337                           pclath	equ	0xFFA
   338                           pcl	equ	0xFF9
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           prodh	equ	0xFF4
   344                           prodl	equ	0xFF3
   345                           indf0	equ	0xFEF
   346                           postinc0	equ	0xFEE
   347                           postdec0	equ	0xFED
   348                           preinc0	equ	0xFEC
   349                           plusw0	equ	0xFEB
   350                           fsr0h	equ	0xFEA
   351                           fsr0l	equ	0xFE9
   352                           wreg	equ	0xFE8
   353                           indf1	equ	0xFE7
   354                           postinc1	equ	0xFE6
   355                           postdec1	equ	0xFE5
   356                           preinc1	equ	0xFE4
   357                           plusw1	equ	0xFE3
   358                           fsr1h	equ	0xFE2
   359                           fsr1l	equ	0xFE1
   360                           bsr	equ	0xFE0
   361                           indf2	equ	0xFDF
   362                           postinc2	equ	0xFDE
   363                           postdec2	equ	0xFDD
   364                           preinc2	equ	0xFDC
   365                           plusw2	equ	0xFDB
   366                           fsr2h	equ	0xFDA
   367                           fsr2l	equ	0xFD9
   368                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     120
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 01 15:57:30 2024

                     l24 063C                       l34 06C0                       l28 0696  
                     l38 071E                       u10 0620                       u11 061C  
                     u20 0634                       u21 0630                       u30 064A  
                     u31 0646                       u40 065C                       u41 0658  
                     u50 0676                       u51 0672                       u60 0692  
                     u61 068E                       u70 06A4                       u71 06A0  
                     u80 06B8                       u81 06B4                       u90 06CE  
                     u91 06CA                      l720 0602                      l730 0634  
                    l722 060A                      l740 0676                      l732 0638  
                    l724 060E                      l750 06BC                      l742 067E  
                    l734 064A                      l726 0612                      l760 0702  
                    l752 06CE                      l744 0692                      l736 065C  
                    l728 0620                      l762 0716                      l754 06E0  
                    l746 06A4                      l738 0664                      l756 06E8  
                    l748 06B8                      l758 06FA                      _RC0 7C10  
                    _RC1 7C11                      _RD0 7C18                      _RD1 7C19  
                    _RD2 7C1A                      _RD3 7C1B                      u100 06E0  
                    u101 06DC                      u110 06FA                      u111 06F6  
                    u120 0716                      u121 0712                     _main 0602  
                   start 0000             ___param_bank 0000                    ?_main 0001  
                  _TRISC 0F94                    _TRISD 0F95                    status 0FD8  
        __initialization 0726             __end_of_main 0726                   ??_main 0001  
          __activetblptr 0000                   isa$std 0001             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 0726            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0726                  __ramtop 0600  
                __ptext0 0602     end_of_initialization 0726               main@count0 0001  
             main@count1 0003      start_initialization 0726              __smallconst 0600  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
