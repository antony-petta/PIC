

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 21 17:54:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21   000000                     
    22                           ; Generated 17/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4580 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   000E3C                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _new
    62   000E3C  30                 	db	48
    63   000E3D  30                 	db	48
    64   000E3E  30                 	db	48
    65   000E3F  30                 	db	48
    66   000E40  00                 	db	0
    67                           
    68                           ;initializer for _inp
    69   000E41  30                 	db	48
    70   000E42  30                 	db	48
    71   000E43  30                 	db	48
    72   000E44  30                 	db	48
    73   000E45  00                 	db	0
    74                           
    75                           ;initializer for _pass
    76   000E46  31                 	db	49
    77   000E47  32                 	db	50
    78   000E48  33                 	db	51
    79   000E49  34                 	db	52
    80   000E4A  00                 	db	0
    81   000000                     _PORTB	set	3969
    82   000000                     _RC2	set	31762
    83   000000                     _RC1	set	31761
    84   000000                     _RB7	set	31759
    85   000000                     _RB6	set	31758
    86   000000                     _RB5	set	31757
    87   000000                     _TRISB	set	3987
    88   000000                     _ADCON1	set	4033
    89   000000                     _RB4	set	31756
    90   000000                     _TRISD	set	3989
    91   000000                     _TRISC	set	3988
    92   000000                     _PORTD	set	3971
    93   000000                     _RC0	set	31760
    94                           
    95                           	psect	smallconst
    96   000600                     __psmallconst:
    97                           	callstack 0
    98   000600  00                 	db	0
    99   000601                     STR_3:
   100   000601  41                 	db	65	;'A'
   101   000602  63                 	db	99	;'c'
   102   000603  63                 	db	99	;'c'
   103   000604  65                 	db	101	;'e'
   104   000605  73                 	db	115	;'s'
   105   000606  73                 	db	115	;'s'
   106   000607  20                 	db	32
   107   000608  47                 	db	71	;'G'
   108   000609  72                 	db	114	;'r'
   109   00060A  61                 	db	97	;'a'
   110   00060B  6E                 	db	110	;'n'
   111   00060C  74                 	db	116	;'t'
   112   00060D  65                 	db	101	;'e'
   113   00060E  64                 	db	100	;'d'
   114   00060F  00                 	db	0
   115   000610                     STR_2:
   116   000610  45                 	db	69	;'E'
   117   000611  6E                 	db	110	;'n'
   118   000612  74                 	db	116	;'t'
   119   000613  65                 	db	101	;'e'
   120   000614  72                 	db	114	;'r'
   121   000615  20                 	db	32
   122   000616  6E                 	db	110	;'n'
   123   000617  65                 	db	101	;'e'
   124   000618  77                 	db	119	;'w'
   125   000619  20                 	db	32
   126   00061A  63                 	db	99	;'c'
   127   00061B  6F                 	db	111	;'o'
   128   00061C  64                 	db	100	;'d'
   129   00061D  65                 	db	101	;'e'
   130   00061E  00                 	db	0
   131   00061F                     STR_4:
   132   00061F  41                 	db	65	;'A'
   133   000620  63                 	db	99	;'c'
   134   000621  63                 	db	99	;'c'
   135   000622  65                 	db	101	;'e'
   136   000623  73                 	db	115	;'s'
   137   000624  73                 	db	115	;'s'
   138   000625  20                 	db	32
   139   000626  44                 	db	68	;'D'
   140   000627  65                 	db	101	;'e'
   141   000628  6E                 	db	110	;'n'
   142   000629  69                 	db	105	;'i'
   143   00062A  65                 	db	101	;'e'
   144   00062B  64                 	db	100	;'d'
   145   00062C  00                 	db	0
   146   00062D                     STR_6:
   147   00062D  6F                 	db	111	;'o'
   148   00062E  6C                 	db	108	;'l'
   149   00062F  64                 	db	100	;'d'
   150   000630  20                 	db	32
   151   000631  63                 	db	99	;'c'
   152   000632  6F                 	db	111	;'o'
   153   000633  64                 	db	100	;'d'
   154   000634  65                 	db	101	;'e'
   155   000635  20                 	db	32
   156   000636  69                 	db	105	;'i'
   157   000637  73                 	db	115	;'s'
   158   000638  00                 	db	0
   159   000639                     STR_7:
   160   000639  6E                 	db	110	;'n'
   161   00063A  65                 	db	101	;'e'
   162   00063B  77                 	db	119	;'w'
   163   00063C  20                 	db	32
   164   00063D  63                 	db	99	;'c'
   165   00063E  6F                 	db	111	;'o'
   166   00063F  64                 	db	100	;'d'
   167   000640  65                 	db	101	;'e'
   168   000641  20                 	db	32
   169   000642  69                 	db	105	;'i'
   170   000643  73                 	db	115	;'s'
   171   000644  00                 	db	0
   172   000645                     STR_1:
   173   000645  45                 	db	69	;'E'
   174   000646  6E                 	db	110	;'n'
   175   000647  74                 	db	116	;'t'
   176   000648  65                 	db	101	;'e'
   177   000649  72                 	db	114	;'r'
   178   00064A  20                 	db	32
   179   00064B  63                 	db	99	;'c'
   180   00064C  6F                 	db	111	;'o'
   181   00064D  64                 	db	100	;'d'
   182   00064E  65                 	db	101	;'e'
   183   00064F  00                 	db	0
   184   000650                     STR_5:
   185   000650  63                 	db	99	;'c'
   186   000651  6F                 	db	111	;'o'
   187   000652  6E                 	db	110	;'n'
   188   000653  74                 	db	116	;'t'
   189   000654  69                 	db	105	;'i'
   190   000655  6E                 	db	110	;'n'
   191   000656  75                 	db	117	;'u'
   192   000657  65                 	db	101	;'e'
   193   000658  00                 	db	0
   194   000659  00                 	db	0	; dummy byte at the end
   195   000000                     
   196                           ; #config settings
   197                           
   198                           	psect	cinit
   199   000DD2                     __pcinit:
   200                           	callstack 0
   201   000DD2                     start_initialization:
   202                           	callstack 0
   203   000DD2                     __initialization:
   204                           	callstack 0
   205                           
   206                           ; Initialize objects allocated to COMRAM (15 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208   000DD2  0E3C               	movlw	low __pidataCOMRAM
   209   000DD4  6EF6               	movwf	tblptrl,c
   210   000DD6  0E0E               	movlw	high __pidataCOMRAM
   211   000DD8  6EF7               	movwf	tblptrh,c
   212   000DDA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213   000DDC  6EF8               	movwf	tblptru,c
   214   000DDE  EE00  F001         	lfsr	0,__pdataCOMRAM
   215   000DE2  EE10 F00F          	lfsr	1,15
   216   000DE6                     copy_data0:
   217   000DE6  0009               	tblrd		*+
   218   000DE8  CFF5 FFEE          	movff	tablat,postinc0
   219   000DEC  50E5               	movf	postdec1,w,c
   220   000DEE  50E1               	movf	fsr1l,w,c
   221   000DF0  E1FA               	bnz	copy_data0
   222                           
   223                           ; Clear objects allocated to COMRAM (13 bytes)
   224   000DF2  EE00  F01F         	lfsr	0,__pbssCOMRAM
   225   000DF6  0E0D               	movlw	13
   226   000DF8                     clear_0:
   227   000DF8  6AEE               	clrf	postinc0,c
   228   000DFA  06E8               	decf	wreg,f,c
   229   000DFC  E1FD               	bnz	clear_0
   230   000DFE                     end_of_initialization:
   231                           	callstack 0
   232   000DFE                     __end_of__initialization:
   233                           	callstack 0
   234   000DFE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   235   000E00  6EF8               	movwf	tblptru,c
   236   000E02  0100               	movlb	0
   237   000E04  EF2D  F003         	goto	_main	;jump to C main() function
   238                           
   239                           	psect	bssCOMRAM
   240   00001F                     __pbssCOMRAM:
   241                           	callstack 0
   242   00001F                     _flag2:
   243                           	callstack 0
   244   00001F                     	ds	2
   245   000021                     _flag:
   246                           	callstack 0
   247   000021                     	ds	2
   248   000023                     _index2:
   249                           	callstack 0
   250   000023                     	ds	2
   251   000025                     _index:
   252                           	callstack 0
   253   000025                     	ds	2
   254   000027                     _c2:
   255                           	callstack 0
   256   000027                     	ds	2
   257   000029                     _c1:
   258                           	callstack 0
   259   000029                     	ds	2
   260   00002B                     _a:
   261                           	callstack 0
   262   00002B                     	ds	1
   263                           
   264                           	psect	dataCOMRAM
   265   000001                     __pdataCOMRAM:
   266                           	callstack 0
   267   000001                     _new:
   268                           	callstack 0
   269   000001                     	ds	5
   270   000006                     _inp:
   271                           	callstack 0
   272   000006                     	ds	5
   273   00000B                     _pass:
   274                           	callstack 0
   275   00000B                     	ds	5
   276                           
   277                           	psect	cstackCOMRAM
   278   000010                     __pcstackCOMRAM:
   279                           	callstack 0
   280   000010                     ?_strcmp:
   281                           	callstack 0
   282   000010                     strcmp@l:
   283                           	callstack 0
   284   000010                     delay@time:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0x0
   288   000010                     	ds	1
   289   000011                     strcmp@r:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x1
   293   000011                     	ds	1
   294   000012                     ??_strcmp:
   295                           
   296                           ; 1 bytes @ 0x2
   297   000012                     	ds	2
   298   000014                     ??_delay:
   299                           
   300                           ; 1 bytes @ 0x4
   301   000014                     	ds	1
   302   000015                     delay@i:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0x5
   306   000015                     	ds	4
   307   000019                     lcdctrl@a:
   308                           	callstack 0
   309   000019                     lcddisp@b:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x9
   313   000019                     	ds	1
   314   00001A                     lcdstring@p:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xA
   318   00001A                     	ds	1
   319   00001B                     main@j:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0xB
   323   00001B                     	ds	2
   324   00001D                     main@j_91:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0xD
   328   00001D                     	ds	2
   329                           
   330 ;;
   331 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   332 ;;
   333 ;; *************** function _main *****************
   334 ;; Defined at:
   335 ;;		line 16 in file "password_edit.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  j               2   13[COMRAM] int 
   340 ;;  j               2   11[COMRAM] int 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   350 ;;      Params:         0       0       0       0       0       0       0
   351 ;;      Locals:         4       0       0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0
   353 ;;      Totals:         4       0       0       0       0       0       0
   354 ;;Total ram usage:        4 bytes
   355 ;; Hardware stack levels required when called: 5
   356 ;; This function calls:
   357 ;;		_delay
   358 ;;		_keypad
   359 ;;		_lcdctrl
   360 ;;		_lcddisp
   361 ;;		_lcdstring
   362 ;;		_newcode
   363 ;;		_strcmp
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text0
   370   00065A                     __ptext0:
   371                           	callstack 0
   372   00065A                     _main:
   373                           	callstack 26
   374   00065A                     
   375                           ;password_edit.c: 17:     ADCON1=0X0F;
   376   00065A  0E0F               	movlw	15
   377   00065C  6EC1               	movwf	193,c	;volatile
   378                           
   379                           ;password_edit.c: 18:     TRISB=0XF0;
   380   00065E  0EF0               	movlw	240
   381   000660  6E93               	movwf	147,c	;volatile
   382                           
   383                           ;password_edit.c: 19:     TRISC=0X00;
   384   000662  0E00               	movlw	0
   385   000664  6E94               	movwf	148,c	;volatile
   386                           
   387                           ;password_edit.c: 20:     TRISD=0x00;
   388   000666  0E00               	movlw	0
   389   000668  6E95               	movwf	149,c	;volatile
   390   00066A                     
   391                           ;password_edit.c: 21:     lcdctrl(0x38);
   392   00066A  0E38               	movlw	56
   393   00066C  ECCD  F006         	call	_lcdctrl
   394   000670                     l1466:
   395                           
   396                           ;password_edit.c: 23:        lcdctrl(0x80);
   397   000670  0E80               	movlw	128
   398   000672  ECCD  F006         	call	_lcdctrl
   399   000676                     
   400                           ;password_edit.c: 24:        lcdctrl(0x01);
   401   000676  0E01               	movlw	1
   402   000678  ECCD  F006         	call	_lcdctrl
   403   00067C                     
   404                           ;password_edit.c: 25:        lcdstring("Enter code");
   405   00067C  0E45               	movlw	low STR_1
   406   00067E  6E1A               	movwf	lcdstring@p^0,c
   407   000680  EC04  F007         	call	_lcdstring	;wreg free
   408   000684                     
   409                           ;password_edit.c: 26:        lcdctrl(0xc0);
   410   000684  0EC0               	movlw	192
   411   000686  ECCD  F006         	call	_lcdctrl
   412   00068A                     
   413                           ;password_edit.c: 27:        for(index=0;index<4;index++){
   414   00068A  0E00               	movlw	0
   415   00068C  6E26               	movwf	(_index+1)^0,c
   416   00068E  0E00               	movlw	0
   417   000690  6E25               	movwf	_index^0,c
   418   000692                     l1476:
   419   000692  BE26               	btfsc	(_index+1)^0,7,c
   420   000694  EF55  F003         	goto	u821
   421   000698  5026               	movf	(_index+1)^0,w,c
   422   00069A  E109               	bnz	u820
   423   00069C  0E04               	movlw	4
   424   00069E  5C25               	subwf	_index^0,w,c
   425   0006A0  A0D8               	btfss	status,0,c
   426   0006A2  EF55  F003         	goto	u821
   427   0006A6  EF57  F003         	goto	u820
   428   0006AA                     u821:
   429   0006AA  EF59  F003         	goto	l1480
   430   0006AE                     u820:
   431   0006AE  EFE1  F003         	goto	l1532
   432   0006B2                     l1480:
   433                           
   434                           ;password_edit.c: 28:            if(flag==1){
   435   0006B2  0421               	decf	_flag^0,w,c
   436   0006B4  1022               	iorwf	(_flag+1)^0,w,c
   437   0006B6  A4D8               	btfss	status,2,c
   438   0006B8  EF60  F003         	goto	u831
   439   0006BC  EF62  F003         	goto	u830
   440   0006C0                     u831:
   441   0006C0  EF64  F003         	goto	l1486
   442   0006C4                     u830:
   443   0006C4  EFE1  F003         	goto	l1532
   444   0006C8                     l1486:
   445                           
   446                           ;password_edit.c: 32:            a=keypad();
   447   0006C8  EC9C  F004         	call	_keypad	;wreg free
   448   0006CC  6E2B               	movwf	_a^0,c
   449                           
   450                           ;password_edit.c: 33:            switch(a){
   451   0006CE  EFB2  F003         	goto	l1520
   452   0006D2                     l1488:
   453                           
   454                           ;password_edit.c: 35:                    index=index-2;
   455   0006D2  0EFE               	movlw	254
   456   0006D4  2425               	addwf	_index^0,w,c
   457   0006D6  6E25               	movwf	_index^0,c
   458   0006D8  0EFF               	movlw	255
   459   0006DA  2026               	addwfc	(_index+1)^0,w,c
   460   0006DC  6E26               	movwf	(_index+1)^0,c
   461                           
   462                           ;password_edit.c: 36:                    break;
   463   0006DE  EFC1  F003         	goto	l79
   464   0006E2                     l1490:
   465                           
   466                           ;password_edit.c: 38:                     lcdctrl(0x01);
   467   0006E2  0E01               	movlw	1
   468   0006E4  ECCD  F006         	call	_lcdctrl
   469                           
   470                           ;password_edit.c: 39:                     lcdctrl(0x80);
   471   0006E8  0E80               	movlw	128
   472   0006EA  ECCD  F006         	call	_lcdctrl
   473   0006EE                     
   474                           ;password_edit.c: 40:                     lcdstring("Enter new code");
   475   0006EE  0E10               	movlw	low STR_2
   476   0006F0  6E1A               	movwf	lcdstring@p^0,c
   477   0006F2  EC04  F007         	call	_lcdstring	;wreg free
   478   0006F6                     
   479                           ;password_edit.c: 41:                     newcode();
   480   0006F6  ECEB  F005         	call	_newcode	;wreg free
   481   0006FA                     
   482                           ;password_edit.c: 42:                     flag=1;
   483   0006FA  0E00               	movlw	0
   484   0006FC  6E22               	movwf	(_flag+1)^0,c
   485   0006FE  0E01               	movlw	1
   486   000700  6E21               	movwf	_flag^0,c
   487   000702                     
   488                           ;password_edit.c: 43:                     index=4;
   489   000702  0E00               	movlw	0
   490   000704  6E26               	movwf	(_index+1)^0,c
   491   000706  0E04               	movlw	4
   492   000708  6E25               	movwf	_index^0,c
   493                           
   494                           ;password_edit.c: 44:                     break;
   495   00070A  EFC1  F003         	goto	l79
   496   00070E                     l1500:
   497                           
   498                           ;password_edit.c: 47:                     for(index=0;index<4;index++){
   499   00070E  0E00               	movlw	0
   500   000710  6E26               	movwf	(_index+1)^0,c
   501   000712  0E00               	movlw	0
   502   000714  6E25               	movwf	_index^0,c
   503   000716                     l1502:
   504   000716  BE26               	btfsc	(_index+1)^0,7,c
   505   000718  EF97  F003         	goto	u841
   506   00071C  5026               	movf	(_index+1)^0,w,c
   507   00071E  E109               	bnz	u840
   508   000720  0E04               	movlw	4
   509   000722  5C25               	subwf	_index^0,w,c
   510   000724  A0D8               	btfss	status,0,c
   511   000726  EF97  F003         	goto	u841
   512   00072A  EF99  F003         	goto	u840
   513   00072E                     u841:
   514   00072E  EF9B  F003         	goto	l1506
   515   000732                     u840:
   516   000732  EF9F  F003         	goto	l1510
   517   000736                     l1506:
   518                           
   519                           ;password_edit.c: 49:                     }
   520   000736  4A25               	infsnz	_index^0,f,c
   521   000738  2A26               	incf	(_index+1)^0,f,c
   522   00073A  EF8B  F003         	goto	l1502
   523   00073E                     l1510:
   524                           
   525                           ;password_edit.c: 50:                     lcdctrl(0x01);
   526   00073E  0E01               	movlw	1
   527   000740  ECCD  F006         	call	_lcdctrl
   528   000744  EF9A  F004         	goto	l77
   529   000748                     l1514:
   530                           
   531                           ;password_edit.c: 54:                    a=keypad();
   532   000748  EC9C  F004         	call	_keypad	;wreg free
   533   00074C  6E2B               	movwf	_a^0,c
   534   00074E                     
   535                           ;password_edit.c: 55:                    lcddisp(a);
   536   00074E  502B               	movf	_a^0,w,c
   537   000750  ECB1  F006         	call	_lcddisp
   538   000754                     
   539                           ;password_edit.c: 56:                    inp[index]=a;
   540   000754  5025               	movf	_index^0,w,c
   541   000756  0F06               	addlw	low _inp
   542   000758  6ED9               	movwf	fsr2l,c
   543   00075A  6ADA               	clrf	fsr2h,c
   544   00075C  C02B  FFDF         	movff	_a,indf2
   545                           
   546                           ;password_edit.c: 57:             }
   547   000760  EFC1  F003         	goto	l79
   548   000764                     l1520:
   549   000764  502B               	movf	_a^0,w,c
   550                           
   551                           ; Switch size 1, requested type "simple"
   552                           ; Number of cases is 3, Range of values is 97 to 99
   553                           ; switch strategies available:
   554                           ; Name         Instructions Cycles
   555                           ; simple_byte           10     6 (average)
   556                           ;	Chosen strategy is simple_byte
   557   000766  0A61               	xorlw	97	; case 97
   558   000768  B4D8               	btfsc	status,2,c
   559   00076A  EF69  F003         	goto	l1488
   560   00076E  0A03               	xorlw	3	; case 98
   561   000770  B4D8               	btfsc	status,2,c
   562   000772  EF71  F003         	goto	l1490
   563   000776  0A01               	xorlw	1	; case 99
   564   000778  B4D8               	btfsc	status,2,c
   565   00077A  EF87  F003         	goto	l1500
   566   00077E  EFA4  F003         	goto	l1514
   567   000782                     l79:
   568   000782  A881               	btfss	3969,4,c	;volatile
   569   000784  EFC6  F003         	goto	u851
   570   000788  EFC8  F003         	goto	u850
   571   00078C                     u851:
   572   00078C  EFC1  F003         	goto	l79
   573   000790                     u850:
   574   000790  AA81               	btfss	3969,5,c	;volatile
   575   000792  EFCD  F003         	goto	u861
   576   000796  EFCF  F003         	goto	u860
   577   00079A                     u861:
   578   00079A  EFC1  F003         	goto	l79
   579   00079E                     u860:
   580   00079E  AC81               	btfss	3969,6,c	;volatile
   581   0007A0  EFD4  F003         	goto	u871
   582   0007A4  EFD6  F003         	goto	u870
   583   0007A8                     u871:
   584   0007A8  EFC1  F003         	goto	l79
   585   0007AC                     u870:
   586   0007AC  AE81               	btfss	3969,7,c	;volatile
   587   0007AE  EFDB  F003         	goto	u881
   588   0007B2  EFDD  F003         	goto	u880
   589   0007B6                     u881:
   590   0007B6  EFC1  F003         	goto	l79
   591   0007BA                     u880:
   592   0007BA                     
   593                           ;password_edit.c: 62:        }
   594   0007BA  4A25               	infsnz	_index^0,f,c
   595   0007BC  2A26               	incf	(_index+1)^0,f,c
   596   0007BE  EF49  F003         	goto	l1476
   597   0007C2                     l1532:
   598                           
   599                           ;password_edit.c: 64:        delay(10000);
   600   0007C2  0E10               	movlw	16
   601   0007C4  6E10               	movwf	delay@time^0,c
   602   0007C6  0E27               	movlw	39
   603   0007C8  6E11               	movwf	(delay@time+1)^0,c
   604   0007CA  0E00               	movlw	0
   605   0007CC  6E12               	movwf	(delay@time+2)^0,c
   606   0007CE  0E00               	movlw	0
   607   0007D0  6E13               	movwf	(delay@time+3)^0,c
   608   0007D2  EC8D  F006         	call	_delay	;wreg free
   609   0007D6                     
   610                           ;password_edit.c: 65:        if(flag==0){
   611   0007D6  5021               	movf	_flag^0,w,c
   612   0007D8  1022               	iorwf	(_flag+1)^0,w,c
   613   0007DA  A4D8               	btfss	status,2,c
   614   0007DC  EFF2  F003         	goto	u891
   615   0007E0  EFF4  F003         	goto	u890
   616   0007E4                     u891:
   617   0007E4  EF71  F004         	goto	l1570
   618   0007E8                     u890:
   619   0007E8                     
   620                           ;password_edit.c: 66:        if(strcmp(pass,inp)==0){
   621   0007E8  0E0B               	movlw	low _pass
   622   0007EA  6E10               	movwf	strcmp@l^0,c
   623   0007EC  0E06               	movlw	low _inp
   624   0007EE  6E11               	movwf	strcmp@r^0,c
   625   0007F0  EC5E  F006         	call	_strcmp	;wreg free
   626   0007F4  5010               	movf	?_strcmp^0,w,c
   627   0007F6  1011               	iorwf	(?_strcmp+1)^0,w,c
   628   0007F8  A4D8               	btfss	status,2,c
   629   0007FA  EF01  F004         	goto	u901
   630   0007FE  EF03  F004         	goto	u900
   631   000802                     u901:
   632   000802  EF3A  F004         	goto	l1554
   633   000806                     u900:
   634   000806                     
   635                           ;password_edit.c: 67:            lcdctrl(0x01);
   636   000806  0E01               	movlw	1
   637   000808  ECCD  F006         	call	_lcdctrl
   638   00080C                     
   639                           ;password_edit.c: 68:            lcdstring("Access Granted");
   640   00080C  0E01               	movlw	low STR_3
   641   00080E  6E1A               	movwf	lcdstring@p^0,c
   642   000810  EC04  F007         	call	_lcdstring	;wreg free
   643   000814                     
   644                           ;password_edit.c: 69:            for(int j=0;j<10;j++){
   645   000814  0E00               	movlw	0
   646   000816  6E1C               	movwf	(main@j+1)^0,c
   647   000818  0E00               	movlw	0
   648   00081A  6E1B               	movwf	main@j^0,c
   649   00081C                     l1548:
   650                           
   651                           ;password_edit.c: 71:                lcdctrl(0x08);
   652   00081C  0E08               	movlw	8
   653   00081E  ECCD  F006         	call	_lcdctrl
   654                           
   655                           ;password_edit.c: 72:                delay(10000);
   656   000822  0E10               	movlw	16
   657   000824  6E10               	movwf	delay@time^0,c
   658   000826  0E27               	movlw	39
   659   000828  6E11               	movwf	(delay@time+1)^0,c
   660   00082A  0E00               	movlw	0
   661   00082C  6E12               	movwf	(delay@time+2)^0,c
   662   00082E  0E00               	movlw	0
   663   000830  6E13               	movwf	(delay@time+3)^0,c
   664   000832  EC8D  F006         	call	_delay	;wreg free
   665                           
   666                           ;password_edit.c: 73:                lcdctrl(0x0f);
   667   000836  0E0F               	movlw	15
   668   000838  ECCD  F006         	call	_lcdctrl
   669                           
   670                           ;password_edit.c: 74:                delay(10000);
   671   00083C  0E10               	movlw	16
   672   00083E  6E10               	movwf	delay@time^0,c
   673   000840  0E27               	movlw	39
   674   000842  6E11               	movwf	(delay@time+1)^0,c
   675   000844  0E00               	movlw	0
   676   000846  6E12               	movwf	(delay@time+2)^0,c
   677   000848  0E00               	movlw	0
   678   00084A  6E13               	movwf	(delay@time+3)^0,c
   679   00084C  EC8D  F006         	call	_delay	;wreg free
   680   000850                     
   681                           ;password_edit.c: 75:            }
   682   000850  4A1B               	infsnz	main@j^0,f,c
   683   000852  2A1C               	incf	(main@j+1)^0,f,c
   684   000854  BE1C               	btfsc	(main@j+1)^0,7,c
   685   000856  EF36  F004         	goto	u911
   686   00085A  501C               	movf	(main@j+1)^0,w,c
   687   00085C  E109               	bnz	u910
   688   00085E  0E0A               	movlw	10
   689   000860  5C1B               	subwf	main@j^0,w,c
   690   000862  A0D8               	btfss	status,0,c
   691   000864  EF36  F004         	goto	u911
   692   000868  EF38  F004         	goto	u910
   693   00086C                     u911:
   694   00086C  EF0E  F004         	goto	l1548
   695   000870                     u910:
   696   000870  EF38  F003         	goto	l1466
   697   000874                     l1554:
   698                           
   699                           ;password_edit.c: 79:            lcdctrl(0x01);
   700   000874  0E01               	movlw	1
   701   000876  ECCD  F006         	call	_lcdctrl
   702   00087A                     
   703                           ;password_edit.c: 80:            lcdstring("Access Denied");
   704   00087A  0E1F               	movlw	low STR_4
   705   00087C  6E1A               	movwf	lcdstring@p^0,c
   706   00087E  EC04  F007         	call	_lcdstring	;wreg free
   707   000882                     
   708                           ;password_edit.c: 81:            for(int j=0;j<10;j++){
   709   000882  0E00               	movlw	0
   710   000884  6E1E               	movwf	(main@j_91+1)^0,c
   711   000886  0E00               	movlw	0
   712   000888  6E1D               	movwf	main@j_91^0,c
   713   00088A                     l1564:
   714                           
   715                           ;password_edit.c: 82:                lcdctrl(0x08);
   716   00088A  0E08               	movlw	8
   717   00088C  ECCD  F006         	call	_lcdctrl
   718                           
   719                           ;password_edit.c: 83:                delay(10000);
   720   000890  0E10               	movlw	16
   721   000892  6E10               	movwf	delay@time^0,c
   722   000894  0E27               	movlw	39
   723   000896  6E11               	movwf	(delay@time+1)^0,c
   724   000898  0E00               	movlw	0
   725   00089A  6E12               	movwf	(delay@time+2)^0,c
   726   00089C  0E00               	movlw	0
   727   00089E  6E13               	movwf	(delay@time+3)^0,c
   728   0008A0  EC8D  F006         	call	_delay	;wreg free
   729                           
   730                           ;password_edit.c: 84:                lcdctrl(0x0f);
   731   0008A4  0E0F               	movlw	15
   732   0008A6  ECCD  F006         	call	_lcdctrl
   733                           
   734                           ;password_edit.c: 85:                delay(10000);
   735   0008AA  0E10               	movlw	16
   736   0008AC  6E10               	movwf	delay@time^0,c
   737   0008AE  0E27               	movlw	39
   738   0008B0  6E11               	movwf	(delay@time+1)^0,c
   739   0008B2  0E00               	movlw	0
   740   0008B4  6E12               	movwf	(delay@time+2)^0,c
   741   0008B6  0E00               	movlw	0
   742   0008B8  6E13               	movwf	(delay@time+3)^0,c
   743   0008BA  EC8D  F006         	call	_delay	;wreg free
   744   0008BE                     
   745                           ;password_edit.c: 86:            }
   746   0008BE  4A1D               	infsnz	main@j_91^0,f,c
   747   0008C0  2A1E               	incf	(main@j_91+1)^0,f,c
   748   0008C2  BE1E               	btfsc	(main@j_91+1)^0,7,c
   749   0008C4  EF6D  F004         	goto	u921
   750   0008C8  501E               	movf	(main@j_91+1)^0,w,c
   751   0008CA  E109               	bnz	u920
   752   0008CC  0E0A               	movlw	10
   753   0008CE  5C1D               	subwf	main@j_91^0,w,c
   754   0008D0  A0D8               	btfss	status,0,c
   755   0008D2  EF6D  F004         	goto	u921
   756   0008D6  EF6F  F004         	goto	u920
   757   0008DA                     u921:
   758   0008DA  EF45  F004         	goto	l1564
   759   0008DE                     u920:
   760   0008DE  EF38  F003         	goto	l1466
   761   0008E2                     l1570:
   762   0008E2  0421               	decf	_flag^0,w,c
   763   0008E4  1022               	iorwf	(_flag+1)^0,w,c
   764   0008E6  A4D8               	btfss	status,2,c
   765   0008E8  EF78  F004         	goto	u931
   766   0008EC  EF7A  F004         	goto	u930
   767   0008F0                     u931:
   768   0008F0  EF38  F003         	goto	l1466
   769   0008F4                     u930:
   770   0008F4                     
   771                           ;password_edit.c: 92:            lcdctrl(0x01);
   772   0008F4  0E01               	movlw	1
   773   0008F6  ECCD  F006         	call	_lcdctrl
   774                           
   775                           ;password_edit.c: 93:            lcdctrl(0x80);
   776   0008FA  0E80               	movlw	128
   777   0008FC  ECCD  F006         	call	_lcdctrl
   778   000900                     
   779                           ;password_edit.c: 94:            lcdstring("continue");
   780   000900  0E50               	movlw	low STR_5
   781   000902  6E1A               	movwf	lcdstring@p^0,c
   782   000904  EC04  F007         	call	_lcdstring	;wreg free
   783   000908                     
   784                           ;password_edit.c: 95:            delay(5000);
   785   000908  0E88               	movlw	136
   786   00090A  6E10               	movwf	delay@time^0,c
   787   00090C  0E13               	movlw	19
   788   00090E  6E11               	movwf	(delay@time+1)^0,c
   789   000910  0E00               	movlw	0
   790   000912  6E12               	movwf	(delay@time+2)^0,c
   791   000914  0E00               	movlw	0
   792   000916  6E13               	movwf	(delay@time+3)^0,c
   793   000918  EC8D  F006         	call	_delay	;wreg free
   794   00091C                     
   795                           ;password_edit.c: 99:            a=keypad();
   796   00091C  EC9C  F004         	call	_keypad	;wreg free
   797   000920  6E2B               	movwf	_a^0,c
   798   000922                     l93:
   799   000922  AC81               	btfss	3969,6,c	;volatile
   800   000924  EF96  F004         	goto	u941
   801   000928  EF98  F004         	goto	u940
   802   00092C                     u941:
   803   00092C  EF91  F004         	goto	l93
   804   000930                     u940:
   805   000930  EF38  F003         	goto	l1466
   806   000934                     l77:
   807   000934  EF00  F000         	goto	start
   808   000938                     __end_of_main:
   809                           	callstack 0
   810                           
   811 ;; *************** function _strcmp *****************
   812 ;; Defined at:
   813 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  l               1    0[COMRAM] PTR const unsigned char 
   816 ;;		 -> pass(5), 
   817 ;;  r               1    1[COMRAM] PTR const unsigned char 
   818 ;;		 -> inp(5), 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  2    0[COMRAM] int 
   823 ;; Registers used:
   824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   830 ;;      Params:         2       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0
   832 ;;      Temps:          2       0       0       0       0       0       0
   833 ;;      Totals:         4       0       0       0       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text1
   844   000CBC                     __ptext1:
   845                           	callstack 0
   846   000CBC                     _strcmp:
   847                           	callstack 30
   848   000CBC  EF62  F006         	goto	l1454
   849   000CC0                     l1452:
   850   000CC0  2A10               	incf	strcmp@l^0,f,c
   851   000CC2  2A11               	incf	strcmp@r^0,f,c
   852   000CC4                     l1454:
   853   000CC4  5011               	movf	strcmp@r^0,w,c
   854   000CC6  6ED9               	movwf	fsr2l,c
   855   000CC8  6ADA               	clrf	fsr2h,c
   856   000CCA  5010               	movf	strcmp@l^0,w,c
   857   000CCC  6EE1               	movwf	fsr1l,c
   858   000CCE  6AE2               	clrf	fsr1h,c
   859   000CD0  50DE               	movf	postinc2,w,c
   860   000CD2  18E6               	xorwf	postinc1,w,c
   861   000CD4  A4D8               	btfss	status,2,c
   862   000CD6  EF6F  F006         	goto	u801
   863   000CDA  EF71  F006         	goto	u800
   864   000CDE                     u801:
   865   000CDE  EF7C  F006         	goto	l1458
   866   000CE2                     u800:
   867   000CE2  5010               	movf	strcmp@l^0,w,c
   868   000CE4  6ED9               	movwf	fsr2l,c
   869   000CE6  6ADA               	clrf	fsr2h,c
   870   000CE8  50DF               	movf	indf2,w,c
   871   000CEA  A4D8               	btfss	status,2,c
   872   000CEC  EF7A  F006         	goto	u811
   873   000CF0  EF7C  F006         	goto	u810
   874   000CF4                     u811:
   875   000CF4  EF60  F006         	goto	l1452
   876   000CF8                     u810:
   877   000CF8                     l1458:
   878   000CF8  5010               	movf	strcmp@l^0,w,c
   879   000CFA  6ED9               	movwf	fsr2l,c
   880   000CFC  6ADA               	clrf	fsr2h,c
   881   000CFE  50DF               	movf	indf2,w,c
   882   000D00  6E12               	movwf	??_strcmp^0,c
   883   000D02  5011               	movf	strcmp@r^0,w,c
   884   000D04  6ED9               	movwf	fsr2l,c
   885   000D06  6ADA               	clrf	fsr2h,c
   886   000D08  50DF               	movf	indf2,w,c
   887   000D0A  6E13               	movwf	(??_strcmp+1)^0,c
   888   000D0C  5013               	movf	(??_strcmp+1)^0,w,c
   889   000D0E  5C12               	subwf	??_strcmp^0,w,c
   890   000D10  6E10               	movwf	?_strcmp^0,c
   891   000D12  6A11               	clrf	(?_strcmp+1)^0,c
   892   000D14  A0D8               	btfss	status,0,c
   893   000D16  0611               	decf	(?_strcmp+1)^0,f,c
   894   000D18  0012               	return		;funcret
   895   000D1A                     __end_of_strcmp:
   896                           	callstack 0
   897                           
   898 ;; *************** function _newcode *****************
   899 ;; Defined at:
   900 ;;		line 135 in file "password_edit.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         0       0       0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 4
   921 ;; This function calls:
   922 ;;		_keypad
   923 ;;		_lcdctrl
   924 ;;		_lcddisp
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text2
   931   000BD6                     __ptext2:
   932                           	callstack 0
   933   000BD6                     _newcode:
   934                           	callstack 26
   935   000BD6                     
   936                           ;password_edit.c: 136:     lcdctrl(0xc0);
   937   000BD6  0EC0               	movlw	192
   938   000BD8  ECCD  F006         	call	_lcdctrl
   939   000BDC                     
   940                           ;password_edit.c: 137:     for(index2=0;index2<4;index2++){
   941   000BDC  0E00               	movlw	0
   942   000BDE  6E24               	movwf	(_index2+1)^0,c
   943   000BE0  0E00               	movlw	0
   944   000BE2  6E23               	movwf	_index2^0,c
   945   000BE4                     l1416:
   946                           
   947                           ;password_edit.c: 138:         a=keypad();
   948   000BE4  EC9C  F004         	call	_keypad	;wreg free
   949   000BE8  6E2B               	movwf	_a^0,c
   950                           
   951                           ;password_edit.c: 139:         switch(a){
   952   000BEA  EF26  F006         	goto	l1438
   953   000BEE                     l1418:
   954                           
   955                           ;password_edit.c: 141:                 index2=index2-2;
   956   000BEE  0EFE               	movlw	254
   957   000BF0  2423               	addwf	_index2^0,w,c
   958   000BF2  6E23               	movwf	_index2^0,c
   959   000BF4  0EFF               	movlw	255
   960   000BF6  2024               	addwfc	(_index2+1)^0,w,c
   961   000BF8  6E24               	movwf	(_index2+1)^0,c
   962                           
   963                           ;password_edit.c: 142:                 break;
   964   000BFA  EF31  F006         	goto	l126
   965   000BFE                     l1420:
   966                           
   967                           ;password_edit.c: 144:                 for(index2=0;index2<4;index2++){
   968   000BFE  0E00               	movlw	0
   969   000C00  6E24               	movwf	(_index2+1)^0,c
   970   000C02  0E00               	movlw	0
   971   000C04  6E23               	movwf	_index2^0,c
   972   000C06                     l1426:
   973                           
   974                           ;password_edit.c: 146:                 }
   975   000C06  4A23               	infsnz	_index2^0,f,c
   976   000C08  2A24               	incf	(_index2+1)^0,f,c
   977   000C0A  BE24               	btfsc	(_index2+1)^0,7,c
   978   000C0C  EF11  F006         	goto	u741
   979   000C10  5024               	movf	(_index2+1)^0,w,c
   980   000C12  E109               	bnz	u740
   981   000C14  0E04               	movlw	4
   982   000C16  5C23               	subwf	_index2^0,w,c
   983   000C18  A0D8               	btfss	status,0,c
   984   000C1A  EF11  F006         	goto	u741
   985   000C1E  EF13  F006         	goto	u740
   986   000C22                     u741:
   987   000C22  EF03  F006         	goto	l1426
   988   000C26                     u740:
   989   000C26                     
   990                           ;password_edit.c: 147:                 lcdctrl(0x01);
   991   000C26  0E01               	movlw	1
   992   000C28  ECCD  F006         	call	_lcdctrl
   993                           
   994                           ;password_edit.c: 148:                 break;
   995   000C2C  EF31  F006         	goto	l126
   996   000C30                     l1432:
   997                           
   998                           ;password_edit.c: 150:                 a=keypad();
   999   000C30  EC9C  F004         	call	_keypad	;wreg free
  1000   000C34  6E2B               	movwf	_a^0,c
  1001   000C36                     
  1002                           ;password_edit.c: 151:                 lcddisp(a);
  1003   000C36  502B               	movf	_a^0,w,c
  1004   000C38  ECB1  F006         	call	_lcddisp
  1005   000C3C                     
  1006                           ;password_edit.c: 153:                 new[index2]=a;
  1007   000C3C  5023               	movf	_index2^0,w,c
  1008   000C3E  0F01               	addlw	low _new
  1009   000C40  6ED9               	movwf	fsr2l,c
  1010   000C42  6ADA               	clrf	fsr2h,c
  1011   000C44  C02B  FFDF         	movff	_a,indf2
  1012                           
  1013                           ;password_edit.c: 154:         }
  1014   000C48  EF31  F006         	goto	l126
  1015   000C4C                     l1438:
  1016   000C4C  502B               	movf	_a^0,w,c
  1017                           
  1018                           ; Switch size 1, requested type "simple"
  1019                           ; Number of cases is 2, Range of values is 97 to 99
  1020                           ; switch strategies available:
  1021                           ; Name         Instructions Cycles
  1022                           ; simple_byte            7     4 (average)
  1023                           ;	Chosen strategy is simple_byte
  1024   000C4E  0A61               	xorlw	97	; case 97
  1025   000C50  B4D8               	btfsc	status,2,c
  1026   000C52  EFF7  F005         	goto	l1418
  1027   000C56  0A02               	xorlw	2	; case 99
  1028   000C58  B4D8               	btfsc	status,2,c
  1029   000C5A  EFFF  F005         	goto	l1420
  1030   000C5E  EF18  F006         	goto	l1432
  1031   000C62                     l126:
  1032   000C62  A881               	btfss	3969,4,c	;volatile
  1033   000C64  EF36  F006         	goto	u751
  1034   000C68  EF38  F006         	goto	u750
  1035   000C6C                     u751:
  1036   000C6C  EF31  F006         	goto	l126
  1037   000C70                     u750:
  1038   000C70  AA81               	btfss	3969,5,c	;volatile
  1039   000C72  EF3D  F006         	goto	u761
  1040   000C76  EF3F  F006         	goto	u760
  1041   000C7A                     u761:
  1042   000C7A  EF31  F006         	goto	l126
  1043   000C7E                     u760:
  1044   000C7E  AC81               	btfss	3969,6,c	;volatile
  1045   000C80  EF44  F006         	goto	u771
  1046   000C84  EF46  F006         	goto	u770
  1047   000C88                     u771:
  1048   000C88  EF31  F006         	goto	l126
  1049   000C8C                     u770:
  1050   000C8C  AE81               	btfss	3969,7,c	;volatile
  1051   000C8E  EF4B  F006         	goto	u781
  1052   000C92  EF4D  F006         	goto	u780
  1053   000C96                     u781:
  1054   000C96  EF31  F006         	goto	l126
  1055   000C9A                     u780:
  1056   000C9A                     
  1057                           ;password_edit.c: 157:     }
  1058   000C9A  4A23               	infsnz	_index2^0,f,c
  1059   000C9C  2A24               	incf	(_index2+1)^0,f,c
  1060   000C9E  BE24               	btfsc	(_index2+1)^0,7,c
  1061   000CA0  EF5B  F006         	goto	u791
  1062   000CA4  5024               	movf	(_index2+1)^0,w,c
  1063   000CA6  E109               	bnz	u790
  1064   000CA8  0E04               	movlw	4
  1065   000CAA  5C23               	subwf	_index2^0,w,c
  1066   000CAC  A0D8               	btfss	status,0,c
  1067   000CAE  EF5B  F006         	goto	u791
  1068   000CB2  EF5D  F006         	goto	u790
  1069   000CB6                     u791:
  1070   000CB6  EFF2  F005         	goto	l1416
  1071   000CBA                     u790:
  1072   000CBA  0012               	return		;funcret
  1073   000CBC                     __end_of_newcode:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _keypad *****************
  1077 ;; Defined at:
  1078 ;;		line 159 in file "password_edit.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      unsigned char 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1092 ;;      Params:         0       0       0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 3
  1099 ;; This function calls:
  1100 ;;		_lcdctrl
  1101 ;;		_lcddisp
  1102 ;;		_lcdstring
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;;		_newcode
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text3
  1110   000938                     __ptext3:
  1111                           	callstack 0
  1112   000938                     _keypad:
  1113                           	callstack 26
  1114   000938                     l132:
  1115   000938                     
  1116                           ;password_edit.c: 162:         PORTB=0X0e;
  1117   000938  0E0E               	movlw	14
  1118   00093A  6E81               	movwf	129,c	;volatile
  1119   00093C                     
  1120                           ;password_edit.c: 163:         if(RB4==0)
  1121   00093C  B881               	btfsc	3969,4,c	;volatile
  1122   00093E  EFA3  F004         	goto	u501
  1123   000942  EFA5  F004         	goto	u500
  1124   000946                     u501:
  1125   000946  EFA8  F004         	goto	l133
  1126   00094A                     u500:
  1127   00094A                     
  1128                           ;password_edit.c: 164:         {;password_edit.c: 165:          return '9';
  1129   00094A  0E39               	movlw	57
  1130   00094C  EFEA  F005         	goto	l134
  1131   000950                     l133:
  1132   000950  BA81               	btfsc	3969,5,c	;volatile
  1133   000952  EFAD  F004         	goto	u511
  1134   000956  EFAF  F004         	goto	u510
  1135   00095A                     u511:
  1136   00095A  EFB2  F004         	goto	l136
  1137   00095E                     u510:
  1138   00095E                     
  1139                           ;password_edit.c: 168:         {;password_edit.c: 169:             return '8';
  1140   00095E  0E38               	movlw	56
  1141   000960  EFEA  F005         	goto	l134
  1142   000964                     l136:
  1143   000964  BC81               	btfsc	3969,6,c	;volatile
  1144   000966  EFB7  F004         	goto	u521
  1145   00096A  EFB9  F004         	goto	u520
  1146   00096E                     u521:
  1147   00096E  EFBC  F004         	goto	l138
  1148   000972                     u520:
  1149   000972                     
  1150                           ;password_edit.c: 172:         {;password_edit.c: 173:             return '7';
  1151   000972  0E37               	movlw	55
  1152   000974  EFEA  F005         	goto	l134
  1153   000978                     l138:
  1154   000978  BE81               	btfsc	3969,7,c	;volatile
  1155   00097A  EFC1  F004         	goto	u531
  1156   00097E  EFC3  F004         	goto	u530
  1157   000982                     u531:
  1158   000982  EFCF  F004         	goto	l137
  1159   000986                     u530:
  1160   000986                     
  1161                           ;password_edit.c: 176:         {;password_edit.c: 177:             lcdctrl(0x10);
  1162   000986  0E10               	movlw	16
  1163   000988  ECCD  F006         	call	_lcdctrl
  1164                           
  1165                           ;password_edit.c: 178:             lcddisp(' ');
  1166   00098C  0E20               	movlw	32
  1167   00098E  ECB1  F006         	call	_lcddisp
  1168                           
  1169                           ;password_edit.c: 179:             lcdctrl(0x10);
  1170   000992  0E10               	movlw	16
  1171   000994  ECCD  F006         	call	_lcdctrl
  1172   000998                     
  1173                           ;password_edit.c: 181:             return 'a';
  1174   000998  0E61               	movlw	97
  1175   00099A  EFEA  F005         	goto	l134
  1176   00099E                     l137:
  1177   00099E                     
  1178                           ;password_edit.c: 184:         PORTB=0X0D;
  1179   00099E  0E0D               	movlw	13
  1180   0009A0  6E81               	movwf	129,c	;volatile
  1181   0009A2                     
  1182                           ;password_edit.c: 185:          if(RB4==0)
  1183   0009A2  B881               	btfsc	3969,4,c	;volatile
  1184   0009A4  EFD6  F004         	goto	u541
  1185   0009A8  EFD8  F004         	goto	u540
  1186   0009AC                     u541:
  1187   0009AC  EFDB  F004         	goto	l141
  1188   0009B0                     u540:
  1189   0009B0                     
  1190                           ;password_edit.c: 186:         {;password_edit.c: 188:              return '6';
  1191   0009B0  0E36               	movlw	54
  1192   0009B2  EFEA  F005         	goto	l134
  1193   0009B6                     l141:
  1194   0009B6  BA81               	btfsc	3969,5,c	;volatile
  1195   0009B8  EFE0  F004         	goto	u551
  1196   0009BC  EFE2  F004         	goto	u550
  1197   0009C0                     u551:
  1198   0009C0  EFE5  F004         	goto	l143
  1199   0009C4                     u550:
  1200   0009C4                     
  1201                           ;password_edit.c: 191:         {;password_edit.c: 193:             return '5';
  1202   0009C4  0E35               	movlw	53
  1203   0009C6  EFEA  F005         	goto	l134
  1204   0009CA                     l143:
  1205   0009CA  BC81               	btfsc	3969,6,c	;volatile
  1206   0009CC  EFEA  F004         	goto	u561
  1207   0009D0  EFEC  F004         	goto	u560
  1208   0009D4                     u561:
  1209   0009D4  EFEF  F004         	goto	l145
  1210   0009D8                     u560:
  1211   0009D8                     
  1212                           ;password_edit.c: 196:         {;password_edit.c: 198:             return '4';
  1213   0009D8  0E34               	movlw	52
  1214   0009DA  EFEA  F005         	goto	l134
  1215   0009DE                     l145:
  1216   0009DE  BE81               	btfsc	3969,7,c	;volatile
  1217   0009E0  EFF4  F004         	goto	u571
  1218   0009E4  EFF6  F004         	goto	u570
  1219   0009E8                     u571:
  1220   0009E8  EFF9  F004         	goto	l144
  1221   0009EC                     u570:
  1222   0009EC                     
  1223                           ;password_edit.c: 201:         {;password_edit.c: 203:             return 'b';
  1224   0009EC  0E62               	movlw	98
  1225   0009EE  EFEA  F005         	goto	l134
  1226   0009F2                     l144:
  1227   0009F2                     
  1228                           ;password_edit.c: 207:         PORTB=0X0B;
  1229   0009F2  0E0B               	movlw	11
  1230   0009F4  6E81               	movwf	129,c	;volatile
  1231   0009F6                     
  1232                           ;password_edit.c: 208:          if(RB4==0)
  1233   0009F6  B881               	btfsc	3969,4,c	;volatile
  1234   0009F8  EF00  F005         	goto	u581
  1235   0009FC  EF02  F005         	goto	u580
  1236   000A00                     u581:
  1237   000A00  EF05  F005         	goto	l148
  1238   000A04                     u580:
  1239   000A04                     
  1240                           ;password_edit.c: 209:         {;password_edit.c: 211:              return '3';
  1241   000A04  0E33               	movlw	51
  1242   000A06  EFEA  F005         	goto	l134
  1243   000A0A                     l148:
  1244   000A0A  BA81               	btfsc	3969,5,c	;volatile
  1245   000A0C  EF0A  F005         	goto	u591
  1246   000A10  EF0C  F005         	goto	u590
  1247   000A14                     u591:
  1248   000A14  EF0F  F005         	goto	l150
  1249   000A18                     u590:
  1250   000A18                     
  1251                           ;password_edit.c: 214:         {;password_edit.c: 216:             return '2';
  1252   000A18  0E32               	movlw	50
  1253   000A1A  EFEA  F005         	goto	l134
  1254   000A1E                     l150:
  1255   000A1E  BC81               	btfsc	3969,6,c	;volatile
  1256   000A20  EF14  F005         	goto	u601
  1257   000A24  EF16  F005         	goto	u600
  1258   000A28                     u601:
  1259   000A28  EF19  F005         	goto	l152
  1260   000A2C                     u600:
  1261   000A2C                     
  1262                           ;password_edit.c: 219:         {;password_edit.c: 221:             return '1';
  1263   000A2C  0E31               	movlw	49
  1264   000A2E  EFEA  F005         	goto	l134
  1265   000A32                     l152:
  1266   000A32                     
  1267                           ;password_edit.c: 228:         PORTB=0X07;
  1268   000A32  0E07               	movlw	7
  1269   000A34  6E81               	movwf	129,c	;volatile
  1270   000A36                     
  1271                           ;password_edit.c: 229:         if(RB4==0){
  1272   000A36  B881               	btfsc	3969,4,c	;volatile
  1273   000A38  EF20  F005         	goto	u611
  1274   000A3C  EF22  F005         	goto	u610
  1275   000A40                     u611:
  1276   000A40  EF58  F005         	goto	l155
  1277   000A44                     u610:
  1278   000A44                     
  1279                           ;password_edit.c: 230:             if(c1==2){
  1280   000A44  0E02               	movlw	2
  1281   000A46  1829               	xorwf	_c1^0,w,c
  1282   000A48  102A               	iorwf	(_c1+1)^0,w,c
  1283   000A4A  A4D8               	btfss	status,2,c
  1284   000A4C  EF2A  F005         	goto	u621
  1285   000A50  EF2C  F005         	goto	u620
  1286   000A54                     u621:
  1287   000A54  EF30  F005         	goto	l1344
  1288   000A58                     u620:
  1289   000A58                     
  1290                           ;password_edit.c: 231:                 c1=0;
  1291   000A58  0E00               	movlw	0
  1292   000A5A  6E2A               	movwf	(_c1+1)^0,c
  1293   000A5C  0E00               	movlw	0
  1294   000A5E  6E29               	movwf	_c1^0,c
  1295   000A60                     l1344:
  1296                           
  1297                           ;password_edit.c: 233:             c1++;
  1298   000A60  4A29               	infsnz	_c1^0,f,c
  1299   000A62  2A2A               	incf	(_c1+1)^0,f,c
  1300   000A64                     l157:
  1301   000A64  A881               	btfss	3969,4,c	;volatile
  1302   000A66  EF37  F005         	goto	u631
  1303   000A6A  EF39  F005         	goto	u630
  1304   000A6E                     u631:
  1305   000A6E  EF32  F005         	goto	l157
  1306   000A72                     u630:
  1307   000A72                     
  1308                           ;password_edit.c: 235:             if(c1==1){
  1309   000A72  0429               	decf	_c1^0,w,c
  1310   000A74  102A               	iorwf	(_c1+1)^0,w,c
  1311   000A76  A4D8               	btfss	status,2,c
  1312   000A78  EF40  F005         	goto	u641
  1313   000A7C  EF42  F005         	goto	u640
  1314   000A80                     u641:
  1315   000A80  EF47  F005         	goto	l1350
  1316   000A84                     u640:
  1317   000A84                     
  1318                           ;password_edit.c: 236:                 lcdctrl(0x0f);
  1319   000A84  0E0F               	movlw	15
  1320   000A86  ECCD  F006         	call	_lcdctrl
  1321                           
  1322                           ;password_edit.c: 237:             }
  1323   000A8A  EF9C  F004         	goto	l132
  1324   000A8E                     l1350:
  1325   000A8E  0E02               	movlw	2
  1326   000A90  1829               	xorwf	_c1^0,w,c
  1327   000A92  102A               	iorwf	(_c1+1)^0,w,c
  1328   000A94  A4D8               	btfss	status,2,c
  1329   000A96  EF4F  F005         	goto	u651
  1330   000A9A  EF51  F005         	goto	u650
  1331   000A9E                     u651:
  1332   000A9E  EF56  F005         	goto	l161
  1333   000AA2                     u650:
  1334   000AA2                     
  1335                           ;password_edit.c: 239:                 lcdctrl(0x08);
  1336   000AA2  0E08               	movlw	8
  1337   000AA4  ECCD  F006         	call	_lcdctrl
  1338   000AA8  EF9C  F004         	goto	l132
  1339   000AAC                     l161:
  1340                           
  1341                           ;password_edit.c: 241:         }
  1342   000AAC  EF9C  F004         	goto	l132
  1343   000AB0                     l155:
  1344   000AB0  BA81               	btfsc	3969,5,c	;volatile
  1345   000AB2  EF5D  F005         	goto	u661
  1346   000AB6  EF5F  F005         	goto	u660
  1347   000ABA                     u661:
  1348   000ABA  EF62  F005         	goto	l164
  1349   000ABE                     u660:
  1350   000ABE                     
  1351                           ;password_edit.c: 244:         {;password_edit.c: 246:             return 'c';
  1352   000ABE  0E63               	movlw	99
  1353   000AC0  EFEA  F005         	goto	l134
  1354   000AC4                     l164:
  1355   000AC4  BC81               	btfsc	3969,6,c	;volatile
  1356   000AC6  EF67  F005         	goto	u671
  1357   000ACA  EF69  F005         	goto	u670
  1358   000ACE                     u671:
  1359   000ACE  EFE8  F005         	goto	l166
  1360   000AD2                     u670:
  1361   000AD2                     
  1362                           ;password_edit.c: 250:         {;password_edit.c: 251:             lcdctrl(0x01);
  1363   000AD2  0E01               	movlw	1
  1364   000AD4  ECCD  F006         	call	_lcdctrl
  1365   000AD8                     
  1366                           ;password_edit.c: 252:             if(c2==2){
  1367   000AD8  0E02               	movlw	2
  1368   000ADA  1827               	xorwf	_c2^0,w,c
  1369   000ADC  1028               	iorwf	(_c2+1)^0,w,c
  1370   000ADE  A4D8               	btfss	status,2,c
  1371   000AE0  EF74  F005         	goto	u681
  1372   000AE4  EF76  F005         	goto	u680
  1373   000AE8                     u681:
  1374   000AE8  EF7A  F005         	goto	l1366
  1375   000AEC                     u680:
  1376   000AEC                     
  1377                           ;password_edit.c: 253:                 c2=0;
  1378   000AEC  0E00               	movlw	0
  1379   000AEE  6E28               	movwf	(_c2+1)^0,c
  1380   000AF0  0E00               	movlw	0
  1381   000AF2  6E27               	movwf	_c2^0,c
  1382   000AF4                     l1366:
  1383                           
  1384                           ;password_edit.c: 255:             c2++;
  1385   000AF4  4A27               	infsnz	_c2^0,f,c
  1386   000AF6  2A28               	incf	(_c2+1)^0,f,c
  1387   000AF8                     l168:
  1388   000AF8  AC81               	btfss	3969,6,c	;volatile
  1389   000AFA  EF81  F005         	goto	u691
  1390   000AFE  EF83  F005         	goto	u690
  1391   000B02                     u691:
  1392   000B02  EF7C  F005         	goto	l168
  1393   000B06                     u690:
  1394   000B06                     
  1395                           ;password_edit.c: 257:             if(c2==1){
  1396   000B06  0427               	decf	_c2^0,w,c
  1397   000B08  1028               	iorwf	(_c2+1)^0,w,c
  1398   000B0A  A4D8               	btfss	status,2,c
  1399   000B0C  EF8A  F005         	goto	u701
  1400   000B10  EF8C  F005         	goto	u700
  1401   000B14                     u701:
  1402   000B14  EFB5  F005         	goto	l1388
  1403   000B18                     u700:
  1404   000B18                     
  1405                           ;password_edit.c: 258:                 lcdctrl(0x80);
  1406   000B18  0E80               	movlw	128
  1407   000B1A  ECCD  F006         	call	_lcdctrl
  1408   000B1E                     
  1409                           ;password_edit.c: 259:                 lcdstring("old code is");
  1410   000B1E  0E2D               	movlw	low STR_6
  1411   000B20  6E1A               	movwf	lcdstring@p^0,c
  1412   000B22  EC04  F007         	call	_lcdstring	;wreg free
  1413   000B26                     
  1414                           ;password_edit.c: 260:                 lcdctrl(0xc0);
  1415   000B26  0EC0               	movlw	192
  1416   000B28  ECCD  F006         	call	_lcdctrl
  1417   000B2C                     
  1418                           ;password_edit.c: 261:                 for(index=0;index<4;index++){
  1419   000B2C  0E00               	movlw	0
  1420   000B2E  6E26               	movwf	(_index+1)^0,c
  1421   000B30  0E00               	movlw	0
  1422   000B32  6E25               	movwf	_index^0,c
  1423   000B34                     l1378:
  1424   000B34  BE26               	btfsc	(_index+1)^0,7,c
  1425   000B36  EFA6  F005         	goto	u711
  1426   000B3A  5026               	movf	(_index+1)^0,w,c
  1427   000B3C  E109               	bnz	u710
  1428   000B3E  0E04               	movlw	4
  1429   000B40  5C25               	subwf	_index^0,w,c
  1430   000B42  A0D8               	btfss	status,0,c
  1431   000B44  EFA6  F005         	goto	u711
  1432   000B48  EFA8  F005         	goto	u710
  1433   000B4C                     u711:
  1434   000B4C  EFAA  F005         	goto	l1382
  1435   000B50                     u710:
  1436   000B50  EF9C  F004         	goto	l132
  1437   000B54                     l1382:
  1438                           
  1439                           ;password_edit.c: 262:                     lcddisp(pass[index]);
  1440   000B54  5025               	movf	_index^0,w,c
  1441   000B56  0F0B               	addlw	low _pass
  1442   000B58  6ED9               	movwf	fsr2l,c
  1443   000B5A  6ADA               	clrf	fsr2h,c
  1444   000B5C  50DF               	movf	indf2,w,c
  1445   000B5E  ECB1  F006         	call	_lcddisp
  1446   000B62                     
  1447                           ;password_edit.c: 263:                 }
  1448   000B62  4A25               	infsnz	_index^0,f,c
  1449   000B64  2A26               	incf	(_index+1)^0,f,c
  1450   000B66  EF9A  F005         	goto	l1378
  1451   000B6A                     l1388:
  1452   000B6A  0E02               	movlw	2
  1453   000B6C  1827               	xorwf	_c2^0,w,c
  1454   000B6E  1028               	iorwf	(_c2+1)^0,w,c
  1455   000B70  A4D8               	btfss	status,2,c
  1456   000B72  EFBD  F005         	goto	u721
  1457   000B76  EFBF  F005         	goto	u720
  1458   000B7A                     u721:
  1459   000B7A  EFEA  F005         	goto	l134
  1460   000B7E                     u720:
  1461   000B7E                     
  1462                           ;password_edit.c: 266:                 lcdctrl(0x80);
  1463   000B7E  0E80               	movlw	128
  1464   000B80  ECCD  F006         	call	_lcdctrl
  1465   000B84                     
  1466                           ;password_edit.c: 267:                 lcdstring("new code is");
  1467   000B84  0E39               	movlw	low STR_7
  1468   000B86  6E1A               	movwf	lcdstring@p^0,c
  1469   000B88  EC04  F007         	call	_lcdstring	;wreg free
  1470   000B8C                     
  1471                           ;password_edit.c: 268:                 lcdctrl(0xc0);
  1472   000B8C  0EC0               	movlw	192
  1473   000B8E  ECCD  F006         	call	_lcdctrl
  1474   000B92                     
  1475                           ;password_edit.c: 269:                 for(index=0;index<4;index++){
  1476   000B92  0E00               	movlw	0
  1477   000B94  6E26               	movwf	(_index+1)^0,c
  1478   000B96  0E00               	movlw	0
  1479   000B98  6E25               	movwf	_index^0,c
  1480   000B9A                     l1398:
  1481   000B9A  BE26               	btfsc	(_index+1)^0,7,c
  1482   000B9C  EFD9  F005         	goto	u731
  1483   000BA0  5026               	movf	(_index+1)^0,w,c
  1484   000BA2  E109               	bnz	u730
  1485   000BA4  0E04               	movlw	4
  1486   000BA6  5C25               	subwf	_index^0,w,c
  1487   000BA8  A0D8               	btfss	status,0,c
  1488   000BAA  EFD9  F005         	goto	u731
  1489   000BAE  EFDB  F005         	goto	u730
  1490   000BB2                     u731:
  1491   000BB2  EFDD  F005         	goto	l1402
  1492   000BB6                     u730:
  1493   000BB6  EF9C  F004         	goto	l132
  1494   000BBA                     l1402:
  1495                           
  1496                           ;password_edit.c: 270:                     lcddisp(new[index]);
  1497   000BBA  5025               	movf	_index^0,w,c
  1498   000BBC  0F01               	addlw	low _new
  1499   000BBE  6ED9               	movwf	fsr2l,c
  1500   000BC0  6ADA               	clrf	fsr2h,c
  1501   000BC2  50DF               	movf	indf2,w,c
  1502   000BC4  ECB1  F006         	call	_lcddisp
  1503   000BC8                     
  1504                           ;password_edit.c: 271:                 }
  1505   000BC8  4A25               	infsnz	_index^0,f,c
  1506   000BCA  2A26               	incf	(_index+1)^0,f,c
  1507   000BCC  EFCD  F005         	goto	l1398
  1508   000BD0                     l166:
  1509   000BD0  EF9C  F004         	goto	l132
  1510   000BD4                     l134:
  1511   000BD4  0012               	return		;funcret
  1512   000BD6                     __end_of_keypad:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _lcdstring *****************
  1516 ;; Defined at:
  1517 ;;		line 128 in file "password_edit.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  p               1   10[COMRAM] PTR const unsigned char 
  1520 ;;		 -> STR_7(12), STR_6(12), STR_5(9), STR_4(14), 
  1521 ;;		 -> STR_3(15), STR_2(15), STR_1(11), 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1533 ;;      Params:         1       0       0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0
  1536 ;;      Totals:         1       0       0       0       0       0       0
  1537 ;;Total ram usage:        1 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 2
  1540 ;; This function calls:
  1541 ;;		_lcddisp
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;;		_keypad
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text4
  1549   000E08                     __ptext4:
  1550                           	callstack 0
  1551   000E08                     _lcdstring:
  1552                           	callstack 26
  1553   000E08                     
  1554                           ;password_edit.c: 129:     while(*p)
  1555   000E08  EF0F  F007         	goto	l1258
  1556   000E0C                     l1254:
  1557                           
  1558                           ;password_edit.c: 130:     {;password_edit.c: 131:         lcddisp(*p);
  1559   000E0C  C01A  FFF6         	movff	lcdstring@p,tblptrl
  1560   000E10                     	if	1	;There is more than 1 active tblptr byte
  1561   000E10  0E06               	movlw	high __smallconst
  1562   000E12  6EF7               	movwf	tblptrh,c
  1563   000E14                     	endif
  1564   000E14                     	if	0	;tblptru may be non-zero
  1565   000E14                     	endif
  1566   000E14                     	if	0	;tblptru may be non-zero
  1567   000E14                     	endif
  1568   000E14  0008               	tblrd		*
  1569   000E16  50F5               	movf	tablat,w,c
  1570   000E18  ECB1  F006         	call	_lcddisp
  1571   000E1C                     
  1572                           ;password_edit.c: 132:         p++;
  1573   000E1C  2A1A               	incf	lcdstring@p^0,f,c
  1574   000E1E                     l1258:
  1575                           
  1576                           ;password_edit.c: 129:     while(*p)
  1577   000E1E  C01A  FFF6         	movff	lcdstring@p,tblptrl
  1578   000E22                     	if	1	;There is more than 1 active tblptr byte
  1579   000E22  0E06               	movlw	high __smallconst
  1580   000E24  6EF7               	movwf	tblptrh,c
  1581   000E26                     	endif
  1582   000E26                     	if	0	;tblptru may be non-zero
  1583   000E26                     	endif
  1584   000E26                     	if	0	;tblptru may be non-zero
  1585   000E26                     	endif
  1586   000E26  0008               	tblrd		*
  1587   000E28  50F5               	movf	tablat,w,c
  1588   000E2A  0900               	iorlw	0
  1589   000E2C  A4D8               	btfss	status,2,c
  1590   000E2E  EF1B  F007         	goto	u491
  1591   000E32  EF1D  F007         	goto	u490
  1592   000E36                     u491:
  1593   000E36  EF06  F007         	goto	l1254
  1594   000E3A                     u490:
  1595   000E3A  0012               	return		;funcret
  1596   000E3C                     __end_of_lcdstring:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _lcddisp *****************
  1600 ;; Defined at:
  1601 ;;		line 119 in file "password_edit.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  b               1    wreg     unsigned char 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  b               1    9[COMRAM] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1615 ;;      Params:         0       0       0       0       0       0       0
  1616 ;;      Locals:         1       0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0
  1618 ;;      Totals:         1       0       0       0       0       0       0
  1619 ;;Total ram usage:        1 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 1
  1622 ;; This function calls:
  1623 ;;		_delay
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;;		_lcdstring
  1627 ;;		_newcode
  1628 ;;		_keypad
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text5
  1633   000D62                     __ptext5:
  1634                           	callstack 0
  1635   000D62                     _lcddisp:
  1636                           	callstack 28
  1637                           
  1638                           ;incstack = 0
  1639                           ;lcddisp@b stored from wreg
  1640   000D62  6E19               	movwf	lcddisp@b^0,c
  1641   000D64                     
  1642                           ;password_edit.c: 120:     RC0=1;
  1643   000D64  8082               	bsf	3970,0,c	;volatile
  1644                           
  1645                           ;password_edit.c: 121:     RC1=0;
  1646   000D66  9282               	bcf	3970,1,c	;volatile
  1647   000D68                     
  1648                           ;password_edit.c: 122:     PORTD=b;
  1649   000D68  C019  FF83         	movff	lcddisp@b,3971	;volatile
  1650   000D6C                     
  1651                           ;password_edit.c: 123:     RC2=1;
  1652   000D6C  8482               	bsf	3970,2,c	;volatile
  1653   000D6E                     
  1654                           ;password_edit.c: 124:     delay(100);
  1655   000D6E  0E64               	movlw	100
  1656   000D70  6E10               	movwf	delay@time^0,c
  1657   000D72  0E00               	movlw	0
  1658   000D74  6E11               	movwf	(delay@time+1)^0,c
  1659   000D76  0E00               	movlw	0
  1660   000D78  6E12               	movwf	(delay@time+2)^0,c
  1661   000D7A  0E00               	movlw	0
  1662   000D7C  6E13               	movwf	(delay@time+3)^0,c
  1663   000D7E  EC8D  F006         	call	_delay	;wreg free
  1664   000D82                     
  1665                           ;password_edit.c: 125:     RC2=0;
  1666   000D82  9482               	bcf	3970,2,c	;volatile
  1667   000D84                     
  1668                           ;password_edit.c: 126:     delay(5000);
  1669   000D84  0E88               	movlw	136
  1670   000D86  6E10               	movwf	delay@time^0,c
  1671   000D88  0E13               	movlw	19
  1672   000D8A  6E11               	movwf	(delay@time+1)^0,c
  1673   000D8C  0E00               	movlw	0
  1674   000D8E  6E12               	movwf	(delay@time+2)^0,c
  1675   000D90  0E00               	movlw	0
  1676   000D92  6E13               	movwf	(delay@time+3)^0,c
  1677   000D94  EC8D  F006         	call	_delay	;wreg free
  1678   000D98  0012               	return		;funcret
  1679   000D9A                     __end_of_lcddisp:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _lcdctrl *****************
  1683 ;; Defined at:
  1684 ;;		line 110 in file "password_edit.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  a               1    wreg     unsigned char 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  a               1    9[COMRAM] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1698 ;;      Params:         0       0       0       0       0       0       0
  1699 ;;      Locals:         1       0       0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0
  1701 ;;      Totals:         1       0       0       0       0       0       0
  1702 ;;Total ram usage:        1 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 1
  1705 ;; This function calls:
  1706 ;;		_delay
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;;		_newcode
  1710 ;;		_keypad
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text6
  1715   000D9A                     __ptext6:
  1716                           	callstack 0
  1717   000D9A                     _lcdctrl:
  1718                           	callstack 28
  1719                           
  1720                           ;incstack = 0
  1721                           ;lcdctrl@a stored from wreg
  1722   000D9A  6E19               	movwf	lcdctrl@a^0,c
  1723   000D9C                     
  1724                           ;password_edit.c: 111:     RC0=0;
  1725   000D9C  9082               	bcf	3970,0,c	;volatile
  1726                           
  1727                           ;password_edit.c: 112:     RC1=0;
  1728   000D9E  9282               	bcf	3970,1,c	;volatile
  1729   000DA0                     
  1730                           ;password_edit.c: 113:     PORTD=a;
  1731   000DA0  C019  FF83         	movff	lcdctrl@a,3971	;volatile
  1732   000DA4                     
  1733                           ;password_edit.c: 114:     RC2=1;
  1734   000DA4  8482               	bsf	3970,2,c	;volatile
  1735   000DA6                     
  1736                           ;password_edit.c: 115:     delay(100);
  1737   000DA6  0E64               	movlw	100
  1738   000DA8  6E10               	movwf	delay@time^0,c
  1739   000DAA  0E00               	movlw	0
  1740   000DAC  6E11               	movwf	(delay@time+1)^0,c
  1741   000DAE  0E00               	movlw	0
  1742   000DB0  6E12               	movwf	(delay@time+2)^0,c
  1743   000DB2  0E00               	movlw	0
  1744   000DB4  6E13               	movwf	(delay@time+3)^0,c
  1745   000DB6  EC8D  F006         	call	_delay	;wreg free
  1746   000DBA                     
  1747                           ;password_edit.c: 116:     RC2=0;
  1748   000DBA  9482               	bcf	3970,2,c	;volatile
  1749   000DBC                     
  1750                           ;password_edit.c: 117:     delay(5000);
  1751   000DBC  0E88               	movlw	136
  1752   000DBE  6E10               	movwf	delay@time^0,c
  1753   000DC0  0E13               	movlw	19
  1754   000DC2  6E11               	movwf	(delay@time+1)^0,c
  1755   000DC4  0E00               	movlw	0
  1756   000DC6  6E12               	movwf	(delay@time+2)^0,c
  1757   000DC8  0E00               	movlw	0
  1758   000DCA  6E13               	movwf	(delay@time+3)^0,c
  1759   000DCC  EC8D  F006         	call	_delay	;wreg free
  1760   000DD0  0012               	return		;funcret
  1761   000DD2                     __end_of_lcdctrl:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function _delay *****************
  1765 ;; Defined at:
  1766 ;;		line 107 in file "password_edit.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  time            4    0[COMRAM] long 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  i               4    5[COMRAM] long 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1780 ;;      Params:         4       0       0       0       0       0       0
  1781 ;;      Locals:         4       0       0       0       0       0       0
  1782 ;;      Temps:          1       0       0       0       0       0       0
  1783 ;;      Totals:         9       0       0       0       0       0       0
  1784 ;;Total ram usage:        9 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;;		_lcdctrl
  1791 ;;		_lcddisp
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text7
  1796   000D1A                     __ptext7:
  1797                           	callstack 0
  1798   000D1A                     _delay:
  1799                           	callstack 28
  1800   000D1A                     
  1801                           ;password_edit.c: 108:     for(long int i=0;i<time;i++);
  1802   000D1A  0E00               	movlw	0
  1803   000D1C  6E15               	movwf	delay@i^0,c
  1804   000D1E  0E00               	movlw	0
  1805   000D20  6E16               	movwf	(delay@i+1)^0,c
  1806   000D22  0E00               	movlw	0
  1807   000D24  6E17               	movwf	(delay@i+2)^0,c
  1808   000D26  0E00               	movlw	0
  1809   000D28  6E18               	movwf	(delay@i+3)^0,c
  1810   000D2A  EF9D  F006         	goto	l99
  1811   000D2E                     l1226:
  1812   000D2E  0E01               	movlw	1
  1813   000D30  2615               	addwf	delay@i^0,f,c
  1814   000D32  0E00               	movlw	0
  1815   000D34  2216               	addwfc	(delay@i+1)^0,f,c
  1816   000D36  2217               	addwfc	(delay@i+2)^0,f,c
  1817   000D38  2218               	addwfc	(delay@i+3)^0,f,c
  1818   000D3A                     l99:
  1819   000D3A  5010               	movf	delay@time^0,w,c
  1820   000D3C  5C15               	subwf	delay@i^0,w,c
  1821   000D3E  5011               	movf	(delay@time+1)^0,w,c
  1822   000D40  5816               	subwfb	(delay@i+1)^0,w,c
  1823   000D42  5012               	movf	(delay@time+2)^0,w,c
  1824   000D44  5817               	subwfb	(delay@i+2)^0,w,c
  1825   000D46  5018               	movf	(delay@i+3)^0,w,c
  1826   000D48  0A80               	xorlw	128
  1827   000D4A  6E14               	movwf	??_delay^0,c
  1828   000D4C  5013               	movf	(delay@time+3)^0,w,c
  1829   000D4E  0A80               	xorlw	128
  1830   000D50  5814               	subwfb	??_delay^0,w,c
  1831   000D52  A0D8               	btfss	status,0,c
  1832   000D54  EFAE  F006         	goto	u481
  1833   000D58  EFB0  F006         	goto	u480
  1834   000D5C                     u481:
  1835   000D5C  EF97  F006         	goto	l1226
  1836   000D60                     u480:
  1837   000D60  0012               	return		;funcret
  1838   000D62                     __end_of_delay:
  1839                           	callstack 0
  1840                           
  1841                           	psect	rparam
  1842   000000                     tosu	equ	0xFFF
  1843                           tosh	equ	0xFFE
  1844                           tosl	equ	0xFFD
  1845                           stkptr	equ	0xFFC
  1846                           pclatu	equ	0xFFB
  1847                           pclath	equ	0xFFA
  1848                           pcl	equ	0xFF9
  1849                           tblptru	equ	0xFF8
  1850                           tblptrh	equ	0xFF7
  1851                           tblptrl	equ	0xFF6
  1852                           tablat	equ	0xFF5
  1853                           prodh	equ	0xFF4
  1854                           prodl	equ	0xFF3
  1855                           indf0	equ	0xFEF
  1856                           postinc0	equ	0xFEE
  1857                           postdec0	equ	0xFED
  1858                           preinc0	equ	0xFEC
  1859                           plusw0	equ	0xFEB
  1860                           fsr0h	equ	0xFEA
  1861                           fsr0l	equ	0xFE9
  1862                           wreg	equ	0xFE8
  1863                           indf1	equ	0xFE7
  1864                           postinc1	equ	0xFE6
  1865                           postdec1	equ	0xFE5
  1866                           preinc1	equ	0xFE4
  1867                           plusw1	equ	0xFE3
  1868                           fsr1h	equ	0xFE2
  1869                           fsr1l	equ	0xFE1
  1870                           bsr	equ	0xFE0
  1871                           indf2	equ	0xFDF
  1872                           postinc2	equ	0xFDE
  1873                           postdec2	equ	0xFDD
  1874                           preinc2	equ	0xFDC
  1875                           plusw2	equ	0xFDB
  1876                           fsr2h	equ	0xFDA
  1877                           fsr2l	equ	0xFD9
  1878                           status	equ	0xFD8

Data Sizes:
    Strings     88
    Constant    0
    Data        15
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdstring@p	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[11]), STR_2(CODE[15]), STR_3(CODE[15]), STR_4(CODE[14]), 
		 -> STR_5(CODE[9]), STR_6(CODE[12]), STR_7(CODE[12]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> pass(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> inp(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_lcdstring
    _keypad->_lcdstring
    _lcdstring->_lcddisp
    _lcddisp->_delay
    _lcdctrl->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   12001
                                             11 COMRAM     4     4      0
                              _delay
                             _keypad
                            _lcdctrl
                            _lcddisp
                          _lcdstring
                            _newcode
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     264
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _newcode                                              0     0      0    4717
                             _keypad
                            _lcdctrl
                            _lcddisp
 ---------------------------------------------------------------------------------
 (2) _keypad                                               0     0      0    3061
                            _lcdctrl
                            _lcddisp
                          _lcdstring
 ---------------------------------------------------------------------------------
 (3) _lcdstring                                            1     0      1    1405
                                             10 COMRAM     1     0      1
                            _lcddisp
 ---------------------------------------------------------------------------------
 (2) _lcddisp                                              1     1      0     828
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _lcdctrl                                              1     1      0     828
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                9     5      4     806
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _keypad
     _lcdctrl
       _delay
     _lcddisp
       _delay
     _lcdstring
       _lcddisp
   _lcdctrl
   _lcddisp
   _lcdstring
   _newcode
     _keypad
     _lcdctrl
     _lcddisp
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      2B       1       45.3%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlh         2B      0       0      17        0.0%
BITBIGSFRllh         F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      20        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 21 17:54:11 2024

                      _a 002B                       l93 0922                       l77 0934  
                     l79 0782                       l99 0D3A                       _c1 0029  
                     _c2 0027                      l102 0D60                      l105 0DD0  
                    l114 0E3A                      l108 0D98                      l132 0938  
                    l141 09B6                      l133 0950                      l150 0A1E  
                    l134 0BD4                      l126 0C62                      l143 09CA  
                    l152 0A32                      l144 09F2                      l136 0964  
                    l161 0AAC                      l145 09DE                      l137 099E  
                    l129 0CBA                      l138 0978                      l155 0AB0  
                    l164 0AC4                      l148 0A0A                      l157 0A64  
                    l166 0BD0                      l168 0AF8                      l864 0D18  
                    _RC0 7C10                      _RC1 7C11                      _RB4 7C0C  
                    _RC2 7C12                      _RB5 7C0D                      _RB6 7C0E  
                    _RB7 7C0F                      u500 094A                      u501 0946  
                    u510 095E                      u511 095A                      u600 0A2C  
                    u520 0972                      u601 0A28                      u521 096E  
                    u610 0A44                      u530 0986                      u611 0A40  
                    u531 0982                      u700 0B18                      u620 0A58  
                    u540 09B0                      u701 0B14                      u621 0A54  
                    u541 09AC                      u710 0B50                      u630 0A72  
                    u550 09C4                      u711 0B4C                      u631 0A6E  
                    u551 09C0                      u480 0D60                      u720 0B7E  
                    u640 0A84                      u560 09D8                      u800 0CE2  
                    u481 0D5C                      u721 0B7A                      u641 0A80  
                    u561 09D4                      u801 0CDE                      u490 0E3A  
                    u730 0BB6                      u650 0AA2                      u570 09EC  
                    u810 0CF8                      u491 0E36                      u731 0BB2  
                    u651 0A9E                      u571 09E8                      u811 0CF4  
                    u660 0ABE                      u580 0A04                      u740 0C26  
                    u900 0806                      u820 06AE                      u661 0ABA  
                    u581 0A00                      u741 0C22                      u901 0802  
                    u821 06AA                      u670 0AD2                      u590 0A18  
                    u750 0C70                      u910 0870                      u830 06C4  
                    u671 0ACE                      u591 0A14                      u751 0C6C  
                    u911 086C                      u831 06C0                      u680 0AEC  
                    u760 0C7E                      u920 08DE                      u840 0732  
                    u681 0AE8                      u761 0C7A                      u921 08DA  
                    u841 072E                      u690 0B06                      u770 0C8C  
                    u930 08F4                      u850 0790                      u691 0B02  
                    u771 0C88                      u931 08F0                      u851 078C  
                    u780 0C9A                      u940 0930                      u860 079E  
                    u781 0C96                      u941 092C                      u861 079A  
                    u790 0CBA                      u870 07AC                      u791 0CB6  
                    u871 07A8                      u880 07BA                      u881 07B6  
                    u890 07E8                      u891 07E4                      _inp 0006  
                    _new 0001                      wreg 0FE8                     l1230 0D68  
                   l1310 09EC                     l1224 0D1A                     l1240 0D9C  
                   l1232 0D6C                     l1304 09D8                     l1226 0D2E  
                   l1250 0DBC                     l1242 0DA0                     l1234 0D6E  
                   l1402 0BBA                     l1330 0A2C                     l1314 09F2  
                   l1410 0BDC                     l1244 0DA4                     l1236 0D82  
                   l1228 0D64                     l1252 0E08                     l1404 0BC8  
                   l1340 0A44                     l1324 0A18                     l1316 09F6  
                   l1260 0938                     l1420 0BFE                     l1500 070E  
                   l1246 0DA6                     l1238 0D84                     l1254 0E0C  
                   l1350 0A8E                     l1342 0A58                     l1318 0A04  
                   l1270 095E                     l1262 093C                     l1430 0C26  
                   l1510 073E                     l1502 0716                     l1248 0DBA  
                   l1256 0E1C                     l1360 0AD2                     l1352 0AA2  
                   l1344 0A60                     l1336 0A32                     l1264 094A  
                   l1440 0C70                     l1432 0C30                     l1416 0BE4  
                   l1408 0BD6                     l1520 0764                     l1258 0E1E  
                   l1370 0B18                     l1362 0AD8                     l1354 0ABE  
                   l1346 0A72                     l1338 0A36                     l1290 09A2  
                   l1282 0986                     l1442 0C7E                     l1434 0C36  
                   l1426 0C06                     l1418 0BEE                     l1450 0CBC  
                   l1522 0790                     l1514 0748                     l1506 0736  
                   l1372 0B1E                     l1364 0AEC                     l1348 0A84  
                   l1292 09B0                     l1284 0998                     l1276 0972  
                   l1444 0C8C                     l1436 0C3C                     l1428 0C0A  
                   l1452 0CC0                     l1540 080C                     l1524 079E  
                   l1516 074E                     l1532 07C2                     l1390 0B7E  
                   l1382 0B54                     l1374 0B26                     l1366 0AF4  
                   l1446 0C9A                     l1438 0C4C                     l1454 0CC4  
                   l1550 0850                     l1542 0814                     l1534 07D6  
                   l1526 07AC                     l1518 0754                     l1470 067C  
                   l1462 065A                     l1392 0B84                     l1384 0B62  
                   l1376 0B2C                     l1368 0B06                     l1288 099E  
                   l1448 0C9E                     l1456 0CE2                     l1552 0854  
                   l1536 07E8                     l1528 07BA                     l1480 06B2  
                   l1472 0684                     l1464 066A                     l1394 0B8C  
                   l1378 0B34                     l1298 09C4                     l1458 0CF8  
                   l1538 0806                     l1554 0874                     l1570 08E2  
                   l1490 06E2                     l1474 068A                     l1466 0670  
                   l1396 0B92                     l1388 0B6A                     l1580 091C  
                   l1572 08F4                     l1564 088A                     l1556 087A  
                   l1548 081C                     l1492 06EE                     l1476 0692  
                   l1468 0676                     l1398 0B9A                     l1574 0900  
                   l1566 08BE                     l1558 0882                     l1494 06F6  
                   l1486 06C8                     l1576 0908                     l1568 08C2  
                   l1496 06FA                     l1488 06D2                     l1498 0702  
                   STR_1 0645                     STR_2 0610                     STR_3 0601  
                   STR_4 061F                     STR_5 0650                     STR_6 062D  
                   STR_7 0639                     _flag 0021                     _main 065A  
                   _pass 000B                     fsr1h 0FE2                     fsr2h 0FDA  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   start 0000             ___param_bank 0000                    ?_main 0010  
                  _PORTB 0F81                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_lcddisp 0D9A  
        __end_of_lcdctrl 0DD2                    _flag2 001F                    _delay 0D1A  
                  _index 0025          __end_of_newcode 0CBC                    main@j 001B  
                  tablat 0FF5                    status 0FD8          __initialization 0DD2  
           __end_of_main 0938                   ??_main 001B            __activetblptr 0002  
                 ?_delay 0010                   _ADCON1 0FC1                   _index2 0023  
                 _keypad 0938                   delay@i 0015                   clear_0 0DF8  
                 isa$std 0001                   _strcmp 0CBC                ??_lcddisp 0019  
              ??_lcdctrl 0019             __pdataCOMRAM 0001                ??_newcode 001B  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0DFE  
          ___rparam_used 0001           __pcstackCOMRAM 0010            __end_of_delay 0D62  
                ??_delay 0014                  ?_keypad 0010                  ?_strcmp 0010  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0DD2                  __ramtop 0600        __end_of_lcdstring 0E3C  
                __ptext0 065A                  __ptext1 0CBC                  __ptext2 0BD6  
                __ptext3 0938                  __ptext4 0E08                  __ptext5 0D62  
                __ptext6 0D9A                  __ptext7 0D1A                  _lcddisp 0D62  
                _lcdctrl 0D9A                  _newcode 0BD6     end_of_initialization 0DFE  
          __Lmediumconst 0000                  postdec1 0FE5                  postinc0 0FEE  
                postinc1 0FE6                  postinc2 0FDE                  strcmp@l 0010  
                strcmp@r 0011            __pidataCOMRAM 0E3C           __end_of_keypad 0BD6  
         __end_of_strcmp 0D1A      start_initialization 0DD2               lcdstring@p 001A  
               ??_keypad 001B                 ??_strcmp 0012              __pbssCOMRAM 001F  
               ?_lcddisp 0010                 ?_lcdctrl 0010              __smallconst 0600  
               ?_newcode 0010                _lcdstring 0E08                delay@time 0010  
             ?_lcdstring 001A                copy_data0 0DE6                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 main@j_91 001D  
               lcddisp@b 0019                 lcdctrl@a 0019              ??_lcdstring 001B  
