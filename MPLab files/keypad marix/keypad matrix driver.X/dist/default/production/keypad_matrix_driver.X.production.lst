

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 29 09:32:59 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21   000000                     
    22                           ; Generated 17/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4580 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   000FB0                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _pass
    62   000FB0  31                 	db	49
    63   000FB1  32                 	db	50
    64   000FB2  33                 	db	51
    65   000FB3  34                 	db	52
    66   000FB4  00                 	db	0
    67                           
    68                           ;initializer for _new
    69   000FB5  30                 	db	48
    70   000FB6  30                 	db	48
    71   000FB7  30                 	db	48
    72   000FB8  30                 	db	48
    73   000FB9  00                 	db	0
    74                           
    75                           ;initializer for _inp
    76   000FBA  30                 	db	48
    77   000FBB  30                 	db	48
    78   000FBC  30                 	db	48
    79   000FBD  30                 	db	48
    80   000FBE  00                 	db	0
    81   000000                     _PORTB	set	3969
    82   000000                     _RC2	set	31762
    83   000000                     _RC1	set	31761
    84   000000                     _RB7	set	31759
    85   000000                     _RB6	set	31758
    86   000000                     _RB5	set	31757
    87   000000                     _TRISB	set	3987
    88   000000                     _ADCON1	set	4033
    89   000000                     _RB4	set	31756
    90   000000                     _TRISD	set	3989
    91   000000                     _TRISC	set	3988
    92   000000                     _PORTD	set	3971
    93   000000                     _RC0	set	31760
    94                           
    95                           	psect	smallconst
    96   000600                     __psmallconst:
    97                           	callstack 0
    98   000600  00                 	db	0
    99   000601                     STR_3:
   100   000601  41                 	db	65	;'A'
   101   000602  63                 	db	99	;'c'
   102   000603  63                 	db	99	;'c'
   103   000604  65                 	db	101	;'e'
   104   000605  73                 	db	115	;'s'
   105   000606  73                 	db	115	;'s'
   106   000607  20                 	db	32
   107   000608  47                 	db	71	;'G'
   108   000609  72                 	db	114	;'r'
   109   00060A  61                 	db	97	;'a'
   110   00060B  6E                 	db	110	;'n'
   111   00060C  74                 	db	116	;'t'
   112   00060D  65                 	db	101	;'e'
   113   00060E  64                 	db	100	;'d'
   114   00060F  00                 	db	0
   115   000610                     STR_2:
   116   000610  45                 	db	69	;'E'
   117   000611  6E                 	db	110	;'n'
   118   000612  74                 	db	116	;'t'
   119   000613  65                 	db	101	;'e'
   120   000614  72                 	db	114	;'r'
   121   000615  20                 	db	32
   122   000616  6E                 	db	110	;'n'
   123   000617  65                 	db	101	;'e'
   124   000618  77                 	db	119	;'w'
   125   000619  20                 	db	32
   126   00061A  63                 	db	99	;'c'
   127   00061B  6F                 	db	111	;'o'
   128   00061C  64                 	db	100	;'d'
   129   00061D  65                 	db	101	;'e'
   130   00061E  00                 	db	0
   131   00061F                     STR_4:
   132   00061F  41                 	db	65	;'A'
   133   000620  63                 	db	99	;'c'
   134   000621  63                 	db	99	;'c'
   135   000622  65                 	db	101	;'e'
   136   000623  73                 	db	115	;'s'
   137   000624  73                 	db	115	;'s'
   138   000625  20                 	db	32
   139   000626  44                 	db	68	;'D'
   140   000627  65                 	db	101	;'e'
   141   000628  6E                 	db	110	;'n'
   142   000629  69                 	db	105	;'i'
   143   00062A  65                 	db	101	;'e'
   144   00062B  64                 	db	100	;'d'
   145   00062C  00                 	db	0
   146   00062D                     STR_8:
   147   00062D  6F                 	db	111	;'o'
   148   00062E  6C                 	db	108	;'l'
   149   00062F  64                 	db	100	;'d'
   150   000630  20                 	db	32
   151   000631  63                 	db	99	;'c'
   152   000632  6F                 	db	111	;'o'
   153   000633  64                 	db	100	;'d'
   154   000634  65                 	db	101	;'e'
   155   000635  20                 	db	32
   156   000636  69                 	db	105	;'i'
   157   000637  73                 	db	115	;'s'
   158   000638  00                 	db	0
   159   000639                     STR_9:
   160   000639  6E                 	db	110	;'n'
   161   00063A  65                 	db	101	;'e'
   162   00063B  77                 	db	119	;'w'
   163   00063C  20                 	db	32
   164   00063D  63                 	db	99	;'c'
   165   00063E  6F                 	db	111	;'o'
   166   00063F  64                 	db	100	;'d'
   167   000640  65                 	db	101	;'e'
   168   000641  20                 	db	32
   169   000642  69                 	db	105	;'i'
   170   000643  73                 	db	115	;'s'
   171   000644  00                 	db	0
   172   000645                     STR_1:
   173   000645  45                 	db	69	;'E'
   174   000646  6E                 	db	110	;'n'
   175   000647  74                 	db	116	;'t'
   176   000648  65                 	db	101	;'e'
   177   000649  72                 	db	114	;'r'
   178   00064A  20                 	db	32
   179   00064B  63                 	db	99	;'c'
   180   00064C  6F                 	db	111	;'o'
   181   00064D  64                 	db	100	;'d'
   182   00064E  65                 	db	101	;'e'
   183   00064F  00                 	db	0
   184   000650  00                 	db	0	; dummy byte at the end
   185   000000                     
   186                           ; #config settings
   187                           
   188                           	psect	cinit
   189   000F46                     __pcinit:
   190                           	callstack 0
   191   000F46                     start_initialization:
   192                           	callstack 0
   193   000F46                     __initialization:
   194                           	callstack 0
   195                           
   196                           ; Initialize objects allocated to COMRAM (15 bytes)
   197                           ; load TBLPTR registers with __pidataCOMRAM
   198   000F46  0EB0               	movlw	low __pidataCOMRAM
   199   000F48  6EF6               	movwf	tblptrl,c
   200   000F4A  0E0F               	movlw	high __pidataCOMRAM
   201   000F4C  6EF7               	movwf	tblptrh,c
   202   000F4E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   203   000F50  6EF8               	movwf	tblptru,c
   204   000F52  EE00  F014         	lfsr	0,__pdataCOMRAM
   205   000F56  EE10 F00F          	lfsr	1,15
   206   000F5A                     copy_data0:
   207   000F5A  0009               	tblrd		*+
   208   000F5C  CFF5 FFEE          	movff	tablat,postinc0
   209   000F60  50E5               	movf	postdec1,w,c
   210   000F62  50E1               	movf	fsr1l,w,c
   211   000F64  E1FA               	bnz	copy_data0
   212                           
   213                           ; Clear objects allocated to COMRAM (13 bytes)
   214   000F66  EE00  F023         	lfsr	0,__pbssCOMRAM
   215   000F6A  0E0D               	movlw	13
   216   000F6C                     clear_0:
   217   000F6C  6AEE               	clrf	postinc0,c
   218   000F6E  06E8               	decf	wreg,f,c
   219   000F70  E1FD               	bnz	clear_0
   220   000F72                     end_of_initialization:
   221                           	callstack 0
   222   000F72                     __end_of__initialization:
   223                           	callstack 0
   224   000F72  0E00               	movlw	low (__Lmediumconst shr (0+16))
   225   000F74  6EF8               	movwf	tblptru,c
   226   000F76  0100               	movlb	0
   227   000F78  EF29  F003         	goto	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMRAM
   230   000023                     __pbssCOMRAM:
   231                           	callstack 0
   232   000023                     _flag2:
   233                           	callstack 0
   234   000023                     	ds	2
   235   000025                     _flag:
   236                           	callstack 0
   237   000025                     	ds	2
   238   000027                     _index2:
   239                           	callstack 0
   240   000027                     	ds	2
   241   000029                     _index:
   242                           	callstack 0
   243   000029                     	ds	2
   244   00002B                     _c2:
   245                           	callstack 0
   246   00002B                     	ds	2
   247   00002D                     _c1:
   248                           	callstack 0
   249   00002D                     	ds	2
   250   00002F                     _a:
   251                           	callstack 0
   252   00002F                     	ds	1
   253                           
   254                           	psect	dataCOMRAM
   255   000014                     __pdataCOMRAM:
   256                           	callstack 0
   257   000014                     _pass:
   258                           	callstack 0
   259   000014                     	ds	5
   260   000019                     _new:
   261                           	callstack 0
   262   000019                     	ds	5
   263   00001E                     _inp:
   264                           	callstack 0
   265   00001E                     	ds	5
   266                           
   267                           	psect	cstackCOMRAM
   268   000001                     __pcstackCOMRAM:
   269                           	callstack 0
   270   000001                     ?_strcmp:
   271                           	callstack 0
   272   000001                     strcmp@l:
   273                           	callstack 0
   274   000001                     delay@time:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0x0
   278   000001                     	ds	1
   279   000002                     strcmp@r:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x1
   283   000002                     	ds	1
   284   000003                     ??_strcmp:
   285                           
   286                           ; 1 bytes @ 0x2
   287   000003                     	ds	2
   288   000005                     ??_delay:
   289                           
   290                           ; 1 bytes @ 0x4
   291   000005                     	ds	1
   292   000006                     delay@i:
   293                           	callstack 0
   294                           
   295                           ; 4 bytes @ 0x5
   296   000006                     	ds	4
   297   00000A                     lcdctrl@a:
   298                           	callstack 0
   299   00000A                     lcddisp@b:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x9
   303   00000A                     	ds	1
   304   00000B                     lcdstring@p:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0xA
   308   00000B                     	ds	1
   309   00000C                     main@j:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0xB
   313   00000C                     	ds	2
   314   00000E                     main@j_91:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0xD
   318   00000E                     	ds	2
   319   000010                     main@j_94:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0xF
   323   000010                     	ds	2
   324   000012                     main@j_96:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x11
   328   000012                     	ds	2
   329                           
   330 ;;
   331 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   332 ;;
   333 ;; *************** function _main *****************
   334 ;; Defined at:
   335 ;;		line 16 in file "password_edit.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  j               2   17[COMRAM] int 
   340 ;;  j               2   15[COMRAM] int 
   341 ;;  j               2   13[COMRAM] int 
   342 ;;  j               2   11[COMRAM] int 
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   352 ;;      Params:         0       0       0       0       0       0       0
   353 ;;      Locals:         8       0       0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0
   355 ;;      Totals:         8       0       0       0       0       0       0
   356 ;;Total ram usage:        8 bytes
   357 ;; Hardware stack levels required when called: 5
   358 ;; This function calls:
   359 ;;		_delay
   360 ;;		_keypad
   361 ;;		_lcdctrl
   362 ;;		_lcddisp
   363 ;;		_lcdstring
   364 ;;		_newcode
   365 ;;		_strcmp
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text0
   372   000652                     __ptext0:
   373                           	callstack 0
   374   000652                     _main:
   375                           	callstack 26
   376   000652                     
   377                           ;password_edit.c: 17:     ADCON1=0X0F;
   378   000652  0E0F               	movlw	15
   379   000654  6EC1               	movwf	193,c	;volatile
   380                           
   381                           ;password_edit.c: 18:     TRISB=0XF0;
   382   000656  0EF0               	movlw	240
   383   000658  6E93               	movwf	147,c	;volatile
   384                           
   385                           ;password_edit.c: 19:     TRISC=0X00;
   386   00065A  0E00               	movlw	0
   387   00065C  6E94               	movwf	148,c	;volatile
   388                           
   389                           ;password_edit.c: 20:     TRISD=0x00;
   390   00065E  0E00               	movlw	0
   391   000660  6E95               	movwf	149,c	;volatile
   392   000662                     
   393                           ;password_edit.c: 21:     lcdctrl(0x38);
   394   000662  0E38               	movlw	56
   395   000664  EC87  F007         	call	_lcdctrl
   396   000668                     l1532:
   397                           
   398                           ;password_edit.c: 23:        lcdctrl(0x80);
   399   000668  0E80               	movlw	128
   400   00066A  EC87  F007         	call	_lcdctrl
   401   00066E                     
   402                           ;password_edit.c: 24:        lcdctrl(0x01);
   403   00066E  0E01               	movlw	1
   404   000670  EC87  F007         	call	_lcdctrl
   405   000674                     
   406                           ;password_edit.c: 25:        lcdstring("Enter code");
   407   000674  0E45               	movlw	low STR_1
   408   000676  6E0B               	movwf	lcdstring@p^0,c
   409   000678  ECBE  F007         	call	_lcdstring	;wreg free
   410   00067C                     
   411                           ;password_edit.c: 26:        lcdctrl(0xc0);
   412   00067C  0EC0               	movlw	192
   413   00067E  EC87  F007         	call	_lcdctrl
   414   000682                     
   415                           ;password_edit.c: 27:        for(index=0;index<4;index++){
   416   000682  0E00               	movlw	0
   417   000684  6E2A               	movwf	(_index+1)^0,c
   418   000686  0E00               	movlw	0
   419   000688  6E29               	movwf	_index^0,c
   420   00068A                     l1542:
   421   00068A  BE2A               	btfsc	(_index+1)^0,7,c
   422   00068C  EF51  F003         	goto	u901
   423   000690  502A               	movf	(_index+1)^0,w,c
   424   000692  E109               	bnz	u900
   425   000694  0E04               	movlw	4
   426   000696  5C29               	subwf	_index^0,w,c
   427   000698  A0D8               	btfss	status,0,c
   428   00069A  EF51  F003         	goto	u901
   429   00069E  EF53  F003         	goto	u900
   430   0006A2                     u901:
   431   0006A2  EF55  F003         	goto	l1546
   432   0006A6                     u900:
   433   0006A6  EFDD  F003         	goto	l1598
   434   0006AA                     l1546:
   435                           
   436                           ;password_edit.c: 28:            if(flag==1){
   437   0006AA  0425               	decf	_flag^0,w,c
   438   0006AC  1026               	iorwf	(_flag+1)^0,w,c
   439   0006AE  A4D8               	btfss	status,2,c
   440   0006B0  EF5C  F003         	goto	u911
   441   0006B4  EF5E  F003         	goto	u910
   442   0006B8                     u911:
   443   0006B8  EF60  F003         	goto	l1552
   444   0006BC                     u910:
   445   0006BC  EFDD  F003         	goto	l1598
   446   0006C0                     l1552:
   447                           
   448                           ;password_edit.c: 32:            a=keypad();
   449   0006C0  EC56  F005         	call	_keypad	;wreg free
   450   0006C4  6E2F               	movwf	_a^0,c
   451                           
   452                           ;password_edit.c: 33:            switch(a){
   453   0006C6  EFAE  F003         	goto	l1586
   454   0006CA                     l1554:
   455                           
   456                           ;password_edit.c: 35:                    index=index-2;
   457   0006CA  0EFE               	movlw	254
   458   0006CC  2429               	addwf	_index^0,w,c
   459   0006CE  6E29               	movwf	_index^0,c
   460   0006D0  0EFF               	movlw	255
   461   0006D2  202A               	addwfc	(_index+1)^0,w,c
   462   0006D4  6E2A               	movwf	(_index+1)^0,c
   463                           
   464                           ;password_edit.c: 36:                    break;
   465   0006D6  EFBD  F003         	goto	l79
   466   0006DA                     l1556:
   467                           
   468                           ;password_edit.c: 38:                     lcdctrl(0x01);
   469   0006DA  0E01               	movlw	1
   470   0006DC  EC87  F007         	call	_lcdctrl
   471                           
   472                           ;password_edit.c: 39:                     lcdctrl(0x80);
   473   0006E0  0E80               	movlw	128
   474   0006E2  EC87  F007         	call	_lcdctrl
   475   0006E6                     
   476                           ;password_edit.c: 40:                     lcdstring("Enter new code");
   477   0006E6  0E10               	movlw	low STR_2
   478   0006E8  6E0B               	movwf	lcdstring@p^0,c
   479   0006EA  ECBE  F007         	call	_lcdstring	;wreg free
   480   0006EE                     
   481                           ;password_edit.c: 41:                     newcode();
   482   0006EE  ECA5  F006         	call	_newcode	;wreg free
   483   0006F2                     
   484                           ;password_edit.c: 42:                     flag=1;
   485   0006F2  0E00               	movlw	0
   486   0006F4  6E26               	movwf	(_flag+1)^0,c
   487   0006F6  0E01               	movlw	1
   488   0006F8  6E25               	movwf	_flag^0,c
   489   0006FA                     
   490                           ;password_edit.c: 43:                     index=4;
   491   0006FA  0E00               	movlw	0
   492   0006FC  6E2A               	movwf	(_index+1)^0,c
   493   0006FE  0E04               	movlw	4
   494   000700  6E29               	movwf	_index^0,c
   495                           
   496                           ;password_edit.c: 44:                     break;
   497   000702  EFBD  F003         	goto	l79
   498   000706                     l1566:
   499                           
   500                           ;password_edit.c: 47:                     for(index=0;index<4;index++){
   501   000706  0E00               	movlw	0
   502   000708  6E2A               	movwf	(_index+1)^0,c
   503   00070A  0E00               	movlw	0
   504   00070C  6E29               	movwf	_index^0,c
   505   00070E                     l1568:
   506   00070E  BE2A               	btfsc	(_index+1)^0,7,c
   507   000710  EF93  F003         	goto	u921
   508   000714  502A               	movf	(_index+1)^0,w,c
   509   000716  E109               	bnz	u920
   510   000718  0E04               	movlw	4
   511   00071A  5C29               	subwf	_index^0,w,c
   512   00071C  A0D8               	btfss	status,0,c
   513   00071E  EF93  F003         	goto	u921
   514   000722  EF95  F003         	goto	u920
   515   000726                     u921:
   516   000726  EF97  F003         	goto	l1572
   517   00072A                     u920:
   518   00072A  EF9B  F003         	goto	l1576
   519   00072E                     l1572:
   520                           
   521                           ;password_edit.c: 49:                     }
   522   00072E  4A29               	infsnz	_index^0,f,c
   523   000730  2A2A               	incf	(_index+1)^0,f,c
   524   000732  EF87  F003         	goto	l1568
   525   000736                     l1576:
   526                           
   527                           ;password_edit.c: 50:                     lcdctrl(0x01);
   528   000736  0E01               	movlw	1
   529   000738  EC87  F007         	call	_lcdctrl
   530   00073C  EF54  F005         	goto	l77
   531   000740                     l1580:
   532                           
   533                           ;password_edit.c: 54:                    a=keypad();
   534   000740  EC56  F005         	call	_keypad	;wreg free
   535   000744  6E2F               	movwf	_a^0,c
   536   000746                     
   537                           ;password_edit.c: 55:                    lcddisp(a);
   538   000746  502F               	movf	_a^0,w,c
   539   000748  EC6B  F007         	call	_lcddisp
   540   00074C                     
   541                           ;password_edit.c: 56:                    inp[index]=a;
   542   00074C  5029               	movf	_index^0,w,c
   543   00074E  0F1E               	addlw	low _inp
   544   000750  6ED9               	movwf	fsr2l,c
   545   000752  6ADA               	clrf	fsr2h,c
   546   000754  C02F  FFDF         	movff	_a,indf2
   547                           
   548                           ;password_edit.c: 57:             }
   549   000758  EFBD  F003         	goto	l79
   550   00075C                     l1586:
   551   00075C  502F               	movf	_a^0,w,c
   552                           
   553                           ; Switch size 1, requested type "simple"
   554                           ; Number of cases is 3, Range of values is 97 to 99
   555                           ; switch strategies available:
   556                           ; Name         Instructions Cycles
   557                           ; simple_byte           10     6 (average)
   558                           ;	Chosen strategy is simple_byte
   559   00075E  0A61               	xorlw	97	; case 97
   560   000760  B4D8               	btfsc	status,2,c
   561   000762  EF65  F003         	goto	l1554
   562   000766  0A03               	xorlw	3	; case 98
   563   000768  B4D8               	btfsc	status,2,c
   564   00076A  EF6D  F003         	goto	l1556
   565   00076E  0A01               	xorlw	1	; case 99
   566   000770  B4D8               	btfsc	status,2,c
   567   000772  EF83  F003         	goto	l1566
   568   000776  EFA0  F003         	goto	l1580
   569   00077A                     l79:
   570   00077A  A881               	btfss	3969,4,c	;volatile
   571   00077C  EFC2  F003         	goto	u931
   572   000780  EFC4  F003         	goto	u930
   573   000784                     u931:
   574   000784  EFBD  F003         	goto	l79
   575   000788                     u930:
   576   000788  AA81               	btfss	3969,5,c	;volatile
   577   00078A  EFC9  F003         	goto	u941
   578   00078E  EFCB  F003         	goto	u940
   579   000792                     u941:
   580   000792  EFBD  F003         	goto	l79
   581   000796                     u940:
   582   000796  AC81               	btfss	3969,6,c	;volatile
   583   000798  EFD0  F003         	goto	u951
   584   00079C  EFD2  F003         	goto	u950
   585   0007A0                     u951:
   586   0007A0  EFBD  F003         	goto	l79
   587   0007A4                     u950:
   588   0007A4  AE81               	btfss	3969,7,c	;volatile
   589   0007A6  EFD7  F003         	goto	u961
   590   0007AA  EFD9  F003         	goto	u960
   591   0007AE                     u961:
   592   0007AE  EFBD  F003         	goto	l79
   593   0007B2                     u960:
   594   0007B2                     
   595                           ;password_edit.c: 62:        }
   596   0007B2  4A29               	infsnz	_index^0,f,c
   597   0007B4  2A2A               	incf	(_index+1)^0,f,c
   598   0007B6  EF45  F003         	goto	l1542
   599   0007BA                     l1598:
   600                           
   601                           ;password_edit.c: 64:        delay(10000);
   602   0007BA  0E10               	movlw	16
   603   0007BC  6E01               	movwf	delay@time^0,c
   604   0007BE  0E27               	movlw	39
   605   0007C0  6E02               	movwf	(delay@time+1)^0,c
   606   0007C2  0E00               	movlw	0
   607   0007C4  6E03               	movwf	(delay@time+2)^0,c
   608   0007C6  0E00               	movlw	0
   609   0007C8  6E04               	movwf	(delay@time+3)^0,c
   610   0007CA  EC47  F007         	call	_delay	;wreg free
   611   0007CE                     
   612                           ;password_edit.c: 65:        if(flag==0){
   613   0007CE  5025               	movf	_flag^0,w,c
   614   0007D0  1026               	iorwf	(_flag+1)^0,w,c
   615   0007D2  A4D8               	btfss	status,2,c
   616   0007D4  EFEE  F003         	goto	u971
   617   0007D8  EFF0  F003         	goto	u970
   618   0007DC                     u971:
   619   0007DC  EF6D  F004         	goto	l1636
   620   0007E0                     u970:
   621   0007E0                     
   622                           ;password_edit.c: 66:        if(strcmp(new,inp)==0){
   623   0007E0  0E19               	movlw	low _new
   624   0007E2  6E01               	movwf	strcmp@l^0,c
   625   0007E4  0E1E               	movlw	low _inp
   626   0007E6  6E02               	movwf	strcmp@r^0,c
   627   0007E8  EC18  F007         	call	_strcmp	;wreg free
   628   0007EC  5001               	movf	?_strcmp^0,w,c
   629   0007EE  1002               	iorwf	(?_strcmp+1)^0,w,c
   630   0007F0  A4D8               	btfss	status,2,c
   631   0007F2  EFFD  F003         	goto	u981
   632   0007F6  EFFF  F003         	goto	u980
   633   0007FA                     u981:
   634   0007FA  EF36  F004         	goto	l1620
   635   0007FE                     u980:
   636   0007FE                     
   637                           ;password_edit.c: 67:            lcdctrl(0x01);
   638   0007FE  0E01               	movlw	1
   639   000800  EC87  F007         	call	_lcdctrl
   640   000804                     
   641                           ;password_edit.c: 68:            lcdstring("Access Granted");
   642   000804  0E01               	movlw	low STR_3
   643   000806  6E0B               	movwf	lcdstring@p^0,c
   644   000808  ECBE  F007         	call	_lcdstring	;wreg free
   645   00080C                     
   646                           ;password_edit.c: 69:            for(int j=0;j<10;j++){
   647   00080C  0E00               	movlw	0
   648   00080E  6E0D               	movwf	(main@j+1)^0,c
   649   000810  0E00               	movlw	0
   650   000812  6E0C               	movwf	main@j^0,c
   651   000814                     l1614:
   652                           
   653                           ;password_edit.c: 71:                lcdctrl(0x08);
   654   000814  0E08               	movlw	8
   655   000816  EC87  F007         	call	_lcdctrl
   656                           
   657                           ;password_edit.c: 72:                delay(10000);
   658   00081A  0E10               	movlw	16
   659   00081C  6E01               	movwf	delay@time^0,c
   660   00081E  0E27               	movlw	39
   661   000820  6E02               	movwf	(delay@time+1)^0,c
   662   000822  0E00               	movlw	0
   663   000824  6E03               	movwf	(delay@time+2)^0,c
   664   000826  0E00               	movlw	0
   665   000828  6E04               	movwf	(delay@time+3)^0,c
   666   00082A  EC47  F007         	call	_delay	;wreg free
   667                           
   668                           ;password_edit.c: 73:                lcdctrl(0x0f);
   669   00082E  0E0F               	movlw	15
   670   000830  EC87  F007         	call	_lcdctrl
   671                           
   672                           ;password_edit.c: 74:                delay(10000);
   673   000834  0E10               	movlw	16
   674   000836  6E01               	movwf	delay@time^0,c
   675   000838  0E27               	movlw	39
   676   00083A  6E02               	movwf	(delay@time+1)^0,c
   677   00083C  0E00               	movlw	0
   678   00083E  6E03               	movwf	(delay@time+2)^0,c
   679   000840  0E00               	movlw	0
   680   000842  6E04               	movwf	(delay@time+3)^0,c
   681   000844  EC47  F007         	call	_delay	;wreg free
   682   000848                     
   683                           ;password_edit.c: 75:            }
   684   000848  4A0C               	infsnz	main@j^0,f,c
   685   00084A  2A0D               	incf	(main@j+1)^0,f,c
   686   00084C  BE0D               	btfsc	(main@j+1)^0,7,c
   687   00084E  EF32  F004         	goto	u991
   688   000852  500D               	movf	(main@j+1)^0,w,c
   689   000854  E109               	bnz	u990
   690   000856  0E0A               	movlw	10
   691   000858  5C0C               	subwf	main@j^0,w,c
   692   00085A  A0D8               	btfss	status,0,c
   693   00085C  EF32  F004         	goto	u991
   694   000860  EF34  F004         	goto	u990
   695   000864                     u991:
   696   000864  EF0A  F004         	goto	l1614
   697   000868                     u990:
   698   000868  EF34  F003         	goto	l1532
   699   00086C                     l1620:
   700                           
   701                           ;password_edit.c: 79:            lcdctrl(0x01);
   702   00086C  0E01               	movlw	1
   703   00086E  EC87  F007         	call	_lcdctrl
   704   000872                     
   705                           ;password_edit.c: 80:            lcdstring("Access Denied");
   706   000872  0E1F               	movlw	low STR_4
   707   000874  6E0B               	movwf	lcdstring@p^0,c
   708   000876  ECBE  F007         	call	_lcdstring	;wreg free
   709   00087A                     
   710                           ;password_edit.c: 81:            for(int j=0;j<10;j++){
   711   00087A  0E00               	movlw	0
   712   00087C  6E0F               	movwf	(main@j_91+1)^0,c
   713   00087E  0E00               	movlw	0
   714   000880  6E0E               	movwf	main@j_91^0,c
   715   000882                     l1630:
   716                           
   717                           ;password_edit.c: 82:                lcdctrl(0x08);
   718   000882  0E08               	movlw	8
   719   000884  EC87  F007         	call	_lcdctrl
   720                           
   721                           ;password_edit.c: 83:                delay(10000);
   722   000888  0E10               	movlw	16
   723   00088A  6E01               	movwf	delay@time^0,c
   724   00088C  0E27               	movlw	39
   725   00088E  6E02               	movwf	(delay@time+1)^0,c
   726   000890  0E00               	movlw	0
   727   000892  6E03               	movwf	(delay@time+2)^0,c
   728   000894  0E00               	movlw	0
   729   000896  6E04               	movwf	(delay@time+3)^0,c
   730   000898  EC47  F007         	call	_delay	;wreg free
   731                           
   732                           ;password_edit.c: 84:                lcdctrl(0x0f);
   733   00089C  0E0F               	movlw	15
   734   00089E  EC87  F007         	call	_lcdctrl
   735                           
   736                           ;password_edit.c: 85:                delay(10000);
   737   0008A2  0E10               	movlw	16
   738   0008A4  6E01               	movwf	delay@time^0,c
   739   0008A6  0E27               	movlw	39
   740   0008A8  6E02               	movwf	(delay@time+1)^0,c
   741   0008AA  0E00               	movlw	0
   742   0008AC  6E03               	movwf	(delay@time+2)^0,c
   743   0008AE  0E00               	movlw	0
   744   0008B0  6E04               	movwf	(delay@time+3)^0,c
   745   0008B2  EC47  F007         	call	_delay	;wreg free
   746   0008B6                     
   747                           ;password_edit.c: 86:            }
   748   0008B6  4A0E               	infsnz	main@j_91^0,f,c
   749   0008B8  2A0F               	incf	(main@j_91+1)^0,f,c
   750   0008BA  BE0F               	btfsc	(main@j_91+1)^0,7,c
   751   0008BC  EF69  F004         	goto	u1001
   752   0008C0  500F               	movf	(main@j_91+1)^0,w,c
   753   0008C2  E109               	bnz	u1000
   754   0008C4  0E0A               	movlw	10
   755   0008C6  5C0E               	subwf	main@j_91^0,w,c
   756   0008C8  A0D8               	btfss	status,0,c
   757   0008CA  EF69  F004         	goto	u1001
   758   0008CE  EF6B  F004         	goto	u1000
   759   0008D2                     u1001:
   760   0008D2  EF41  F004         	goto	l1630
   761   0008D6                     u1000:
   762   0008D6  EF34  F003         	goto	l1532
   763   0008DA                     l1636:
   764   0008DA  0425               	decf	_flag^0,w,c
   765   0008DC  1026               	iorwf	(_flag+1)^0,w,c
   766   0008DE  A4D8               	btfss	status,2,c
   767   0008E0  EF74  F004         	goto	u1011
   768   0008E4  EF76  F004         	goto	u1010
   769   0008E8                     u1011:
   770   0008E8  EF34  F003         	goto	l1532
   771   0008EC                     u1010:
   772   0008EC                     
   773                           ;password_edit.c: 92:            lcdctrl(0x01);
   774   0008EC  0E01               	movlw	1
   775   0008EE  EC87  F007         	call	_lcdctrl
   776                           
   777                           ;password_edit.c: 93:            lcdctrl(0x80);
   778   0008F2  0E80               	movlw	128
   779   0008F4  EC87  F007         	call	_lcdctrl
   780   0008F8                     
   781                           ;password_edit.c: 94:            lcdstring("Enter code");
   782   0008F8  0E45               	movlw	low STR_1
   783   0008FA  6E0B               	movwf	lcdstring@p^0,c
   784   0008FC  ECBE  F007         	call	_lcdstring	;wreg free
   785   000900                     
   786                           ;password_edit.c: 95:            delay(5000);
   787   000900  0E88               	movlw	136
   788   000902  6E01               	movwf	delay@time^0,c
   789   000904  0E13               	movlw	19
   790   000906  6E02               	movwf	(delay@time+1)^0,c
   791   000908  0E00               	movlw	0
   792   00090A  6E03               	movwf	(delay@time+2)^0,c
   793   00090C  0E00               	movlw	0
   794   00090E  6E04               	movwf	(delay@time+3)^0,c
   795   000910  EC47  F007         	call	_delay	;wreg free
   796   000914                     
   797                           ;password_edit.c: 96:            lcdctrl(0xc0);
   798   000914  0EC0               	movlw	192
   799   000916  EC87  F007         	call	_lcdctrl
   800   00091A                     
   801                           ;password_edit.c: 97:            for(index=0;index<4;index++){
   802   00091A  0E00               	movlw	0
   803   00091C  6E2A               	movwf	(_index+1)^0,c
   804   00091E  0E00               	movlw	0
   805   000920  6E29               	movwf	_index^0,c
   806   000922                     l1648:
   807   000922  BE2A               	btfsc	(_index+1)^0,7,c
   808   000924  EF9D  F004         	goto	u1021
   809   000928  502A               	movf	(_index+1)^0,w,c
   810   00092A  E109               	bnz	u1020
   811   00092C  0E04               	movlw	4
   812   00092E  5C29               	subwf	_index^0,w,c
   813   000930  A0D8               	btfss	status,0,c
   814   000932  EF9D  F004         	goto	u1021
   815   000936  EF9F  F004         	goto	u1020
   816   00093A                     u1021:
   817   00093A  EFA1  F004         	goto	l1652
   818   00093E                     u1020:
   819   00093E  EFCD  F004         	goto	l1668
   820   000942                     l1652:
   821                           
   822                           ;password_edit.c: 98:                    a=keypad();
   823   000942  EC56  F005         	call	_keypad	;wreg free
   824   000946  6E2F               	movwf	_a^0,c
   825   000948                     
   826                           ;password_edit.c: 99:                    lcddisp(a);
   827   000948  502F               	movf	_a^0,w,c
   828   00094A  EC6B  F007         	call	_lcddisp
   829   00094E                     
   830                           ;password_edit.c: 100:                    inp[index]=a;
   831   00094E  5029               	movf	_index^0,w,c
   832   000950  0F1E               	addlw	low _inp
   833   000952  6ED9               	movwf	fsr2l,c
   834   000954  6ADA               	clrf	fsr2h,c
   835   000956  C02F  FFDF         	movff	_a,indf2
   836   00095A                     l93:
   837   00095A  A881               	btfss	3969,4,c	;volatile
   838   00095C  EFB2  F004         	goto	u1031
   839   000960  EFB4  F004         	goto	u1030
   840   000964                     u1031:
   841   000964  EFAD  F004         	goto	l93
   842   000968                     u1030:
   843   000968  AA81               	btfss	3969,5,c	;volatile
   844   00096A  EFB9  F004         	goto	u1041
   845   00096E  EFBB  F004         	goto	u1040
   846   000972                     u1041:
   847   000972  EFAD  F004         	goto	l93
   848   000976                     u1040:
   849   000976  AC81               	btfss	3969,6,c	;volatile
   850   000978  EFC0  F004         	goto	u1051
   851   00097C  EFC2  F004         	goto	u1050
   852   000980                     u1051:
   853   000980  EFAD  F004         	goto	l93
   854   000984                     u1050:
   855   000984  AE81               	btfss	3969,7,c	;volatile
   856   000986  EFC7  F004         	goto	u1061
   857   00098A  EFC9  F004         	goto	u1060
   858   00098E                     u1061:
   859   00098E  EFAD  F004         	goto	l93
   860   000992                     u1060:
   861   000992                     
   862                           ;password_edit.c: 102:            }
   863   000992  4A29               	infsnz	_index^0,f,c
   864   000994  2A2A               	incf	(_index+1)^0,f,c
   865   000996  EF91  F004         	goto	l1648
   866   00099A                     l1668:
   867                           
   868                           ;password_edit.c: 103:            if(strcmp(new,inp)==0){
   869   00099A  0E19               	movlw	low _new
   870   00099C  6E01               	movwf	strcmp@l^0,c
   871   00099E  0E1E               	movlw	low _inp
   872   0009A0  6E02               	movwf	strcmp@r^0,c
   873   0009A2  EC18  F007         	call	_strcmp	;wreg free
   874   0009A6  5001               	movf	?_strcmp^0,w,c
   875   0009A8  1002               	iorwf	(?_strcmp+1)^0,w,c
   876   0009AA  A4D8               	btfss	status,2,c
   877   0009AC  EFDA  F004         	goto	u1071
   878   0009B0  EFDC  F004         	goto	u1070
   879   0009B4                     u1071:
   880   0009B4  EF13  F005         	goto	l1686
   881   0009B8                     u1070:
   882   0009B8                     
   883                           ;password_edit.c: 104:            lcdctrl(0x01);
   884   0009B8  0E01               	movlw	1
   885   0009BA  EC87  F007         	call	_lcdctrl
   886   0009BE                     
   887                           ;password_edit.c: 105:            lcdstring("Access Granted");
   888   0009BE  0E01               	movlw	low STR_3
   889   0009C0  6E0B               	movwf	lcdstring@p^0,c
   890   0009C2  ECBE  F007         	call	_lcdstring	;wreg free
   891   0009C6                     
   892                           ;password_edit.c: 106:            for(int j=0;j<10;j++){
   893   0009C6  0E00               	movlw	0
   894   0009C8  6E11               	movwf	(main@j_94+1)^0,c
   895   0009CA  0E00               	movlw	0
   896   0009CC  6E10               	movwf	main@j_94^0,c
   897   0009CE                     l1680:
   898                           
   899                           ;password_edit.c: 108:                lcdctrl(0x08);
   900   0009CE  0E08               	movlw	8
   901   0009D0  EC87  F007         	call	_lcdctrl
   902                           
   903                           ;password_edit.c: 109:                delay(10000);
   904   0009D4  0E10               	movlw	16
   905   0009D6  6E01               	movwf	delay@time^0,c
   906   0009D8  0E27               	movlw	39
   907   0009DA  6E02               	movwf	(delay@time+1)^0,c
   908   0009DC  0E00               	movlw	0
   909   0009DE  6E03               	movwf	(delay@time+2)^0,c
   910   0009E0  0E00               	movlw	0
   911   0009E2  6E04               	movwf	(delay@time+3)^0,c
   912   0009E4  EC47  F007         	call	_delay	;wreg free
   913                           
   914                           ;password_edit.c: 110:                lcdctrl(0x0f);
   915   0009E8  0E0F               	movlw	15
   916   0009EA  EC87  F007         	call	_lcdctrl
   917                           
   918                           ;password_edit.c: 111:                delay(10000);
   919   0009EE  0E10               	movlw	16
   920   0009F0  6E01               	movwf	delay@time^0,c
   921   0009F2  0E27               	movlw	39
   922   0009F4  6E02               	movwf	(delay@time+1)^0,c
   923   0009F6  0E00               	movlw	0
   924   0009F8  6E03               	movwf	(delay@time+2)^0,c
   925   0009FA  0E00               	movlw	0
   926   0009FC  6E04               	movwf	(delay@time+3)^0,c
   927   0009FE  EC47  F007         	call	_delay	;wreg free
   928   000A02                     
   929                           ;password_edit.c: 112:            }
   930   000A02  4A10               	infsnz	main@j_94^0,f,c
   931   000A04  2A11               	incf	(main@j_94+1)^0,f,c
   932   000A06  BE11               	btfsc	(main@j_94+1)^0,7,c
   933   000A08  EF0F  F005         	goto	u1081
   934   000A0C  5011               	movf	(main@j_94+1)^0,w,c
   935   000A0E  E109               	bnz	u1080
   936   000A10  0E0A               	movlw	10
   937   000A12  5C10               	subwf	main@j_94^0,w,c
   938   000A14  A0D8               	btfss	status,0,c
   939   000A16  EF0F  F005         	goto	u1081
   940   000A1A  EF11  F005         	goto	u1080
   941   000A1E                     u1081:
   942   000A1E  EFE7  F004         	goto	l1680
   943   000A22                     u1080:
   944   000A22  EF48  F005         	goto	l1702
   945   000A26                     l1686:
   946                           
   947                           ;password_edit.c: 116:            lcdctrl(0x01);
   948   000A26  0E01               	movlw	1
   949   000A28  EC87  F007         	call	_lcdctrl
   950   000A2C                     
   951                           ;password_edit.c: 117:            lcdstring("Access Denied");
   952   000A2C  0E1F               	movlw	low STR_4
   953   000A2E  6E0B               	movwf	lcdstring@p^0,c
   954   000A30  ECBE  F007         	call	_lcdstring	;wreg free
   955   000A34                     
   956                           ;password_edit.c: 118:            for(int j=0;j<10;j++){
   957   000A34  0E00               	movlw	0
   958   000A36  6E13               	movwf	(main@j_96+1)^0,c
   959   000A38  0E00               	movlw	0
   960   000A3A  6E12               	movwf	main@j_96^0,c
   961   000A3C                     l1696:
   962                           
   963                           ;password_edit.c: 119:                lcdctrl(0x08);
   964   000A3C  0E08               	movlw	8
   965   000A3E  EC87  F007         	call	_lcdctrl
   966                           
   967                           ;password_edit.c: 120:                delay(10000);
   968   000A42  0E10               	movlw	16
   969   000A44  6E01               	movwf	delay@time^0,c
   970   000A46  0E27               	movlw	39
   971   000A48  6E02               	movwf	(delay@time+1)^0,c
   972   000A4A  0E00               	movlw	0
   973   000A4C  6E03               	movwf	(delay@time+2)^0,c
   974   000A4E  0E00               	movlw	0
   975   000A50  6E04               	movwf	(delay@time+3)^0,c
   976   000A52  EC47  F007         	call	_delay	;wreg free
   977                           
   978                           ;password_edit.c: 121:                lcdctrl(0x0f);
   979   000A56  0E0F               	movlw	15
   980   000A58  EC87  F007         	call	_lcdctrl
   981                           
   982                           ;password_edit.c: 122:                delay(10000);
   983   000A5C  0E10               	movlw	16
   984   000A5E  6E01               	movwf	delay@time^0,c
   985   000A60  0E27               	movlw	39
   986   000A62  6E02               	movwf	(delay@time+1)^0,c
   987   000A64  0E00               	movlw	0
   988   000A66  6E03               	movwf	(delay@time+2)^0,c
   989   000A68  0E00               	movlw	0
   990   000A6A  6E04               	movwf	(delay@time+3)^0,c
   991   000A6C  EC47  F007         	call	_delay	;wreg free
   992   000A70                     
   993                           ;password_edit.c: 123:            }
   994   000A70  4A12               	infsnz	main@j_96^0,f,c
   995   000A72  2A13               	incf	(main@j_96+1)^0,f,c
   996   000A74  BE13               	btfsc	(main@j_96+1)^0,7,c
   997   000A76  EF46  F005         	goto	u1091
   998   000A7A  5013               	movf	(main@j_96+1)^0,w,c
   999   000A7C  E109               	bnz	u1090
  1000   000A7E  0E0A               	movlw	10
  1001   000A80  5C12               	subwf	main@j_96^0,w,c
  1002   000A82  A0D8               	btfss	status,0,c
  1003   000A84  EF46  F005         	goto	u1091
  1004   000A88  EF48  F005         	goto	u1090
  1005   000A8C                     u1091:
  1006   000A8C  EF1E  F005         	goto	l1696
  1007   000A90                     u1090:
  1008   000A90                     l1702:
  1009                           
  1010                           ;password_edit.c: 126:            a=keypad();
  1011   000A90  EC56  F005         	call	_keypad	;wreg free
  1012   000A94  6E2F               	movwf	_a^0,c
  1013   000A96                     l102:
  1014   000A96  AC81               	btfss	3969,6,c	;volatile
  1015   000A98  EF50  F005         	goto	u1101
  1016   000A9C  EF52  F005         	goto	u1100
  1017   000AA0                     u1101:
  1018   000AA0  EF4B  F005         	goto	l102
  1019   000AA4                     u1100:
  1020   000AA4  EF34  F003         	goto	l1532
  1021   000AA8                     l77:
  1022   000AA8  EF00  F000         	goto	start
  1023   000AAC                     __end_of_main:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function _strcmp *****************
  1027 ;; Defined at:
  1028 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  l               1    0[COMRAM] PTR const unsigned char 
  1031 ;;		 -> new(5), 
  1032 ;;  r               1    1[COMRAM] PTR const unsigned char 
  1033 ;;		 -> inp(5), 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2    0[COMRAM] int 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1045 ;;      Params:         2       0       0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0
  1047 ;;      Temps:          2       0       0       0       0       0       0
  1048 ;;      Totals:         4       0       0       0       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text1
  1059   000E30                     __ptext1:
  1060                           	callstack 0
  1061   000E30                     _strcmp:
  1062                           	callstack 30
  1063   000E30  EF1C  F007         	goto	l1520
  1064   000E34                     l1518:
  1065   000E34  2A01               	incf	strcmp@l^0,f,c
  1066   000E36  2A02               	incf	strcmp@r^0,f,c
  1067   000E38                     l1520:
  1068   000E38  5002               	movf	strcmp@r^0,w,c
  1069   000E3A  6ED9               	movwf	fsr2l,c
  1070   000E3C  6ADA               	clrf	fsr2h,c
  1071   000E3E  5001               	movf	strcmp@l^0,w,c
  1072   000E40  6EE1               	movwf	fsr1l,c
  1073   000E42  6AE2               	clrf	fsr1h,c
  1074   000E44  50DE               	movf	postinc2,w,c
  1075   000E46  18E6               	xorwf	postinc1,w,c
  1076   000E48  A4D8               	btfss	status,2,c
  1077   000E4A  EF29  F007         	goto	u881
  1078   000E4E  EF2B  F007         	goto	u880
  1079   000E52                     u881:
  1080   000E52  EF36  F007         	goto	l1524
  1081   000E56                     u880:
  1082   000E56  5001               	movf	strcmp@l^0,w,c
  1083   000E58  6ED9               	movwf	fsr2l,c
  1084   000E5A  6ADA               	clrf	fsr2h,c
  1085   000E5C  50DF               	movf	indf2,w,c
  1086   000E5E  A4D8               	btfss	status,2,c
  1087   000E60  EF34  F007         	goto	u891
  1088   000E64  EF36  F007         	goto	u890
  1089   000E68                     u891:
  1090   000E68  EF1A  F007         	goto	l1518
  1091   000E6C                     u890:
  1092   000E6C                     l1524:
  1093   000E6C  5001               	movf	strcmp@l^0,w,c
  1094   000E6E  6ED9               	movwf	fsr2l,c
  1095   000E70  6ADA               	clrf	fsr2h,c
  1096   000E72  50DF               	movf	indf2,w,c
  1097   000E74  6E03               	movwf	??_strcmp^0,c
  1098   000E76  5002               	movf	strcmp@r^0,w,c
  1099   000E78  6ED9               	movwf	fsr2l,c
  1100   000E7A  6ADA               	clrf	fsr2h,c
  1101   000E7C  50DF               	movf	indf2,w,c
  1102   000E7E  6E04               	movwf	(??_strcmp+1)^0,c
  1103   000E80  5004               	movf	(??_strcmp+1)^0,w,c
  1104   000E82  5C03               	subwf	??_strcmp^0,w,c
  1105   000E84  6E01               	movwf	?_strcmp^0,c
  1106   000E86  6A02               	clrf	(?_strcmp+1)^0,c
  1107   000E88  A0D8               	btfss	status,0,c
  1108   000E8A  0602               	decf	(?_strcmp+1)^0,f,c
  1109   000E8C  0012               	return		;funcret
  1110   000E8E                     __end_of_strcmp:
  1111                           	callstack 0
  1112                           
  1113 ;; *************** function _newcode *****************
  1114 ;; Defined at:
  1115 ;;		line 164 in file "password_edit.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1129 ;;      Params:         0       0       0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 4
  1136 ;; This function calls:
  1137 ;;		_keypad
  1138 ;;		_lcdctrl
  1139 ;;		_lcddisp
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text2
  1146   000D4A                     __ptext2:
  1147                           	callstack 0
  1148   000D4A                     _newcode:
  1149                           	callstack 26
  1150   000D4A                     
  1151                           ;password_edit.c: 165:     lcdctrl(0xc0);
  1152   000D4A  0EC0               	movlw	192
  1153   000D4C  EC87  F007         	call	_lcdctrl
  1154   000D50                     
  1155                           ;password_edit.c: 166:     for(index2=0;index2<4;index2++){
  1156   000D50  0E00               	movlw	0
  1157   000D52  6E28               	movwf	(_index2+1)^0,c
  1158   000D54  0E00               	movlw	0
  1159   000D56  6E27               	movwf	_index2^0,c
  1160   000D58                     l1482:
  1161                           
  1162                           ;password_edit.c: 167:         a=keypad();
  1163   000D58  EC56  F005         	call	_keypad	;wreg free
  1164   000D5C  6E2F               	movwf	_a^0,c
  1165                           
  1166                           ;password_edit.c: 168:         switch(a){
  1167   000D5E  EFE0  F006         	goto	l1504
  1168   000D62                     l1484:
  1169                           
  1170                           ;password_edit.c: 170:                 index2=index2-2;
  1171   000D62  0EFE               	movlw	254
  1172   000D64  2427               	addwf	_index2^0,w,c
  1173   000D66  6E27               	movwf	_index2^0,c
  1174   000D68  0EFF               	movlw	255
  1175   000D6A  2028               	addwfc	(_index2+1)^0,w,c
  1176   000D6C  6E28               	movwf	(_index2+1)^0,c
  1177                           
  1178                           ;password_edit.c: 171:                 break;
  1179   000D6E  EFEB  F006         	goto	l136
  1180   000D72                     l1486:
  1181                           
  1182                           ;password_edit.c: 173:                 for(index2=0;index2<4;index2++){
  1183   000D72  0E00               	movlw	0
  1184   000D74  6E28               	movwf	(_index2+1)^0,c
  1185   000D76  0E00               	movlw	0
  1186   000D78  6E27               	movwf	_index2^0,c
  1187   000D7A                     l1492:
  1188                           
  1189                           ;password_edit.c: 175:                 }
  1190   000D7A  4A27               	infsnz	_index2^0,f,c
  1191   000D7C  2A28               	incf	(_index2+1)^0,f,c
  1192   000D7E  BE28               	btfsc	(_index2+1)^0,7,c
  1193   000D80  EFCB  F006         	goto	u821
  1194   000D84  5028               	movf	(_index2+1)^0,w,c
  1195   000D86  E109               	bnz	u820
  1196   000D88  0E04               	movlw	4
  1197   000D8A  5C27               	subwf	_index2^0,w,c
  1198   000D8C  A0D8               	btfss	status,0,c
  1199   000D8E  EFCB  F006         	goto	u821
  1200   000D92  EFCD  F006         	goto	u820
  1201   000D96                     u821:
  1202   000D96  EFBD  F006         	goto	l1492
  1203   000D9A                     u820:
  1204   000D9A                     
  1205                           ;password_edit.c: 176:                 lcdctrl(0x01);
  1206   000D9A  0E01               	movlw	1
  1207   000D9C  EC87  F007         	call	_lcdctrl
  1208                           
  1209                           ;password_edit.c: 177:                 break;
  1210   000DA0  EFEB  F006         	goto	l136
  1211   000DA4                     l1498:
  1212                           
  1213                           ;password_edit.c: 179:                 a=keypad();
  1214   000DA4  EC56  F005         	call	_keypad	;wreg free
  1215   000DA8  6E2F               	movwf	_a^0,c
  1216   000DAA                     
  1217                           ;password_edit.c: 180:                 lcddisp(a);
  1218   000DAA  502F               	movf	_a^0,w,c
  1219   000DAC  EC6B  F007         	call	_lcddisp
  1220   000DB0                     
  1221                           ;password_edit.c: 182:                 new[index2]=a;
  1222   000DB0  5027               	movf	_index2^0,w,c
  1223   000DB2  0F19               	addlw	low _new
  1224   000DB4  6ED9               	movwf	fsr2l,c
  1225   000DB6  6ADA               	clrf	fsr2h,c
  1226   000DB8  C02F  FFDF         	movff	_a,indf2
  1227                           
  1228                           ;password_edit.c: 183:         }
  1229   000DBC  EFEB  F006         	goto	l136
  1230   000DC0                     l1504:
  1231   000DC0  502F               	movf	_a^0,w,c
  1232                           
  1233                           ; Switch size 1, requested type "simple"
  1234                           ; Number of cases is 2, Range of values is 97 to 99
  1235                           ; switch strategies available:
  1236                           ; Name         Instructions Cycles
  1237                           ; simple_byte            7     4 (average)
  1238                           ;	Chosen strategy is simple_byte
  1239   000DC2  0A61               	xorlw	97	; case 97
  1240   000DC4  B4D8               	btfsc	status,2,c
  1241   000DC6  EFB1  F006         	goto	l1484
  1242   000DCA  0A02               	xorlw	2	; case 99
  1243   000DCC  B4D8               	btfsc	status,2,c
  1244   000DCE  EFB9  F006         	goto	l1486
  1245   000DD2  EFD2  F006         	goto	l1498
  1246   000DD6                     l136:
  1247   000DD6  A881               	btfss	3969,4,c	;volatile
  1248   000DD8  EFF0  F006         	goto	u831
  1249   000DDC  EFF2  F006         	goto	u830
  1250   000DE0                     u831:
  1251   000DE0  EFEB  F006         	goto	l136
  1252   000DE4                     u830:
  1253   000DE4  AA81               	btfss	3969,5,c	;volatile
  1254   000DE6  EFF7  F006         	goto	u841
  1255   000DEA  EFF9  F006         	goto	u840
  1256   000DEE                     u841:
  1257   000DEE  EFEB  F006         	goto	l136
  1258   000DF2                     u840:
  1259   000DF2  AC81               	btfss	3969,6,c	;volatile
  1260   000DF4  EFFE  F006         	goto	u851
  1261   000DF8  EF00  F007         	goto	u850
  1262   000DFC                     u851:
  1263   000DFC  EFEB  F006         	goto	l136
  1264   000E00                     u850:
  1265   000E00  AE81               	btfss	3969,7,c	;volatile
  1266   000E02  EF05  F007         	goto	u861
  1267   000E06  EF07  F007         	goto	u860
  1268   000E0A                     u861:
  1269   000E0A  EFEB  F006         	goto	l136
  1270   000E0E                     u860:
  1271   000E0E                     
  1272                           ;password_edit.c: 186:     }
  1273   000E0E  4A27               	infsnz	_index2^0,f,c
  1274   000E10  2A28               	incf	(_index2+1)^0,f,c
  1275   000E12  BE28               	btfsc	(_index2+1)^0,7,c
  1276   000E14  EF15  F007         	goto	u871
  1277   000E18  5028               	movf	(_index2+1)^0,w,c
  1278   000E1A  E109               	bnz	u870
  1279   000E1C  0E04               	movlw	4
  1280   000E1E  5C27               	subwf	_index2^0,w,c
  1281   000E20  A0D8               	btfss	status,0,c
  1282   000E22  EF15  F007         	goto	u871
  1283   000E26  EF17  F007         	goto	u870
  1284   000E2A                     u871:
  1285   000E2A  EFAC  F006         	goto	l1482
  1286   000E2E                     u870:
  1287   000E2E  0012               	return		;funcret
  1288   000E30                     __end_of_newcode:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _keypad *****************
  1292 ;; Defined at:
  1293 ;;		line 188 in file "password_edit.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      unsigned char 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1307 ;;      Params:         0       0       0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 3
  1314 ;; This function calls:
  1315 ;;		_lcdctrl
  1316 ;;		_lcddisp
  1317 ;;		_lcdstring
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;;		_newcode
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text3
  1325   000AAC                     __ptext3:
  1326                           	callstack 0
  1327   000AAC                     _keypad:
  1328                           	callstack 26
  1329   000AAC                     l142:
  1330   000AAC                     
  1331                           ;password_edit.c: 191:         PORTB=0X0e;
  1332   000AAC  0E0E               	movlw	14
  1333   000AAE  6E81               	movwf	129,c	;volatile
  1334   000AB0                     
  1335                           ;password_edit.c: 192:         if(RB4==0)
  1336   000AB0  B881               	btfsc	3969,4,c	;volatile
  1337   000AB2  EF5D  F005         	goto	u581
  1338   000AB6  EF5F  F005         	goto	u580
  1339   000ABA                     u581:
  1340   000ABA  EF62  F005         	goto	l143
  1341   000ABE                     u580:
  1342   000ABE                     
  1343                           ;password_edit.c: 193:         {;password_edit.c: 194:          return '9';
  1344   000ABE  0E39               	movlw	57
  1345   000AC0  EFA4  F006         	goto	l144
  1346   000AC4                     l143:
  1347   000AC4  BA81               	btfsc	3969,5,c	;volatile
  1348   000AC6  EF67  F005         	goto	u591
  1349   000ACA  EF69  F005         	goto	u590
  1350   000ACE                     u591:
  1351   000ACE  EF6C  F005         	goto	l146
  1352   000AD2                     u590:
  1353   000AD2                     
  1354                           ;password_edit.c: 197:         {;password_edit.c: 198:             return '8';
  1355   000AD2  0E38               	movlw	56
  1356   000AD4  EFA4  F006         	goto	l144
  1357   000AD8                     l146:
  1358   000AD8  BC81               	btfsc	3969,6,c	;volatile
  1359   000ADA  EF71  F005         	goto	u601
  1360   000ADE  EF73  F005         	goto	u600
  1361   000AE2                     u601:
  1362   000AE2  EF76  F005         	goto	l148
  1363   000AE6                     u600:
  1364   000AE6                     
  1365                           ;password_edit.c: 201:         {;password_edit.c: 202:             return '7';
  1366   000AE6  0E37               	movlw	55
  1367   000AE8  EFA4  F006         	goto	l144
  1368   000AEC                     l148:
  1369   000AEC  BE81               	btfsc	3969,7,c	;volatile
  1370   000AEE  EF7B  F005         	goto	u611
  1371   000AF2  EF7D  F005         	goto	u610
  1372   000AF6                     u611:
  1373   000AF6  EF89  F005         	goto	l147
  1374   000AFA                     u610:
  1375   000AFA                     
  1376                           ;password_edit.c: 205:         {;password_edit.c: 206:             lcdctrl(0x10);
  1377   000AFA  0E10               	movlw	16
  1378   000AFC  EC87  F007         	call	_lcdctrl
  1379                           
  1380                           ;password_edit.c: 207:             lcddisp(' ');
  1381   000B00  0E20               	movlw	32
  1382   000B02  EC6B  F007         	call	_lcddisp
  1383                           
  1384                           ;password_edit.c: 208:             lcdctrl(0x10);
  1385   000B06  0E10               	movlw	16
  1386   000B08  EC87  F007         	call	_lcdctrl
  1387   000B0C                     
  1388                           ;password_edit.c: 210:             return 'a';
  1389   000B0C  0E61               	movlw	97
  1390   000B0E  EFA4  F006         	goto	l144
  1391   000B12                     l147:
  1392   000B12                     
  1393                           ;password_edit.c: 213:         PORTB=0X0D;
  1394   000B12  0E0D               	movlw	13
  1395   000B14  6E81               	movwf	129,c	;volatile
  1396   000B16                     
  1397                           ;password_edit.c: 214:          if(RB4==0)
  1398   000B16  B881               	btfsc	3969,4,c	;volatile
  1399   000B18  EF90  F005         	goto	u621
  1400   000B1C  EF92  F005         	goto	u620
  1401   000B20                     u621:
  1402   000B20  EF95  F005         	goto	l151
  1403   000B24                     u620:
  1404   000B24                     
  1405                           ;password_edit.c: 215:         {;password_edit.c: 217:              return '6';
  1406   000B24  0E36               	movlw	54
  1407   000B26  EFA4  F006         	goto	l144
  1408   000B2A                     l151:
  1409   000B2A  BA81               	btfsc	3969,5,c	;volatile
  1410   000B2C  EF9A  F005         	goto	u631
  1411   000B30  EF9C  F005         	goto	u630
  1412   000B34                     u631:
  1413   000B34  EF9F  F005         	goto	l153
  1414   000B38                     u630:
  1415   000B38                     
  1416                           ;password_edit.c: 220:         {;password_edit.c: 222:             return '5';
  1417   000B38  0E35               	movlw	53
  1418   000B3A  EFA4  F006         	goto	l144
  1419   000B3E                     l153:
  1420   000B3E  BC81               	btfsc	3969,6,c	;volatile
  1421   000B40  EFA4  F005         	goto	u641
  1422   000B44  EFA6  F005         	goto	u640
  1423   000B48                     u641:
  1424   000B48  EFA9  F005         	goto	l155
  1425   000B4C                     u640:
  1426   000B4C                     
  1427                           ;password_edit.c: 225:         {;password_edit.c: 227:             return '4';
  1428   000B4C  0E34               	movlw	52
  1429   000B4E  EFA4  F006         	goto	l144
  1430   000B52                     l155:
  1431   000B52  BE81               	btfsc	3969,7,c	;volatile
  1432   000B54  EFAE  F005         	goto	u651
  1433   000B58  EFB0  F005         	goto	u650
  1434   000B5C                     u651:
  1435   000B5C  EFB3  F005         	goto	l154
  1436   000B60                     u650:
  1437   000B60                     
  1438                           ;password_edit.c: 230:         {;password_edit.c: 232:             return 'b';
  1439   000B60  0E62               	movlw	98
  1440   000B62  EFA4  F006         	goto	l144
  1441   000B66                     l154:
  1442   000B66                     
  1443                           ;password_edit.c: 236:         PORTB=0X0B;
  1444   000B66  0E0B               	movlw	11
  1445   000B68  6E81               	movwf	129,c	;volatile
  1446   000B6A                     
  1447                           ;password_edit.c: 237:          if(RB4==0)
  1448   000B6A  B881               	btfsc	3969,4,c	;volatile
  1449   000B6C  EFBA  F005         	goto	u661
  1450   000B70  EFBC  F005         	goto	u660
  1451   000B74                     u661:
  1452   000B74  EFBF  F005         	goto	l158
  1453   000B78                     u660:
  1454   000B78                     
  1455                           ;password_edit.c: 238:         {;password_edit.c: 240:              return '3';
  1456   000B78  0E33               	movlw	51
  1457   000B7A  EFA4  F006         	goto	l144
  1458   000B7E                     l158:
  1459   000B7E  BA81               	btfsc	3969,5,c	;volatile
  1460   000B80  EFC4  F005         	goto	u671
  1461   000B84  EFC6  F005         	goto	u670
  1462   000B88                     u671:
  1463   000B88  EFC9  F005         	goto	l160
  1464   000B8C                     u670:
  1465   000B8C                     
  1466                           ;password_edit.c: 243:         {;password_edit.c: 245:             return '2';
  1467   000B8C  0E32               	movlw	50
  1468   000B8E  EFA4  F006         	goto	l144
  1469   000B92                     l160:
  1470   000B92  BC81               	btfsc	3969,6,c	;volatile
  1471   000B94  EFCE  F005         	goto	u681
  1472   000B98  EFD0  F005         	goto	u680
  1473   000B9C                     u681:
  1474   000B9C  EFD3  F005         	goto	l162
  1475   000BA0                     u680:
  1476   000BA0                     
  1477                           ;password_edit.c: 248:         {;password_edit.c: 250:             return '1';
  1478   000BA0  0E31               	movlw	49
  1479   000BA2  EFA4  F006         	goto	l144
  1480   000BA6                     l162:
  1481   000BA6                     
  1482                           ;password_edit.c: 257:         PORTB=0X07;
  1483   000BA6  0E07               	movlw	7
  1484   000BA8  6E81               	movwf	129,c	;volatile
  1485   000BAA                     
  1486                           ;password_edit.c: 258:         if(RB4==0){
  1487   000BAA  B881               	btfsc	3969,4,c	;volatile
  1488   000BAC  EFDA  F005         	goto	u691
  1489   000BB0  EFDC  F005         	goto	u690
  1490   000BB4                     u691:
  1491   000BB4  EF12  F006         	goto	l165
  1492   000BB8                     u690:
  1493   000BB8                     
  1494                           ;password_edit.c: 259:             if(c1==2){
  1495   000BB8  0E02               	movlw	2
  1496   000BBA  182D               	xorwf	_c1^0,w,c
  1497   000BBC  102E               	iorwf	(_c1+1)^0,w,c
  1498   000BBE  A4D8               	btfss	status,2,c
  1499   000BC0  EFE4  F005         	goto	u701
  1500   000BC4  EFE6  F005         	goto	u700
  1501   000BC8                     u701:
  1502   000BC8  EFEA  F005         	goto	l1410
  1503   000BCC                     u700:
  1504   000BCC                     
  1505                           ;password_edit.c: 260:                 c1=0;
  1506   000BCC  0E00               	movlw	0
  1507   000BCE  6E2E               	movwf	(_c1+1)^0,c
  1508   000BD0  0E00               	movlw	0
  1509   000BD2  6E2D               	movwf	_c1^0,c
  1510   000BD4                     l1410:
  1511                           
  1512                           ;password_edit.c: 262:             c1++;
  1513   000BD4  4A2D               	infsnz	_c1^0,f,c
  1514   000BD6  2A2E               	incf	(_c1+1)^0,f,c
  1515   000BD8                     l167:
  1516   000BD8  A881               	btfss	3969,4,c	;volatile
  1517   000BDA  EFF1  F005         	goto	u711
  1518   000BDE  EFF3  F005         	goto	u710
  1519   000BE2                     u711:
  1520   000BE2  EFEC  F005         	goto	l167
  1521   000BE6                     u710:
  1522   000BE6                     
  1523                           ;password_edit.c: 264:             if(c1==1){
  1524   000BE6  042D               	decf	_c1^0,w,c
  1525   000BE8  102E               	iorwf	(_c1+1)^0,w,c
  1526   000BEA  A4D8               	btfss	status,2,c
  1527   000BEC  EFFA  F005         	goto	u721
  1528   000BF0  EFFC  F005         	goto	u720
  1529   000BF4                     u721:
  1530   000BF4  EF01  F006         	goto	l1416
  1531   000BF8                     u720:
  1532   000BF8                     
  1533                           ;password_edit.c: 265:                 lcdctrl(0x0f);
  1534   000BF8  0E0F               	movlw	15
  1535   000BFA  EC87  F007         	call	_lcdctrl
  1536                           
  1537                           ;password_edit.c: 266:             }
  1538   000BFE  EF56  F005         	goto	l142
  1539   000C02                     l1416:
  1540   000C02  0E02               	movlw	2
  1541   000C04  182D               	xorwf	_c1^0,w,c
  1542   000C06  102E               	iorwf	(_c1+1)^0,w,c
  1543   000C08  A4D8               	btfss	status,2,c
  1544   000C0A  EF09  F006         	goto	u731
  1545   000C0E  EF0B  F006         	goto	u730
  1546   000C12                     u731:
  1547   000C12  EF10  F006         	goto	l171
  1548   000C16                     u730:
  1549   000C16                     
  1550                           ;password_edit.c: 268:                 lcdctrl(0x08);
  1551   000C16  0E08               	movlw	8
  1552   000C18  EC87  F007         	call	_lcdctrl
  1553   000C1C  EF56  F005         	goto	l142
  1554   000C20                     l171:
  1555                           
  1556                           ;password_edit.c: 270:         }
  1557   000C20  EF56  F005         	goto	l142
  1558   000C24                     l165:
  1559   000C24  BA81               	btfsc	3969,5,c	;volatile
  1560   000C26  EF17  F006         	goto	u741
  1561   000C2A  EF19  F006         	goto	u740
  1562   000C2E                     u741:
  1563   000C2E  EF1C  F006         	goto	l174
  1564   000C32                     u740:
  1565   000C32                     
  1566                           ;password_edit.c: 273:         {;password_edit.c: 275:             return 'c';
  1567   000C32  0E63               	movlw	99
  1568   000C34  EFA4  F006         	goto	l144
  1569   000C38                     l174:
  1570   000C38  BC81               	btfsc	3969,6,c	;volatile
  1571   000C3A  EF21  F006         	goto	u751
  1572   000C3E  EF23  F006         	goto	u750
  1573   000C42                     u751:
  1574   000C42  EFA2  F006         	goto	l176
  1575   000C46                     u750:
  1576   000C46                     
  1577                           ;password_edit.c: 279:         {;password_edit.c: 280:             lcdctrl(0x01);
  1578   000C46  0E01               	movlw	1
  1579   000C48  EC87  F007         	call	_lcdctrl
  1580   000C4C                     
  1581                           ;password_edit.c: 281:             if(c2==2){
  1582   000C4C  0E02               	movlw	2
  1583   000C4E  182B               	xorwf	_c2^0,w,c
  1584   000C50  102C               	iorwf	(_c2+1)^0,w,c
  1585   000C52  A4D8               	btfss	status,2,c
  1586   000C54  EF2E  F006         	goto	u761
  1587   000C58  EF30  F006         	goto	u760
  1588   000C5C                     u761:
  1589   000C5C  EF34  F006         	goto	l1432
  1590   000C60                     u760:
  1591   000C60                     
  1592                           ;password_edit.c: 282:                 c2=0;
  1593   000C60  0E00               	movlw	0
  1594   000C62  6E2C               	movwf	(_c2+1)^0,c
  1595   000C64  0E00               	movlw	0
  1596   000C66  6E2B               	movwf	_c2^0,c
  1597   000C68                     l1432:
  1598                           
  1599                           ;password_edit.c: 284:             c2++;
  1600   000C68  4A2B               	infsnz	_c2^0,f,c
  1601   000C6A  2A2C               	incf	(_c2+1)^0,f,c
  1602   000C6C                     l178:
  1603   000C6C  AC81               	btfss	3969,6,c	;volatile
  1604   000C6E  EF3B  F006         	goto	u771
  1605   000C72  EF3D  F006         	goto	u770
  1606   000C76                     u771:
  1607   000C76  EF36  F006         	goto	l178
  1608   000C7A                     u770:
  1609   000C7A                     
  1610                           ;password_edit.c: 286:             if(c2==1){
  1611   000C7A  042B               	decf	_c2^0,w,c
  1612   000C7C  102C               	iorwf	(_c2+1)^0,w,c
  1613   000C7E  A4D8               	btfss	status,2,c
  1614   000C80  EF44  F006         	goto	u781
  1615   000C84  EF46  F006         	goto	u780
  1616   000C88                     u781:
  1617   000C88  EF6F  F006         	goto	l1454
  1618   000C8C                     u780:
  1619   000C8C                     
  1620                           ;password_edit.c: 287:                 lcdctrl(0x80);
  1621   000C8C  0E80               	movlw	128
  1622   000C8E  EC87  F007         	call	_lcdctrl
  1623   000C92                     
  1624                           ;password_edit.c: 288:                 lcdstring("old code is");
  1625   000C92  0E2D               	movlw	low STR_8
  1626   000C94  6E0B               	movwf	lcdstring@p^0,c
  1627   000C96  ECBE  F007         	call	_lcdstring	;wreg free
  1628   000C9A                     
  1629                           ;password_edit.c: 289:                 lcdctrl(0xc0);
  1630   000C9A  0EC0               	movlw	192
  1631   000C9C  EC87  F007         	call	_lcdctrl
  1632   000CA0                     
  1633                           ;password_edit.c: 290:                 for(index=0;index<4;index++){
  1634   000CA0  0E00               	movlw	0
  1635   000CA2  6E2A               	movwf	(_index+1)^0,c
  1636   000CA4  0E00               	movlw	0
  1637   000CA6  6E29               	movwf	_index^0,c
  1638   000CA8                     l1444:
  1639   000CA8  BE2A               	btfsc	(_index+1)^0,7,c
  1640   000CAA  EF60  F006         	goto	u791
  1641   000CAE  502A               	movf	(_index+1)^0,w,c
  1642   000CB0  E109               	bnz	u790
  1643   000CB2  0E04               	movlw	4
  1644   000CB4  5C29               	subwf	_index^0,w,c
  1645   000CB6  A0D8               	btfss	status,0,c
  1646   000CB8  EF60  F006         	goto	u791
  1647   000CBC  EF62  F006         	goto	u790
  1648   000CC0                     u791:
  1649   000CC0  EF64  F006         	goto	l1448
  1650   000CC4                     u790:
  1651   000CC4  EF56  F005         	goto	l142
  1652   000CC8                     l1448:
  1653                           
  1654                           ;password_edit.c: 291:                     lcddisp(pass[index]);
  1655   000CC8  5029               	movf	_index^0,w,c
  1656   000CCA  0F14               	addlw	low _pass
  1657   000CCC  6ED9               	movwf	fsr2l,c
  1658   000CCE  6ADA               	clrf	fsr2h,c
  1659   000CD0  50DF               	movf	indf2,w,c
  1660   000CD2  EC6B  F007         	call	_lcddisp
  1661   000CD6                     
  1662                           ;password_edit.c: 292:                 }
  1663   000CD6  4A29               	infsnz	_index^0,f,c
  1664   000CD8  2A2A               	incf	(_index+1)^0,f,c
  1665   000CDA  EF54  F006         	goto	l1444
  1666   000CDE                     l1454:
  1667   000CDE  0E02               	movlw	2
  1668   000CE0  182B               	xorwf	_c2^0,w,c
  1669   000CE2  102C               	iorwf	(_c2+1)^0,w,c
  1670   000CE4  A4D8               	btfss	status,2,c
  1671   000CE6  EF77  F006         	goto	u801
  1672   000CEA  EF79  F006         	goto	u800
  1673   000CEE                     u801:
  1674   000CEE  EFA4  F006         	goto	l144
  1675   000CF2                     u800:
  1676   000CF2                     
  1677                           ;password_edit.c: 295:                 lcdctrl(0x80);
  1678   000CF2  0E80               	movlw	128
  1679   000CF4  EC87  F007         	call	_lcdctrl
  1680   000CF8                     
  1681                           ;password_edit.c: 296:                 lcdstring("new code is");
  1682   000CF8  0E39               	movlw	low STR_9
  1683   000CFA  6E0B               	movwf	lcdstring@p^0,c
  1684   000CFC  ECBE  F007         	call	_lcdstring	;wreg free
  1685   000D00                     
  1686                           ;password_edit.c: 297:                 lcdctrl(0xc0);
  1687   000D00  0EC0               	movlw	192
  1688   000D02  EC87  F007         	call	_lcdctrl
  1689   000D06                     
  1690                           ;password_edit.c: 298:                 for(index=0;index<4;index++){
  1691   000D06  0E00               	movlw	0
  1692   000D08  6E2A               	movwf	(_index+1)^0,c
  1693   000D0A  0E00               	movlw	0
  1694   000D0C  6E29               	movwf	_index^0,c
  1695   000D0E                     l1464:
  1696   000D0E  BE2A               	btfsc	(_index+1)^0,7,c
  1697   000D10  EF93  F006         	goto	u811
  1698   000D14  502A               	movf	(_index+1)^0,w,c
  1699   000D16  E109               	bnz	u810
  1700   000D18  0E04               	movlw	4
  1701   000D1A  5C29               	subwf	_index^0,w,c
  1702   000D1C  A0D8               	btfss	status,0,c
  1703   000D1E  EF93  F006         	goto	u811
  1704   000D22  EF95  F006         	goto	u810
  1705   000D26                     u811:
  1706   000D26  EF97  F006         	goto	l1468
  1707   000D2A                     u810:
  1708   000D2A  EF56  F005         	goto	l142
  1709   000D2E                     l1468:
  1710                           
  1711                           ;password_edit.c: 299:                     lcddisp(new[index]);
  1712   000D2E  5029               	movf	_index^0,w,c
  1713   000D30  0F19               	addlw	low _new
  1714   000D32  6ED9               	movwf	fsr2l,c
  1715   000D34  6ADA               	clrf	fsr2h,c
  1716   000D36  50DF               	movf	indf2,w,c
  1717   000D38  EC6B  F007         	call	_lcddisp
  1718   000D3C                     
  1719                           ;password_edit.c: 300:                 }
  1720   000D3C  4A29               	infsnz	_index^0,f,c
  1721   000D3E  2A2A               	incf	(_index+1)^0,f,c
  1722   000D40  EF87  F006         	goto	l1464
  1723   000D44                     l176:
  1724   000D44  EF56  F005         	goto	l142
  1725   000D48                     l144:
  1726   000D48  0012               	return		;funcret
  1727   000D4A                     __end_of_keypad:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _lcdstring *****************
  1731 ;; Defined at:
  1732 ;;		line 157 in file "password_edit.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  p               1   10[COMRAM] PTR const unsigned char 
  1735 ;;		 -> STR_9(12), STR_8(12), STR_7(14), STR_6(15), 
  1736 ;;		 -> STR_5(11), STR_4(14), STR_3(15), STR_2(15), 
  1737 ;;		 -> STR_1(11), 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         1       0       0       0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0
  1752 ;;      Totals:         1       0       0       0       0       0       0
  1753 ;;Total ram usage:        1 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 2
  1756 ;; This function calls:
  1757 ;;		_lcddisp
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;;		_keypad
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text4
  1765   000F7C                     __ptext4:
  1766                           	callstack 0
  1767   000F7C                     _lcdstring:
  1768                           	callstack 26
  1769   000F7C                     
  1770                           ;password_edit.c: 158:     while(*p)
  1771   000F7C  EFC9  F007         	goto	l1324
  1772   000F80                     l1320:
  1773                           
  1774                           ;password_edit.c: 159:     {;password_edit.c: 160:         lcddisp(*p);
  1775   000F80  C00B  FFF6         	movff	lcdstring@p,tblptrl
  1776   000F84                     	if	1	;There is more than 1 active tblptr byte
  1777   000F84  0E06               	movlw	high __smallconst
  1778   000F86  6EF7               	movwf	tblptrh,c
  1779   000F88                     	endif
  1780   000F88                     	if	0	;tblptru may be non-zero
  1781   000F88                     	endif
  1782   000F88                     	if	0	;tblptru may be non-zero
  1783   000F88                     	endif
  1784   000F88  0008               	tblrd		*
  1785   000F8A  50F5               	movf	tablat,w,c
  1786   000F8C  EC6B  F007         	call	_lcddisp
  1787   000F90                     
  1788                           ;password_edit.c: 161:         p++;
  1789   000F90  2A0B               	incf	lcdstring@p^0,f,c
  1790   000F92                     l1324:
  1791                           
  1792                           ;password_edit.c: 158:     while(*p)
  1793   000F92  C00B  FFF6         	movff	lcdstring@p,tblptrl
  1794   000F96                     	if	1	;There is more than 1 active tblptr byte
  1795   000F96  0E06               	movlw	high __smallconst
  1796   000F98  6EF7               	movwf	tblptrh,c
  1797   000F9A                     	endif
  1798   000F9A                     	if	0	;tblptru may be non-zero
  1799   000F9A                     	endif
  1800   000F9A                     	if	0	;tblptru may be non-zero
  1801   000F9A                     	endif
  1802   000F9A  0008               	tblrd		*
  1803   000F9C  50F5               	movf	tablat,w,c
  1804   000F9E  0900               	iorlw	0
  1805   000FA0  A4D8               	btfss	status,2,c
  1806   000FA2  EFD5  F007         	goto	u571
  1807   000FA6  EFD7  F007         	goto	u570
  1808   000FAA                     u571:
  1809   000FAA  EFC0  F007         	goto	l1320
  1810   000FAE                     u570:
  1811   000FAE  0012               	return		;funcret
  1812   000FB0                     __end_of_lcdstring:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _lcddisp *****************
  1816 ;; Defined at:
  1817 ;;		line 148 in file "password_edit.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  b               1    wreg     unsigned char 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  b               1    9[COMRAM] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1831 ;;      Params:         0       0       0       0       0       0       0
  1832 ;;      Locals:         1       0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0
  1834 ;;      Totals:         1       0       0       0       0       0       0
  1835 ;;Total ram usage:        1 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 1
  1838 ;; This function calls:
  1839 ;;		_delay
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;;		_lcdstring
  1843 ;;		_newcode
  1844 ;;		_keypad
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text5
  1849   000ED6                     __ptext5:
  1850                           	callstack 0
  1851   000ED6                     _lcddisp:
  1852                           	callstack 28
  1853                           
  1854                           ;incstack = 0
  1855                           ;lcddisp@b stored from wreg
  1856   000ED6  6E0A               	movwf	lcddisp@b^0,c
  1857   000ED8                     
  1858                           ;password_edit.c: 149:     RC0=1;
  1859   000ED8  8082               	bsf	3970,0,c	;volatile
  1860                           
  1861                           ;password_edit.c: 150:     RC1=0;
  1862   000EDA  9282               	bcf	3970,1,c	;volatile
  1863   000EDC                     
  1864                           ;password_edit.c: 151:     PORTD=b;
  1865   000EDC  C00A  FF83         	movff	lcddisp@b,3971	;volatile
  1866   000EE0                     
  1867                           ;password_edit.c: 152:     RC2=1;
  1868   000EE0  8482               	bsf	3970,2,c	;volatile
  1869   000EE2                     
  1870                           ;password_edit.c: 153:     delay(100);
  1871   000EE2  0E64               	movlw	100
  1872   000EE4  6E01               	movwf	delay@time^0,c
  1873   000EE6  0E00               	movlw	0
  1874   000EE8  6E02               	movwf	(delay@time+1)^0,c
  1875   000EEA  0E00               	movlw	0
  1876   000EEC  6E03               	movwf	(delay@time+2)^0,c
  1877   000EEE  0E00               	movlw	0
  1878   000EF0  6E04               	movwf	(delay@time+3)^0,c
  1879   000EF2  EC47  F007         	call	_delay	;wreg free
  1880   000EF6                     
  1881                           ;password_edit.c: 154:     RC2=0;
  1882   000EF6  9482               	bcf	3970,2,c	;volatile
  1883   000EF8                     
  1884                           ;password_edit.c: 155:     delay(5000);
  1885   000EF8  0E88               	movlw	136
  1886   000EFA  6E01               	movwf	delay@time^0,c
  1887   000EFC  0E13               	movlw	19
  1888   000EFE  6E02               	movwf	(delay@time+1)^0,c
  1889   000F00  0E00               	movlw	0
  1890   000F02  6E03               	movwf	(delay@time+2)^0,c
  1891   000F04  0E00               	movlw	0
  1892   000F06  6E04               	movwf	(delay@time+3)^0,c
  1893   000F08  EC47  F007         	call	_delay	;wreg free
  1894   000F0C  0012               	return		;funcret
  1895   000F0E                     __end_of_lcddisp:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _lcdctrl *****************
  1899 ;; Defined at:
  1900 ;;		line 139 in file "password_edit.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  a               1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  a               1    9[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1914 ;;      Params:         0       0       0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0
  1917 ;;      Totals:         1       0       0       0       0       0       0
  1918 ;;Total ram usage:        1 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 1
  1921 ;; This function calls:
  1922 ;;		_delay
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;;		_newcode
  1926 ;;		_keypad
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text6
  1931   000F0E                     __ptext6:
  1932                           	callstack 0
  1933   000F0E                     _lcdctrl:
  1934                           	callstack 28
  1935                           
  1936                           ;incstack = 0
  1937                           ;lcdctrl@a stored from wreg
  1938   000F0E  6E0A               	movwf	lcdctrl@a^0,c
  1939   000F10                     
  1940                           ;password_edit.c: 140:     RC0=0;
  1941   000F10  9082               	bcf	3970,0,c	;volatile
  1942                           
  1943                           ;password_edit.c: 141:     RC1=0;
  1944   000F12  9282               	bcf	3970,1,c	;volatile
  1945   000F14                     
  1946                           ;password_edit.c: 142:     PORTD=a;
  1947   000F14  C00A  FF83         	movff	lcdctrl@a,3971	;volatile
  1948   000F18                     
  1949                           ;password_edit.c: 143:     RC2=1;
  1950   000F18  8482               	bsf	3970,2,c	;volatile
  1951   000F1A                     
  1952                           ;password_edit.c: 144:     delay(100);
  1953   000F1A  0E64               	movlw	100
  1954   000F1C  6E01               	movwf	delay@time^0,c
  1955   000F1E  0E00               	movlw	0
  1956   000F20  6E02               	movwf	(delay@time+1)^0,c
  1957   000F22  0E00               	movlw	0
  1958   000F24  6E03               	movwf	(delay@time+2)^0,c
  1959   000F26  0E00               	movlw	0
  1960   000F28  6E04               	movwf	(delay@time+3)^0,c
  1961   000F2A  EC47  F007         	call	_delay	;wreg free
  1962   000F2E                     
  1963                           ;password_edit.c: 145:     RC2=0;
  1964   000F2E  9482               	bcf	3970,2,c	;volatile
  1965   000F30                     
  1966                           ;password_edit.c: 146:     delay(5000);
  1967   000F30  0E88               	movlw	136
  1968   000F32  6E01               	movwf	delay@time^0,c
  1969   000F34  0E13               	movlw	19
  1970   000F36  6E02               	movwf	(delay@time+1)^0,c
  1971   000F38  0E00               	movlw	0
  1972   000F3A  6E03               	movwf	(delay@time+2)^0,c
  1973   000F3C  0E00               	movlw	0
  1974   000F3E  6E04               	movwf	(delay@time+3)^0,c
  1975   000F40  EC47  F007         	call	_delay	;wreg free
  1976   000F44  0012               	return		;funcret
  1977   000F46                     __end_of_lcdctrl:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _delay *****************
  1981 ;; Defined at:
  1982 ;;		line 136 in file "password_edit.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  time            4    0[COMRAM] long 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  i               4    5[COMRAM] long 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1996 ;;      Params:         4       0       0       0       0       0       0
  1997 ;;      Locals:         4       0       0       0       0       0       0
  1998 ;;      Temps:          1       0       0       0       0       0       0
  1999 ;;      Totals:         9       0       0       0       0       0       0
  2000 ;;Total ram usage:        9 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;;		_lcdctrl
  2007 ;;		_lcddisp
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text7
  2012   000E8E                     __ptext7:
  2013                           	callstack 0
  2014   000E8E                     _delay:
  2015                           	callstack 28
  2016   000E8E                     
  2017                           ;password_edit.c: 137:     for(long int i=0;i<time;i++);
  2018   000E8E  0E00               	movlw	0
  2019   000E90  6E06               	movwf	delay@i^0,c
  2020   000E92  0E00               	movlw	0
  2021   000E94  6E07               	movwf	(delay@i+1)^0,c
  2022   000E96  0E00               	movlw	0
  2023   000E98  6E08               	movwf	(delay@i+2)^0,c
  2024   000E9A  0E00               	movlw	0
  2025   000E9C  6E09               	movwf	(delay@i+3)^0,c
  2026   000E9E  EF57  F007         	goto	l109
  2027   000EA2                     l1292:
  2028   000EA2  0E01               	movlw	1
  2029   000EA4  2606               	addwf	delay@i^0,f,c
  2030   000EA6  0E00               	movlw	0
  2031   000EA8  2207               	addwfc	(delay@i+1)^0,f,c
  2032   000EAA  2208               	addwfc	(delay@i+2)^0,f,c
  2033   000EAC  2209               	addwfc	(delay@i+3)^0,f,c
  2034   000EAE                     l109:
  2035   000EAE  5001               	movf	delay@time^0,w,c
  2036   000EB0  5C06               	subwf	delay@i^0,w,c
  2037   000EB2  5002               	movf	(delay@time+1)^0,w,c
  2038   000EB4  5807               	subwfb	(delay@i+1)^0,w,c
  2039   000EB6  5003               	movf	(delay@time+2)^0,w,c
  2040   000EB8  5808               	subwfb	(delay@i+2)^0,w,c
  2041   000EBA  5009               	movf	(delay@i+3)^0,w,c
  2042   000EBC  0A80               	xorlw	128
  2043   000EBE  6E05               	movwf	??_delay^0,c
  2044   000EC0  5004               	movf	(delay@time+3)^0,w,c
  2045   000EC2  0A80               	xorlw	128
  2046   000EC4  5805               	subwfb	??_delay^0,w,c
  2047   000EC6  A0D8               	btfss	status,0,c
  2048   000EC8  EF68  F007         	goto	u561
  2049   000ECC  EF6A  F007         	goto	u560
  2050   000ED0                     u561:
  2051   000ED0  EF51  F007         	goto	l1292
  2052   000ED4                     u560:
  2053   000ED4  0012               	return		;funcret
  2054   000ED6                     __end_of_delay:
  2055                           	callstack 0
  2056                           
  2057                           	psect	rparam
  2058   000000                     tosu	equ	0xFFF
  2059                           tosh	equ	0xFFE
  2060                           tosl	equ	0xFFD
  2061                           stkptr	equ	0xFFC
  2062                           pclatu	equ	0xFFB
  2063                           pclath	equ	0xFFA
  2064                           pcl	equ	0xFF9
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodh	equ	0xFF4
  2070                           prodl	equ	0xFF3
  2071                           indf0	equ	0xFEF
  2072                           postinc0	equ	0xFEE
  2073                           postdec0	equ	0xFED
  2074                           preinc0	equ	0xFEC
  2075                           plusw0	equ	0xFEB
  2076                           fsr0h	equ	0xFEA
  2077                           fsr0l	equ	0xFE9
  2078                           wreg	equ	0xFE8
  2079                           indf1	equ	0xFE7
  2080                           postinc1	equ	0xFE6
  2081                           postdec1	equ	0xFE5
  2082                           preinc1	equ	0xFE4
  2083                           plusw1	equ	0xFE3
  2084                           fsr1h	equ	0xFE2
  2085                           fsr1l	equ	0xFE1
  2086                           bsr	equ	0xFE0
  2087                           indf2	equ	0xFDF
  2088                           postinc2	equ	0xFDE
  2089                           postdec2	equ	0xFDD
  2090                           preinc2	equ	0xFDC
  2091                           plusw2	equ	0xFDB
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        15
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdstring@p	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[11]), STR_2(CODE[15]), STR_3(CODE[15]), STR_4(CODE[14]), 
		 -> STR_5(CODE[11]), STR_6(CODE[15]), STR_7(CODE[14]), STR_8(CODE[12]), 
		 -> STR_9(CODE[12]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> new(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> inp(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_lcdstring
    _keypad->_lcdstring
    _lcdstring->_lcddisp
    _lcddisp->_delay
    _lcdctrl->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   16349
                                             11 COMRAM     8     8      0
                              _delay
                             _keypad
                            _lcdctrl
                            _lcddisp
                          _lcdstring
                            _newcode
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     416
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _newcode                                              0     0      0    6389
                             _keypad
                            _lcdctrl
                            _lcddisp
 ---------------------------------------------------------------------------------
 (2) _keypad                                               0     0      0    4125
                            _lcdctrl
                            _lcddisp
                          _lcdstring
 ---------------------------------------------------------------------------------
 (3) _lcdstring                                            1     0      1    1861
                                             10 COMRAM     1     0      1
                            _lcddisp
 ---------------------------------------------------------------------------------
 (2) _lcddisp                                              1     1      0    1132
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _lcdctrl                                              1     1      0    1132
                                              9 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                9     5      4    1110
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _keypad
     _lcdctrl
       _delay
     _lcddisp
       _delay
     _lcdstring
       _lcddisp
   _lcdctrl
   _lcddisp
   _lcdstring
   _newcode
     _keypad
     _lcdctrl
     _lcddisp
   _strcmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRlll       281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      2F       1       49.5%
BITBIGSFRh          3E      0       0      16        0.0%
BITBIGSFRlh         2B      0       0      17        0.0%
BITBIGSFRllh         F      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      20        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 29 09:32:59 2024

                      _a 002F                       l93 095A                       l77 0AA8  
                     l79 077A                       _c1 002D                       _c2 002B  
                    l102 0A96                      l112 0ED4                      l115 0F44  
                    l124 0FAE                      l109 0EAE                      l118 0F0C  
                    l142 0AAC                      l151 0B2A                      l143 0AC4  
                    l160 0B92                      l144 0D48                      l136 0DD6  
                    l153 0B3E                      l162 0BA6                      l154 0B66  
                    l146 0AD8                      l171 0C20                      l155 0B52  
                    l147 0B12                      l139 0E2E                      l148 0AEC  
                    l165 0C24                      l174 0C38                      l158 0B7E  
                    l167 0BD8                      l176 0D44                      l178 0C6C  
                    l874 0E8C                      _RC0 7C10                      _RC1 7C11  
                    _RB4 7C0C                      _RC2 7C12                      _RB5 7C0D  
                    _RB6 7C0E                      _RB7 7C0F                      u600 0AE6  
                    u601 0AE2                      u610 0AFA                      u611 0AF6  
                    u700 0BCC                      u620 0B24                      u701 0BC8  
                    u621 0B20                      u710 0BE6                      u630 0B38  
                    u711 0BE2                      u631 0B34                      u560 0ED4  
                    u800 0CF2                      u720 0BF8                      u640 0B4C  
                    u561 0ED0                      u801 0CEE                      u721 0BF4  
                    u641 0B48                      u570 0FAE                      u810 0D2A  
                    u730 0C16                      u650 0B60                      u571 0FAA  
                    u811 0D26                      u731 0C12                      u651 0B5C  
                    u740 0C32                      u660 0B78                      u580 0ABE  
                    u820 0D9A                      u900 06A6                      u741 0C2E  
                    u661 0B74                      u581 0ABA                      u821 0D96  
                    u901 06A2                      u750 0C46                      u670 0B8C  
                    u590 0AD2                      u830 0DE4                      u910 06BC  
                    u751 0C42                      u671 0B88                      u591 0ACE  
                    u831 0DE0                      u911 06B8                      u760 0C60  
                    u680 0BA0                      u840 0DF2                      u920 072A  
                    u761 0C5C                      u681 0B9C                      u841 0DEE  
                    u921 0726                      u770 0C7A                      u690 0BB8  
                    u850 0E00                      u930 0788                      u771 0C76  
                    u691 0BB4                      u851 0DFC                      u931 0784  
                    u780 0C8C                      u860 0E0E                      u940 0796  
                    u781 0C88                      u861 0E0A                      u941 0792  
                    u790 0CC4                      u870 0E2E                      u950 07A4  
                    u791 0CC0                      u871 0E2A                      u951 07A0  
                    u880 0E56                      u960 07B2                      u881 0E52  
                    u961 07AE                      u890 0E6C                      u970 07E0  
                    u891 0E68                      u971 07DC                      u980 07FE  
                    u981 07FA                      u990 0868                      u991 0864  
                    _inp 001E                      _new 0019                      wreg 0FE8  
                   l1300 0EE2                     l1310 0F18                     l1302 0EF6  
                   l1312 0F1A                     l1304 0EF8                     l1320 0F80  
                   l1314 0F2E                     l1306 0F10                     l1322 0F90  
                   l1410 0BD4                     l1402 0BA6                     l1330 0ABE  
                   l1316 0F30                     l1308 0F14                     l1324 0F92  
                   l1420 0C32                     l1412 0BE6                     l1404 0BAA  
                   l1500 0DAA                     l1318 0F7C                     l1430 0C60  
                   l1414 0BF8                     l1406 0BB8                     l1350 0B0C  
                   l1342 0AE6                     l1326 0AAC                     l1510 0E00  
                   l1502 0DB0                     l1440 0C9A                     l1432 0C68  
                   l1416 0C02                     l1408 0BCC                     l1336 0AD2  
                   l1328 0AB0                     l1512 0E0E                     l1504 0DC0  
                   l1520 0E38                     l1600 07CE                     l1290 0E8E  
                   l1450 0CD6                     l1442 0CA0                     l1434 0C7A  
                   l1426 0C46                     l1418 0C16                     l1370 0B4C  
                   l1354 0B12                     l1514 0E12                     l1506 0DE4  
                   l1522 0E56                     l1602 07E0                     l1530 0662  
                   l1292 0EA2                     l1460 0D00                     l1444 0CA8  
                   l1436 0C8C                     l1428 0C4C                     l1380 0B66  
                   l1364 0B38                     l1356 0B16                     l1348 0AFA  
                   l1508 0DF2                     l1524 0E6C                     l1516 0E30  
                   l1700 0A74                     l1604 07FE                     l1620 086C  
                   l1540 0682                     l1532 0668                     l1294 0ED8  
                   l1470 0D3C                     l1462 0D06                     l1438 0C92  
                   l1454 0CDE                     l1390 0B8C                     l1382 0B6A  
                   l1358 0B24                     l1518 0E34                     l1702 0A90  
                   l1630 0882                     l1622 0872                     l1614 0814  
                   l1606 0804                     l1542 068A                     l1534 066E  
                   l1296 0EDC                     l1464 0D0E                     l1456 0CF2  
                   l1448 0CC8                     l1384 0B78                     l1376 0B60  
                   l1640 08F8                     l1632 08B6                     l1624 087A  
                   l1616 0848                     l1608 080C                     l1560 06EE  
                   l1552 06C0                     l1536 0674                     l1528 0652  
                   l1298 0EE0                     l1458 0CF8                     l1482 0D58  
                   l1474 0D4A                     l1642 0900                     l1634 08BA  
                   l1618 084C                     l1562 06F2                     l1554 06CA  
                   l1546 06AA                     l1538 067C                     l1468 0D2E  
                   l1396 0BA0                     l1492 0D7A                     l1484 0D62  
                   l1476 0D50                     l1660 0976                     l1652 0942  
                   l1644 0914                     l1636 08DA                     l1580 0740  
                   l1572 072E                     l1564 06FA                     l1556 06DA  
                   l1494 0D7E                     l1486 0D72                     l1670 09B8  
                   l1662 0984                     l1654 0948                     l1646 091A  
                   l1638 08EC                     l1590 0796                     l1582 0746  
                   l1566 0706                     l1558 06E6                     l1496 0D9A  
                   l1680 09CE                     l1672 09BE                     l1664 0992  
                   l1656 094E                     l1648 0922                     l1592 07A4  
                   l1584 074C                     l1576 0736                     l1568 070E  
                   l1498 0DA4                     l1690 0A34                     l1682 0A02  
                   l1674 09C6                     l1658 0968                     l1594 07B2  
                   l1586 075C                     l1684 0A06                     l1668 099A  
                   l1588 0788                     l1686 0A26                     l1598 07BA  
                   l1696 0A3C                     l1688 0A2C                     l1698 0A70  
                   STR_1 0645                     STR_2 0610                     STR_3 0601  
                   STR_4 061F                     STR_5 0645                     STR_6 0601  
                   STR_7 061F                     STR_8 062D                     STR_9 0639  
                   u1000 08D6                     u1001 08D2                     u1010 08EC  
                   u1011 08E8                     u1100 0AA4                     u1020 093E  
                   u1101 0AA0                     u1021 093A                     u1030 0968  
                   u1031 0964                     u1040 0976                     u1041 0972  
                   u1050 0984                     u1051 0980                     u1060 0992  
                   u1061 098E                     u1070 09B8                     u1071 09B4  
                   u1080 0A22                     u1081 0A1E                     u1090 0A90  
                   u1091 0A8C                     _flag 0025                     _main 0652  
                   _pass 0014                     fsr1h 0FE2                     fsr2h 0FDA  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   start 0000             ___param_bank 0000                    ?_main 0001  
                  _PORTB 0F81                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_lcddisp 0F0E  
        __end_of_lcdctrl 0F46                    _flag2 0023                    _delay 0E8E  
                  _index 0029          __end_of_newcode 0E30                    main@j 000C  
                  tablat 0FF5                    status 0FD8          __initialization 0F46  
           __end_of_main 0AAC                   ??_main 000C            __activetblptr 0002  
                 ?_delay 0001                   _ADCON1 0FC1                   _index2 0027  
                 _keypad 0AAC                   delay@i 0006                   clear_0 0F6C  
                 isa$std 0001                   _strcmp 0E30                ??_lcddisp 000A  
              ??_lcdctrl 000A             __pdataCOMRAM 0014                ??_newcode 000C  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0F72  
          ___rparam_used 0001           __pcstackCOMRAM 0001            __end_of_delay 0ED6  
                ??_delay 0005                  ?_keypad 0001                  ?_strcmp 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0F46                  __ramtop 0600        __end_of_lcdstring 0FB0  
                __ptext0 0652                  __ptext1 0E30                  __ptext2 0D4A  
                __ptext3 0AAC                  __ptext4 0F7C                  __ptext5 0ED6  
                __ptext6 0F0E                  __ptext7 0E8E                  _lcddisp 0ED6  
                _lcdctrl 0F0E                  _newcode 0D4A     end_of_initialization 0F72  
          __Lmediumconst 0000                  postdec1 0FE5                  postinc0 0FEE  
                postinc1 0FE6                  postinc2 0FDE                  strcmp@l 0001  
                strcmp@r 0002            __pidataCOMRAM 0FB0           __end_of_keypad 0D4A  
         __end_of_strcmp 0E8E      start_initialization 0F46               lcdstring@p 000B  
               ??_keypad 000C                 ??_strcmp 0003              __pbssCOMRAM 0023  
               ?_lcddisp 0001                 ?_lcdctrl 0001              __smallconst 0600  
               ?_newcode 0001                _lcdstring 0F7C                delay@time 0001  
             ?_lcdstring 000B                copy_data0 0F5A                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 main@j_91 000E  
               main@j_94 0010                 main@j_96 0012                 lcddisp@b 000A  
               lcdctrl@a 000A              ??_lcdstring 000C  
