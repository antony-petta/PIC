

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 02 16:22:23 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13   000000                     
    14                           ; Generated 17/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4580 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _RC2	set	31762
    49   000000                     _RC1	set	31761
    50   000000                     _TRISC	set	3988
    51   000000                     _RC0	set	31760
    52   000000                     _TRISD	set	3989
    53   000000                     _PORTD	set	3971
    54                           
    55                           ; #config settings
    56                           
    57                           	psect	cinit
    58   000672                     __pcinit:
    59                           	callstack 0
    60   000672                     start_initialization:
    61                           	callstack 0
    62   000672                     __initialization:
    63                           	callstack 0
    64   000672                     end_of_initialization:
    65                           	callstack 0
    66   000672                     __end_of__initialization:
    67                           	callstack 0
    68   000672  0100               	movlb	0
    69   000674  EF2D  F003         	goto	_main	;jump to C main() function
    70                           
    71                           	psect	cstackCOMRAM
    72   000001                     __pcstackCOMRAM:
    73                           	callstack 0
    74   000001                     delay@time:
    75                           	callstack 0
    76                           
    77                           ; 2 bytes @ 0x0
    78   000001                     	ds	2
    79   000003                     ??_delay:
    80                           
    81                           ; 1 bytes @ 0x2
    82   000003                     	ds	1
    83   000004                     delay@i:
    84                           	callstack 0
    85                           
    86                           ; 2 bytes @ 0x3
    87   000004                     	ds	2
    88   000006                     lcdctrl@a:
    89                           	callstack 0
    90                           
    91                           ; 1 bytes @ 0x5
    92   000006                     	ds	1
    93   000007                     
    94                           ; 1 bytes @ 0x6
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 4 in file "lcd.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, status,0, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   114 ;;      Params:         0       0       0       0       0       0       0
   115 ;;      Locals:         0       0       0       0       0       0       0
   116 ;;      Temps:          0       0       0       0       0       0       0
   117 ;;      Totals:         0       0       0       0       0       0       0
   118 ;;Total ram usage:        0 bytes
   119 ;; Hardware stack levels required when called: 2
   120 ;; This function calls:
   121 ;;		_lcdctrl
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128   00065A                     __ptext0:
   129                           	callstack 0
   130   00065A                     _main:
   131                           	callstack 29
   132   00065A                     
   133                           ;lcd.c: 6:     TRISC=TRISD=0;
   134   00065A  0E00               	movlw	0
   135   00065C  6E95               	movwf	149,c	;volatile
   136   00065E  CF95 FF94          	movff	3989,3988	;volatile
   137   000662                     
   138                           ;lcd.c: 8:     lcdctrl(0x0f);
   139   000662  0E0F               	movlw	15
   140   000664  EC19  F003         	call	_lcdctrl
   141   000668                     
   142                           ;lcd.c: 9:     lcdctrl('a');
   143   000668  0E61               	movlw	97
   144   00066A  EC19  F003         	call	_lcdctrl
   145   00066E  EF00  F000         	goto	start
   146   000672                     __end_of_main:
   147                           	callstack 0
   148                           
   149 ;; *************** function _lcdctrl *****************
   150 ;; Defined at:
   151 ;;		line 11 in file "lcd.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;  a               1    wreg     unsigned char 
   154 ;; Auto vars:     Size  Location     Type
   155 ;;  a               1    5[COMRAM] unsigned char 
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, status,2, status,0, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   165 ;;      Params:         0       0       0       0       0       0       0
   166 ;;      Locals:         1       0       0       0       0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0
   168 ;;      Totals:         1       0       0       0       0       0       0
   169 ;;Total ram usage:        1 bytes
   170 ;; Hardware stack levels used: 1
   171 ;; Hardware stack levels required when called: 1
   172 ;; This function calls:
   173 ;;		_delay
   174 ;; This function is called by:
   175 ;;		_main
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           	psect	text1
   180   000632                     __ptext1:
   181                           	callstack 0
   182   000632                     _lcdctrl:
   183                           	callstack 29
   184                           
   185                           ;incstack = 0
   186                           ;lcdctrl@a stored from wreg
   187   000632  6E06               	movwf	lcdctrl@a^0,c
   188   000634                     
   189                           ;lcd.c: 12:     RC0=0;
   190   000634  9082               	bcf	3970,0,c	;volatile
   191                           
   192                           ;lcd.c: 13:     RC1=0;
   193   000636  9282               	bcf	3970,1,c	;volatile
   194   000638                     
   195                           ;lcd.c: 14:     PORTD=a;
   196   000638  C006  FF83         	movff	lcdctrl@a,3971	;volatile
   197   00063C                     
   198                           ;lcd.c: 15:     RC2=1;
   199   00063C  8482               	bsf	3970,2,c	;volatile
   200   00063E                     
   201                           ;lcd.c: 16:     delay(100);
   202   00063E  0E00               	movlw	0
   203   000640  6E02               	movwf	(delay@time+1)^0,c
   204   000642  0E64               	movlw	100
   205   000644  6E01               	movwf	delay@time^0,c
   206   000646  EC01  F003         	call	_delay	;wreg free
   207   00064A                     
   208                           ;lcd.c: 17:     RC2=0;
   209   00064A  9482               	bcf	3970,2,c	;volatile
   210   00064C                     
   211                           ;lcd.c: 18:     delay(100);
   212   00064C  0E00               	movlw	0
   213   00064E  6E02               	movwf	(delay@time+1)^0,c
   214   000650  0E64               	movlw	100
   215   000652  6E01               	movwf	delay@time^0,c
   216   000654  EC01  F003         	call	_delay	;wreg free
   217   000658  0012               	return		;funcret
   218   00065A                     __end_of_lcdctrl:
   219                           	callstack 0
   220                           
   221 ;; *************** function _delay *****************
   222 ;; Defined at:
   223 ;;		line 21 in file "lcd.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;  time            2    0[COMRAM] int 
   226 ;; Auto vars:     Size  Location     Type
   227 ;;  i               2    3[COMRAM] int 
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   237 ;;      Params:         2       0       0       0       0       0       0
   238 ;;      Locals:         2       0       0       0       0       0       0
   239 ;;      Temps:          1       0       0       0       0       0       0
   240 ;;      Totals:         5       0       0       0       0       0       0
   241 ;;Total ram usage:        5 bytes
   242 ;; Hardware stack levels used: 1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		_lcdctrl
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text2
   251   000602                     __ptext2:
   252                           	callstack 0
   253   000602                     _delay:
   254                           	callstack 29
   255   000602                     
   256                           ;lcd.c: 22:     for(int i=0;i<time;i++);
   257   000602  0E00               	movlw	0
   258   000604  6E05               	movwf	(delay@i+1)^0,c
   259   000606  0E00               	movlw	0
   260   000608  6E04               	movwf	delay@i^0,c
   261   00060A  EF09  F003         	goto	l734
   262   00060E                     l732:
   263   00060E  4A04               	infsnz	delay@i^0,f,c
   264   000610  2A05               	incf	(delay@i+1)^0,f,c
   265   000612                     l734:
   266   000612  5001               	movf	delay@time^0,w,c
   267   000614  5C04               	subwf	delay@i^0,w,c
   268   000616  5005               	movf	(delay@i+1)^0,w,c
   269   000618  0A80               	xorlw	128
   270   00061A  6E03               	movwf	??_delay^0,c
   271   00061C  5002               	movf	(delay@time+1)^0,w,c
   272   00061E  0A80               	xorlw	128
   273   000620  5803               	subwfb	??_delay^0,w,c
   274   000622  A0D8               	btfss	status,0,c
   275   000624  EF16  F003         	goto	u21
   276   000628  EF18  F003         	goto	u20
   277   00062C                     u21:
   278   00062C  EF07  F003         	goto	l732
   279   000630                     u20:
   280   000630  0012               	return		;funcret
   281   000632                     __end_of_delay:
   282                           	callstack 0
   283                           
   284                           	psect	smallconst
   285   000600                     __psmallconst:
   286                           	callstack 0
   287   000600  00                 	db	0
   288   000601  00                 	db	0	; dummy byte at the end
   289   000000                     
   290                           	psect	rparam
   291   000000                     tosu	equ	0xFFF
   292                           tosh	equ	0xFFE
   293                           tosl	equ	0xFFD
   294                           stkptr	equ	0xFFC
   295                           pclatu	equ	0xFFB
   296                           pclath	equ	0xFFA
   297                           pcl	equ	0xFF9
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           prodh	equ	0xFF4
   303                           prodl	equ	0xFF3
   304                           indf0	equ	0xFEF
   305                           postinc0	equ	0xFEE
   306                           postdec0	equ	0xFED
   307                           preinc0	equ	0xFEC
   308                           plusw0	equ	0xFEB
   309                           fsr0h	equ	0xFEA
   310                           fsr0l	equ	0xFE9
   311                           wreg	equ	0xFE8
   312                           indf1	equ	0xFE7
   313                           postinc1	equ	0xFE6
   314                           postdec1	equ	0xFE5
   315                           preinc1	equ	0xFE4
   316                           plusw1	equ	0xFE3
   317                           fsr1h	equ	0xFE2
   318                           fsr1l	equ	0xFE1
   319                           bsr	equ	0xFE0
   320                           indf2	equ	0xFDF
   321                           postinc2	equ	0xFDE
   322                           postdec2	equ	0xFDD
   323                           preinc2	equ	0xFDC
   324                           plusw2	equ	0xFDB
   325                           fsr2h	equ	0xFDA
   326                           fsr2l	equ	0xFD9
   327                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcdctrl
    _lcdctrl->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     220
                            _lcdctrl
 ---------------------------------------------------------------------------------
 (1) _lcdctrl                                              1     1      0     220
                                              5 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdctrl
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6A      0       0      16        0.0%
BITBIGSFRlh         10      0       0      17        0.0%
BITBIGSFRll        282      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 02 16:22:23 2024

                     l21 066E                       l30 0630                       l24 0658  
                     u20 0630                       u21 062C                      l730 0602  
                    l732 060E                      l740 063C                      l734 0612  
                    l742 063E                      l750 0662                      l744 064A  
                    l736 0634                      l752 0668                      l746 064C  
                    l738 0638                      l748 065A                      _RC0 7C10  
                    _RC1 7C11                      _RC2 7C12                     _main 065A  
                   start 0000             ___param_bank 0000                    ?_main 0001  
                  _PORTD 0F83                    _TRISC 0F94                    _TRISD 0F95  
        __end_of_lcdctrl 065A                    _delay 0602                    status 0FD8  
        __initialization 0672             __end_of_main 0672                   ??_main 0007  
          __activetblptr 0000                   ?_delay 0001                   delay@i 0004  
                 isa$std 0001                ??_lcdctrl 0006             __mediumconst 0000  
             __accesstop 0060  __end_of__initialization 0672            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_delay 0632                  ??_delay 0003  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0672                  __ramtop 0600                  __ptext0 065A  
                __ptext1 0632                  __ptext2 0602                  _lcdctrl 0632  
   end_of_initialization 0672      start_initialization 0672                 ?_lcdctrl 0001  
            __smallconst 0600                delay@time 0001                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000                 lcdctrl@a 0006  
