

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 26 09:16:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4580 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _RCREG	set	4014
    51   000000                     _TXREG	set	4013
    52   000000                     _SPBRG	set	4015
    53   000000                     _RC1	set	31761
    54   000000                     _RCIF	set	31989
    55   000000                     _LATD	set	3980
    56   000000                     _TRISC	set	3988
    57   000000                     _RC0	set	31760
    58   000000                     _RCSTA	set	4011
    59   000000                     _TXSTA	set	4012
    60   000000                     _TRISD	set	3989
    61   000000                     _TXIF	set	31988
    62   000000                     _PORTD	set	3971
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67   007E0A                     __pcinit:
    68                           	callstack 0
    69   007E0A                     start_initialization:
    70                           	callstack 0
    71   007E0A                     __initialization:
    72                           	callstack 0
    73   007E0A                     end_of_initialization:
    74                           	callstack 0
    75   007E0A                     __end_of__initialization:
    76                           	callstack 0
    77   007E0A  0100               	movlb	0
    78   007E0C  EF4E  F03F         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81   000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83   000001                     trx@a:
    84                           	callstack 0
    85   000001                     delay@i:
    86                           	callstack 0
    87                           
    88                           ; 2 bytes @ 0x0
    89   000001                     	ds	2
    90   000003                     delay@j:
    91                           	callstack 0
    92                           
    93                           ; 2 bytes @ 0x2
    94   000003                     	ds	2
    95   000005                     lcdctrl@a:
    96                           	callstack 0
    97                           
    98                           ; 2 bytes @ 0x4
    99   000005                     	ds	2
   100   000007                     main@c:
   101                           	callstack 0
   102                           
   103                           ; 1 bytes @ 0x6
   104   000007                     	ds	1
   105                           
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 7 in file "trx_rx.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;  c               1    6[COMRAM] unsigned char 
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, status,2, status,0, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   125 ;;      Params:         0       0       0       0       0       0       0
   126 ;;      Locals:         1       0       0       0       0       0       0
   127 ;;      Temps:          0       0       0       0       0       0       0
   128 ;;      Totals:         1       0       0       0       0       0       0
   129 ;;Total ram usage:        1 bytes
   130 ;; Hardware stack levels required when called: 2
   131 ;; This function calls:
   132 ;;		_lcdctrl
   133 ;;		_rx
   134 ;;		_trx
   135 ;; This function is called by:
   136 ;;		Startup code after reset
   137 ;; This function uses a non-reentrant model
   138 ;;
   139                           
   140                           	psect	text0
   141   007E9C                     __ptext0:
   142                           	callstack 0
   143   007E9C                     _main:
   144                           	callstack 29
   145   007E9C                     
   146                           ;trx_rx.c: 9:     TRISC=0X80;
   147   007E9C  0E80               	movlw	128
   148   007E9E  6E94               	movwf	148,c	;volatile
   149                           
   150                           ;trx_rx.c: 10:     TRISD=0X00;
   151   007EA0  0E00               	movlw	0
   152   007EA2  6E95               	movwf	149,c	;volatile
   153                           
   154                           ;trx_rx.c: 11:     TXSTA=0X24;
   155   007EA4  0E24               	movlw	36
   156   007EA6  6EAC               	movwf	172,c	;volatile
   157                           
   158                           ;trx_rx.c: 12:     RCSTA=0X90;
   159   007EA8  0E90               	movlw	144
   160   007EAA  6EAB               	movwf	171,c	;volatile
   161                           
   162                           ;trx_rx.c: 13:     SPBRG=129;
   163   007EAC  0E81               	movlw	129
   164   007EAE  6EAF               	movwf	175,c	;volatile
   165   007EB0                     
   166                           ;trx_rx.c: 14:     lcdctrl(0X38);
   167   007EB0  0E00               	movlw	0
   168   007EB2  6E06               	movwf	(lcdctrl@a+1)^0,c
   169   007EB4  0E38               	movlw	56
   170   007EB6  6E05               	movwf	lcdctrl@a^0,c
   171   007EB8  EC08  F03F         	call	_lcdctrl	;wreg free
   172   007EBC                     
   173                           ;trx_rx.c: 15:  lcdctrl(0X01);
   174   007EBC  0E00               	movlw	0
   175   007EBE  6E06               	movwf	(lcdctrl@a+1)^0,c
   176   007EC0  0E01               	movlw	1
   177   007EC2  6E05               	movwf	lcdctrl@a^0,c
   178   007EC4  EC08  F03F         	call	_lcdctrl	;wreg free
   179   007EC8                     
   180                           ;trx_rx.c: 16:  lcdctrl(0x0F);
   181   007EC8  0E00               	movlw	0
   182   007ECA  6E06               	movwf	(lcdctrl@a+1)^0,c
   183   007ECC  0E0F               	movlw	15
   184   007ECE  6E05               	movwf	lcdctrl@a^0,c
   185   007ED0  EC08  F03F         	call	_lcdctrl	;wreg free
   186   007ED4                     
   187                           ;trx_rx.c: 17:  lcdctrl(0X0E);
   188   007ED4  0E00               	movlw	0
   189   007ED6  6E06               	movwf	(lcdctrl@a+1)^0,c
   190   007ED8  0E0E               	movlw	14
   191   007EDA  6E05               	movwf	lcdctrl@a^0,c
   192   007EDC  EC08  F03F         	call	_lcdctrl	;wreg free
   193   007EE0                     
   194                           ;trx_rx.c: 18:  lcdctrl(0X80);
   195   007EE0  0E00               	movlw	0
   196   007EE2  6E06               	movwf	(lcdctrl@a+1)^0,c
   197   007EE4  0E80               	movlw	128
   198   007EE6  6E05               	movwf	lcdctrl@a^0,c
   199   007EE8  EC08  F03F         	call	_lcdctrl	;wreg free
   200   007EEC                     l824:
   201                           
   202                           ;trx_rx.c: 22:     {;trx_rx.c: 24:         c=rx();
   203   007EEC  EC10  F03F         	call	_rx	;wreg free
   204   007EF0  6E07               	movwf	main@c^0,c
   205   007EF2                     
   206                           ;trx_rx.c: 26:         trx(c);
   207   007EF2  5007               	movf	main@c^0,w,c
   208   007EF4  EC19  F03F         	call	_trx
   209   007EF8  EF76  F03F         	goto	l824
   210   007EFC  EF00  F000         	goto	start
   211   007F00                     __end_of_main:
   212                           	callstack 0
   213                           
   214 ;; *************** function _trx *****************
   215 ;; Defined at:
   216 ;;		line 31 in file "trx_rx.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;  a               1    wreg     unsigned char 
   219 ;; Auto vars:     Size  Location     Type
   220 ;;  a               1    0[COMRAM] unsigned char 
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   230 ;;      Params:         0       0       0       0       0       0       0
   231 ;;      Locals:         1       0       0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0
   233 ;;      Totals:         1       0       0       0       0       0       0
   234 ;;Total ram usage:        1 bytes
   235 ;; Hardware stack levels used: 1
   236 ;; This function calls:
   237 ;;		Nothing
   238 ;; This function is called by:
   239 ;;		_main
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text1
   244   007E32                     __ptext1:
   245                           	callstack 0
   246   007E32                     _trx:
   247                           	callstack 30
   248                           
   249                           ;incstack = 0
   250                           ;trx@a stored from wreg
   251   007E32  6E01               	movwf	trx@a^0,c
   252   007E34                     
   253                           ;trx_rx.c: 31: void trx(char a);trx_rx.c: 32: {;trx_rx.c: 33:     TXREG=a;
   254   007E34  C001  FFAD         	movff	trx@a,4013	;volatile
   255   007E38                     l48:
   256   007E38  A89E               	btfss	3998,4,c	;volatile
   257   007E3A  EF21  F03F         	goto	u41
   258   007E3E  EF23  F03F         	goto	u40
   259   007E42                     u41:
   260   007E42  EF1C  F03F         	goto	l48
   261   007E46                     u40:
   262   007E46                     
   263                           ;trx_rx.c: 35:     TXIF=0;
   264   007E46  989E               	bcf	3998,4,c	;volatile
   265   007E48  0012               	return		;funcret
   266   007E4A                     __end_of_trx:
   267                           	callstack 0
   268                           
   269 ;; *************** function _rx *****************
   270 ;; Defined at:
   271 ;;		line 38 in file "trx_rx.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      unsigned char 
   278 ;; Registers used:
   279 ;;		wreg, status,2
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   285 ;;      Params:         0       0       0       0       0       0       0
   286 ;;      Locals:         0       0       0       0       0       0       0
   287 ;;      Temps:          0       0       0       0       0       0       0
   288 ;;      Totals:         0       0       0       0       0       0       0
   289 ;;Total ram usage:        0 bytes
   290 ;; Hardware stack levels used: 1
   291 ;; This function calls:
   292 ;;		Nothing
   293 ;; This function is called by:
   294 ;;		_main
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text2
   299   007E20                     __ptext2:
   300                           	callstack 0
   301   007E20                     _rx:
   302                           	callstack 30
   303   007E20                     l54:
   304   007E20  AA9E               	btfss	3998,5,c	;volatile
   305   007E22  EF15  F03F         	goto	u31
   306   007E26  EF17  F03F         	goto	u30
   307   007E2A                     u31:
   308   007E2A  EF10  F03F         	goto	l54
   309   007E2E                     u30:
   310   007E2E                     
   311                           ;trx_rx.c: 41:     return(RCREG);
   312   007E2E  50AE               	movf	174,w,c	;volatile
   313   007E30  0012               	return		;funcret
   314   007E32                     __end_of_rx:
   315                           	callstack 0
   316                           
   317 ;; *************** function _lcdctrl *****************
   318 ;; Defined at:
   319 ;;		line 52 in file "trx_rx.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;  a               2    4[COMRAM] int 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   333 ;;      Params:         2       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0
   336 ;;      Totals:         2       0       0       0       0       0       0
   337 ;;Total ram usage:        2 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; Hardware stack levels required when called: 1
   340 ;; This function calls:
   341 ;;		_delay
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text3
   348   007E10                     __ptext3:
   349                           	callstack 0
   350   007E10                     _lcdctrl:
   351                           	callstack 29
   352   007E10                     
   353                           ;trx_rx.c: 53:     PORTD=a;
   354   007E10  C005  FF83         	movff	lcdctrl@a,3971	;volatile
   355                           
   356                           ;trx_rx.c: 54:     RC0=0;
   357   007E14  9082               	bcf	3970,0,c	;volatile
   358                           
   359                           ;trx_rx.c: 55:     RC1=1;
   360   007E16  8282               	bsf	3970,1,c	;volatile
   361   007E18                     
   362                           ;trx_rx.c: 56:     delay();
   363   007E18  EC25  F03F         	call	_delay	;wreg free
   364   007E1C                     
   365                           ;trx_rx.c: 57:     RC1=0;
   366   007E1C  9282               	bcf	3970,1,c	;volatile
   367   007E1E  0012               	return		;funcret
   368   007E20                     __end_of_lcdctrl:
   369                           	callstack 0
   370                           
   371 ;; *************** function _delay *****************
   372 ;; Defined at:
   373 ;;		line 59 in file "trx_rx.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;  j               2    2[COMRAM] int 
   378 ;;  i               2    0[COMRAM] int 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   388 ;;      Params:         0       0       0       0       0       0       0
   389 ;;      Locals:         4       0       0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0       0       0
   391 ;;      Totals:         4       0       0       0       0       0       0
   392 ;;Total ram usage:        4 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_lcdctrl
   398 ;;		_lcddisp
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text4
   403   007E4A                     __ptext4:
   404                           	callstack 0
   405   007E4A                     _delay:
   406                           	callstack 29
   407   007E4A                     
   408                           ;trx_rx.c: 61:     int i,j;;trx_rx.c: 62:     for(i=0;i<=200;i++)
   409   007E4A  0E00               	movlw	0
   410   007E4C  6E02               	movwf	(delay@i+1)^0,c
   411   007E4E  0E00               	movlw	0
   412   007E50  6E01               	movwf	delay@i^0,c
   413   007E52                     l752:
   414                           
   415                           ;trx_rx.c: 63:     {;trx_rx.c: 64:         for(j=0;j<=200;j++)
   416   007E52  0E00               	movlw	0
   417   007E54  6E04               	movwf	(delay@j+1)^0,c
   418   007E56  0E00               	movlw	0
   419   007E58  6E03               	movwf	delay@j^0,c
   420   007E5A                     l758:
   421                           
   422                           ;trx_rx.c: 65:         {;trx_rx.c: 66:         }
   423   007E5A  4A03               	infsnz	delay@j^0,f,c
   424   007E5C  2A04               	incf	(delay@j+1)^0,f,c
   425   007E5E  BE04               	btfsc	(delay@j+1)^0,7,c
   426   007E60  EF3B  F03F         	goto	u11
   427   007E64  5004               	movf	(delay@j+1)^0,w,c
   428   007E66  E109               	bnz	u10
   429   007E68  0EC9               	movlw	201
   430   007E6A  5C03               	subwf	delay@j^0,w,c
   431   007E6C  A0D8               	btfss	status,0,c
   432   007E6E  EF3B  F03F         	goto	u11
   433   007E72  EF3D  F03F         	goto	u10
   434   007E76                     u11:
   435   007E76  EF2D  F03F         	goto	l758
   436   007E7A                     u10:
   437   007E7A                     
   438                           ;trx_rx.c: 67:     }
   439   007E7A  4A01               	infsnz	delay@i^0,f,c
   440   007E7C  2A02               	incf	(delay@i+1)^0,f,c
   441   007E7E  BE02               	btfsc	(delay@i+1)^0,7,c
   442   007E80  EF4B  F03F         	goto	u21
   443   007E84  5002               	movf	(delay@i+1)^0,w,c
   444   007E86  E109               	bnz	u20
   445   007E88  0EC9               	movlw	201
   446   007E8A  5C01               	subwf	delay@i^0,w,c
   447   007E8C  A0D8               	btfss	status,0,c
   448   007E8E  EF4B  F03F         	goto	u21
   449   007E92  EF4D  F03F         	goto	u20
   450   007E96                     u21:
   451   007E96  EF29  F03F         	goto	l752
   452   007E9A                     u20:
   453   007E9A  0012               	return		;funcret
   454   007E9C                     __end_of_delay:
   455                           	callstack 0
   456                           
   457                           	psect	smallconst
   458   001400                     __psmallconst:
   459                           	callstack 0
   460   001400  00                 	db	0
   461   001401  00                 	db	0	; dummy byte at the end
   462   000000                     
   463                           	psect	rparam
   464   000000                     tosu	equ	0xFFF
   465                           tosh	equ	0xFFE
   466                           tosl	equ	0xFFD
   467                           stkptr	equ	0xFFC
   468                           pclatu	equ	0xFFB
   469                           pclath	equ	0xFFA
   470                           pcl	equ	0xFF9
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           prodh	equ	0xFF4
   476                           prodl	equ	0xFF3
   477                           indf0	equ	0xFEF
   478                           postinc0	equ	0xFEE
   479                           postdec0	equ	0xFED
   480                           preinc0	equ	0xFEC
   481                           plusw0	equ	0xFEB
   482                           fsr0h	equ	0xFEA
   483                           fsr0l	equ	0xFE9
   484                           wreg	equ	0xFE8
   485                           indf1	equ	0xFE7
   486                           postinc1	equ	0xFE6
   487                           postdec1	equ	0xFE5
   488                           preinc1	equ	0xFE4
   489                           plusw1	equ	0xFE3
   490                           fsr1h	equ	0xFE2
   491                           fsr1l	equ	0xFE1
   492                           bsr	equ	0xFE0
   493                           indf2	equ	0xFDF
   494                           postinc2	equ	0xFDE
   495                           postdec2	equ	0xFDD
   496                           preinc2	equ	0xFDC
   497                           plusw2	equ	0xFDB
   498                           fsr2h	equ	0xFDA
   499                           fsr2l	equ	0xFD9
   500                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcdctrl
    _lcdctrl->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     500
                                              6 COMRAM     1     1      0
                            _lcdctrl
                                 _rx
                                _trx
 ---------------------------------------------------------------------------------
 (1) _trx                                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rx                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdctrl                                              2     0      2     462
                                              4 COMRAM     2     0      2
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdctrl
     _delay
   _rx
   _trx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh        50      0       0      16        0.0%
BITBIGSFRhlh         C      0       0      17        0.0%
BITBIGSFRhll         8      0       0      18        0.0%
BITBIGSFRlh          7      0       0      19        0.0%
BITBIGSFRllh         8      0       0      20        0.0%
BITBIGSFRlll       282      0       0      21        0.0%
ABS                  0      0       0      22        0.0%
BIGRAM             5FF      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 26 09:16:45 2024

                     l50 7E46                       l51 7E48                       l70 7E9A  
                     l54 7E20                       l63 7E1E                       l48 7E38  
                     l57 7E30                       u10 7E7A                       u11 7E76  
                     u20 7E9A                       u21 7E96                       u30 7E2E  
                     u31 7E2A                       u40 7E46                       u41 7E42  
                     _rx 7E20                      ?_rx 0001                      l810 7E1C  
                    l820 7ED4                      l812 7E9C                      l806 7E10  
                    l822 7EE0                      l814 7EB0                      l760 7E5E  
                    l752 7E52                      l808 7E18                      l824 7EEC  
                    l816 7EBC                      l762 7E7A                      l746 7E4A  
                    l826 7EF2                      l818 7EC8                      l764 7E7E  
                    l772 7E20                      l758 7E5A                      l774 7E2E  
                    l778 7E34                      _RC0 7C10                      _RC1 7C11  
                    _trx 7E32                     ??_rx 0001                     ?_trx 0001  
                   _LATD 0F8C                     _RCIF 7CF5                     _TXIF 7CF4  
                   _main 7E9C                     trx@a 0001                     start 0000  
           ___param_bank 0000                    ??_trx 0001                    ?_main 0001  
                  _RCREG 0FAE                    _RCSTA 0FAB                    _SPBRG 0FAF  
                  _PORTD 0F83                    _TRISC 0F94                    _TRISD 0F95  
                  _TXREG 0FAD                    _TXSTA 0FAC          __end_of_lcdctrl 7E20  
                  _delay 7E4A                    main@c 0007                    status 0FD8  
        __initialization 7E0A             __end_of_main 7F00                   ??_main 0007  
          __activetblptr 0000                   ?_delay 0001                   delay@i 0001  
                 delay@j 0003                   isa$std 0001                ??_lcdctrl 0007  
           __mediumconst 0000               __accesstop 0060  __end_of__initialization 7E0A  
          ___rparam_used 0001           __pcstackCOMRAM 0001            __end_of_delay 7E9C  
             __end_of_rx 7E32                  ??_delay 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 1400                  __pcinit 7E0A  
                __ramtop 0600                  __ptext0 7E9C                  __ptext1 7E32  
                __ptext2 7E20                  __ptext3 7E10                  __ptext4 7E4A  
                _lcdctrl 7E10     end_of_initialization 7E0A      start_initialization 7E0A  
            __end_of_trx 7E4A                 ?_lcdctrl 0005              __smallconst 1400  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 0000  
               lcdctrl@a 0005  
